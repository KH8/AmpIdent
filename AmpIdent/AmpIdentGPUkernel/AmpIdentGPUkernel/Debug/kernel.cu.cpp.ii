#line 1 "Debug/kernel.cudafe1.cpp"
#line 1 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
#line 702 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\sal.h"
#pragma region Input Buffer SAL 1 compatibility macros
#line 1466 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\sal.h"
#pragma endregion Input Buffer SAL 1 compatibility macros
#line 61 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
#pragma pack ( push, 8 )
#line 29 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\vadefs.h"
#pragma pack ( push, 8 )
#line 48 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\vadefs.h"
extern "C" { typedef unsigned __w64 uintptr_t; }
#line 57 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\vadefs.h"
extern "C" { typedef char *va_list; }
#line 142 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\vadefs.h"
#pragma pack ( pop )
#line 430 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
typedef unsigned __w64 size_t; 
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"


































































#line 68 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"





















































































#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"










#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"








































#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"










#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"











#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"






#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"



#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"


























#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"


#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"







enum  cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};

#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"
#line 57 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"










































































































































































































#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"



























































#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"










enum  cudaError
{
    




    cudaSuccess                           =      0,
  
    



    cudaErrorMissingConfiguration         =      1,
  
    



    cudaErrorMemoryAllocation             =      2,
  
    



    cudaErrorInitializationError          =      3,
  
    







    cudaErrorLaunchFailure                =      4,
  
    






    cudaErrorPriorLaunchFailure           =      5,
  
    







    cudaErrorLaunchTimeout                =      6,
  
    






    cudaErrorLaunchOutOfResources         =      7,
  
    



    cudaErrorInvalidDeviceFunction        =      8,
  
    






    cudaErrorInvalidConfiguration         =      9,
  
    



    cudaErrorInvalidDevice                =     10,
  
    



    cudaErrorInvalidValue                 =     11,
  
    



    cudaErrorInvalidPitchValue            =     12,
  
    



    cudaErrorInvalidSymbol                =     13,
  
    


    cudaErrorMapBufferObjectFailed        =     14,
  
    


    cudaErrorUnmapBufferObjectFailed      =     15,
  
    



    cudaErrorInvalidHostPointer           =     16,
  
    



    cudaErrorInvalidDevicePointer         =     17,
  
    



    cudaErrorInvalidTexture               =     18,
  
    



    cudaErrorInvalidTextureBinding        =     19,
  
    




    cudaErrorInvalidChannelDescriptor     =     20,
  
    



    cudaErrorInvalidMemcpyDirection       =     21,
  
    







    cudaErrorAddressOfConstant            =     22,
  
    






    cudaErrorTextureFetchFailed           =     23,
  
    






    cudaErrorTextureNotBound              =     24,
  
    






    cudaErrorSynchronizationError         =     25,
  
    



    cudaErrorInvalidFilterSetting         =     26,
  
    



    cudaErrorInvalidNormSetting           =     27,
  
    





    cudaErrorMixedDeviceExecution         =     28,
  
    




    cudaErrorCudartUnloading              =     29,
  
    


    cudaErrorUnknown                      =     30,

    





    cudaErrorNotYetImplemented            =     31,
  
    






    cudaErrorMemoryValueTooLarge          =     32,
  
    




    cudaErrorInvalidResourceHandle        =     33,
  
    





    cudaErrorNotReady                     =     34,
  
    




    cudaErrorInsufficientDriver           =     35,
  
    










    cudaErrorSetOnActiveProcess           =     36,
  
    



    cudaErrorInvalidSurface               =     37,
  
    



    cudaErrorNoDevice                     =     38,
  
    



    cudaErrorECCUncorrectable             =     39,
  
    


    cudaErrorSharedObjectSymbolNotFound   =     40,
  
    


    cudaErrorSharedObjectInitFailed       =     41,
  
    



    cudaErrorUnsupportedLimit             =     42,
  
    



    cudaErrorDuplicateVariableName        =     43,
  
    



    cudaErrorDuplicateTextureName         =     44,
  
    



    cudaErrorDuplicateSurfaceName         =     45,
  
    







    cudaErrorDevicesUnavailable           =     46,
  
    


    cudaErrorInvalidKernelImage           =     47,
  
    





    cudaErrorNoKernelImageForDevice       =     48,
  
    










    cudaErrorIncompatibleDriverContext    =     49,
      
    




    cudaErrorPeerAccessAlreadyEnabled     =     50,
    
    




    cudaErrorPeerAccessNotEnabled         =     51,
    
    



    cudaErrorDeviceAlreadyInUse           =     54,

    




    cudaErrorProfilerDisabled             =     55,

    





    cudaErrorProfilerNotInitialized       =     56,

    




    cudaErrorProfilerAlreadyStarted       =     57,

    




     cudaErrorProfilerAlreadyStopped       =    58,

    





    cudaErrorAssert                        =    59,
  
    




    cudaErrorTooManyPeers                 =     60,
  
    



    cudaErrorHostMemoryAlreadyRegistered  =     61,
        
    



    cudaErrorHostMemoryNotRegistered      =     62,

    


    cudaErrorOperatingSystem              =     63,

    



    cudaErrorPeerAccessUnsupported        =     64,

    




    cudaErrorLaunchMaxDepthExceeded       =     65,

    





    cudaErrorLaunchFileScopedTex          =     66,

    





    cudaErrorLaunchFileScopedSurf         =     67,

    












    cudaErrorSyncDepthExceeded            =     68,

    









    cudaErrorLaunchPendingCountExceeded   =     69,
    
    


    cudaErrorNotPermitted                 =     70,

    



    cudaErrorNotSupported                 =     71,

    


    cudaErrorStartupFailure               =   0x7f,

    





    cudaErrorApiFailureBase               =  10000
};




enum  cudaChannelFormatKind
{
    cudaChannelFormatKindSigned           =   0,      
    cudaChannelFormatKindUnsigned         =   1,      
    cudaChannelFormatKindFloat            =   2,      
    cudaChannelFormatKindNone             =   3       
};




struct  cudaChannelFormatDesc
{
    int                        x; 
    int                        y; 
    int                        z; 
    int                        w; 
    enum cudaChannelFormatKind f; 
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum  cudaMemoryType
{
    cudaMemoryTypeHost   = 1, 
    cudaMemoryTypeDevice = 2  
};




enum  cudaMemcpyKind
{
    cudaMemcpyHostToHost          =   0,      
    cudaMemcpyHostToDevice        =   1,      
    cudaMemcpyDeviceToHost        =   2,      
    cudaMemcpyDeviceToDevice      =   3,      
    cudaMemcpyDefault             =   4       
};





struct  cudaPitchedPtr
{
    void   *ptr;      
    size_t  pitch;    
    size_t  xsize;    
    size_t  ysize;    
};





struct  cudaExtent
{
    size_t width;     
    size_t height;    
    size_t depth;     
};





struct  cudaPos
{
    size_t x;     
    size_t y;     
    size_t z;     
};




struct  cudaMemcpy3DParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
  
    struct cudaExtent      extent;    
    enum cudaMemcpyKind    kind;      
};




struct  cudaMemcpy3DPeerParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
    int                    srcDevice; 
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
    int                    dstDevice; 
  
    struct cudaExtent      extent;    
};




struct cudaGraphicsResource;




enum  cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone             = 0,  
    cudaGraphicsRegisterFlagsReadOnly         = 1,   
    cudaGraphicsRegisterFlagsWriteDiscard     = 2,  
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,  
    cudaGraphicsRegisterFlagsTextureGather    = 8   
};




enum  cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone         = 0,  
    cudaGraphicsMapFlagsReadOnly     = 1,  
    cudaGraphicsMapFlagsWriteDiscard = 2   
};




enum  cudaGraphicsCubeFace 
{
    cudaGraphicsCubeFacePositiveX = 0x00, 
    cudaGraphicsCubeFaceNegativeX = 0x01, 
    cudaGraphicsCubeFacePositiveY = 0x02, 
    cudaGraphicsCubeFaceNegativeY = 0x03, 
    cudaGraphicsCubeFacePositiveZ = 0x04, 
    cudaGraphicsCubeFaceNegativeZ = 0x05  
};




enum  cudaResourceType
{
    cudaResourceTypeArray          = 0x00, 
    cudaResourceTypeMipmappedArray = 0x01, 
    cudaResourceTypeLinear         = 0x02, 
    cudaResourceTypePitch2D        = 0x03  
};




enum  cudaResourceViewFormat
{
    cudaResViewFormatNone                      = 0x00, 
    cudaResViewFormatUnsignedChar1             = 0x01, 
    cudaResViewFormatUnsignedChar2             = 0x02, 
    cudaResViewFormatUnsignedChar4             = 0x03, 
    cudaResViewFormatSignedChar1               = 0x04, 
    cudaResViewFormatSignedChar2               = 0x05, 
    cudaResViewFormatSignedChar4               = 0x06, 
    cudaResViewFormatUnsignedShort1            = 0x07, 
    cudaResViewFormatUnsignedShort2            = 0x08, 
    cudaResViewFormatUnsignedShort4            = 0x09, 
    cudaResViewFormatSignedShort1              = 0x0a, 
    cudaResViewFormatSignedShort2              = 0x0b, 
    cudaResViewFormatSignedShort4              = 0x0c, 
    cudaResViewFormatUnsignedInt1              = 0x0d, 
    cudaResViewFormatUnsignedInt2              = 0x0e, 
    cudaResViewFormatUnsignedInt4              = 0x0f, 
    cudaResViewFormatSignedInt1                = 0x10, 
    cudaResViewFormatSignedInt2                = 0x11, 
    cudaResViewFormatSignedInt4                = 0x12, 
    cudaResViewFormatHalf1                     = 0x13, 
    cudaResViewFormatHalf2                     = 0x14, 
    cudaResViewFormatHalf4                     = 0x15, 
    cudaResViewFormatFloat1                    = 0x16, 
    cudaResViewFormatFloat2                    = 0x17, 
    cudaResViewFormatFloat4                    = 0x18, 
    cudaResViewFormatUnsignedBlockCompressed1  = 0x19, 
    cudaResViewFormatUnsignedBlockCompressed2  = 0x1a, 
    cudaResViewFormatUnsignedBlockCompressed3  = 0x1b, 
    cudaResViewFormatUnsignedBlockCompressed4  = 0x1c, 
    cudaResViewFormatSignedBlockCompressed4    = 0x1d, 
    cudaResViewFormatUnsignedBlockCompressed5  = 0x1e, 
    cudaResViewFormatSignedBlockCompressed5    = 0x1f, 
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20, 
    cudaResViewFormatSignedBlockCompressed6H   = 0x21, 
    cudaResViewFormatUnsignedBlockCompressed7  = 0x22  
};




struct  cudaResourceDesc {
	enum cudaResourceType resType;             
	
	union {
		struct {
			cudaArray_t array;                 
		} array;
        struct {
            cudaMipmappedArray_t mipmap;       
        } mipmap;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t sizeInBytes;                
		} linear;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t width;                      
			size_t height;                     
			size_t pitchInBytes;               
		} pitch2D;
	} res;
};




struct  cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;           
    size_t                      width;            
    size_t                      height;           
    size_t                      depth;            
    unsigned int                firstMipmapLevel; 
    unsigned int                lastMipmapLevel;  
    unsigned int                firstLayer;       
    unsigned int                lastLayer;        
};




struct  cudaPointerAttributes
{
    



    enum cudaMemoryType memoryType;

    








    int device;

    



    void *devicePointer;

    



    void *hostPointer;
};




struct  cudaFuncAttributes
{
   




   size_t sharedSizeBytes;

   



   size_t constSizeBytes;

   


   size_t localSizeBytes;

   




   int maxThreadsPerBlock;

   


   int numRegs;

   




   int ptxVersion;

   




   int binaryVersion;
};




enum  cudaFuncCache
{
    cudaFuncCachePreferNone   = 0,    
    cudaFuncCachePreferShared = 1,    
    cudaFuncCachePreferL1     = 2,    
    cudaFuncCachePreferEqual  = 3     
};





enum  cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault   = 0,
    cudaSharedMemBankSizeFourByte  = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum  cudaComputeMode
{
    cudaComputeModeDefault          = 0,  
    cudaComputeModeExclusive        = 1,  
    cudaComputeModeProhibited       = 2,  
    cudaComputeModeExclusiveProcess = 3   
};




enum  cudaLimit
{
    cudaLimitStackSize                    = 0x00, 
    cudaLimitPrintfFifoSize               = 0x01, 
    cudaLimitMallocHeapSize               = 0x02, 
    cudaLimitDevRuntimeSyncDepth          = 0x03, 
    cudaLimitDevRuntimePendingLaunchCount = 0x04  
};




enum  cudaOutputMode
{
    cudaKeyValuePair    = 0x00, 
    cudaCSV             = 0x01  
};




enum  cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock             = 1,  
    cudaDevAttrMaxBlockDimX                   = 2,  
    cudaDevAttrMaxBlockDimY                   = 3,  
    cudaDevAttrMaxBlockDimZ                   = 4,  
    cudaDevAttrMaxGridDimX                    = 5,  
    cudaDevAttrMaxGridDimY                    = 6,  
    cudaDevAttrMaxGridDimZ                    = 7,  
    cudaDevAttrMaxSharedMemoryPerBlock        = 8,  
    cudaDevAttrTotalConstantMemory            = 9,  
    cudaDevAttrWarpSize                       = 10, 
    cudaDevAttrMaxPitch                       = 11, 
    cudaDevAttrMaxRegistersPerBlock           = 12, 
    cudaDevAttrClockRate                      = 13, 
    cudaDevAttrTextureAlignment               = 14, 
    cudaDevAttrGpuOverlap                     = 15, 
    cudaDevAttrMultiProcessorCount            = 16, 
    cudaDevAttrKernelExecTimeout              = 17, 
    cudaDevAttrIntegrated                     = 18, 
    cudaDevAttrCanMapHostMemory               = 19, 
    cudaDevAttrComputeMode                    = 20, 
    cudaDevAttrMaxTexture1DWidth              = 21, 
    cudaDevAttrMaxTexture2DWidth              = 22, 
    cudaDevAttrMaxTexture2DHeight             = 23, 
    cudaDevAttrMaxTexture3DWidth              = 24, 
    cudaDevAttrMaxTexture3DHeight             = 25, 
    cudaDevAttrMaxTexture3DDepth              = 26, 
    cudaDevAttrMaxTexture2DLayeredWidth       = 27, 
    cudaDevAttrMaxTexture2DLayeredHeight      = 28, 
    cudaDevAttrMaxTexture2DLayeredLayers      = 29, 
    cudaDevAttrSurfaceAlignment               = 30, 
    cudaDevAttrConcurrentKernels              = 31, 
    cudaDevAttrEccEnabled                     = 32, 
    cudaDevAttrPciBusId                       = 33, 
    cudaDevAttrPciDeviceId                    = 34, 
    cudaDevAttrTccDriver                      = 35, 
    cudaDevAttrMemoryClockRate                = 36, 
    cudaDevAttrGlobalMemoryBusWidth           = 37, 
    cudaDevAttrL2CacheSize                    = 38, 
    cudaDevAttrMaxThreadsPerMultiProcessor    = 39, 
    cudaDevAttrAsyncEngineCount               = 40, 
    cudaDevAttrUnifiedAddressing              = 41,     
    cudaDevAttrMaxTexture1DLayeredWidth       = 42, 
    cudaDevAttrMaxTexture1DLayeredLayers      = 43, 
    cudaDevAttrMaxTexture2DGatherWidth        = 45, 
    cudaDevAttrMaxTexture2DGatherHeight       = 46, 
    cudaDevAttrMaxTexture3DWidthAlt           = 47, 
    cudaDevAttrMaxTexture3DHeightAlt          = 48, 
    cudaDevAttrMaxTexture3DDepthAlt           = 49, 
    cudaDevAttrPciDomainId                    = 50, 
    cudaDevAttrTexturePitchAlignment          = 51, 
    cudaDevAttrMaxTextureCubemapWidth         = 52, 
    cudaDevAttrMaxTextureCubemapLayeredWidth  = 53, 
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54, 
    cudaDevAttrMaxSurface1DWidth              = 55, 
    cudaDevAttrMaxSurface2DWidth              = 56, 
    cudaDevAttrMaxSurface2DHeight             = 57, 
    cudaDevAttrMaxSurface3DWidth              = 58, 
    cudaDevAttrMaxSurface3DHeight             = 59, 
    cudaDevAttrMaxSurface3DDepth              = 60, 
    cudaDevAttrMaxSurface1DLayeredWidth       = 61, 
    cudaDevAttrMaxSurface1DLayeredLayers      = 62, 
    cudaDevAttrMaxSurface2DLayeredWidth       = 63, 
    cudaDevAttrMaxSurface2DLayeredHeight      = 64, 
    cudaDevAttrMaxSurface2DLayeredLayers      = 65, 
    cudaDevAttrMaxSurfaceCubemapWidth         = 66, 
    cudaDevAttrMaxSurfaceCubemapLayeredWidth  = 67, 
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68, 
    cudaDevAttrMaxTexture1DLinearWidth        = 69, 
    cudaDevAttrMaxTexture2DLinearWidth        = 70, 
    cudaDevAttrMaxTexture2DLinearHeight       = 71, 
    cudaDevAttrMaxTexture2DLinearPitch        = 72, 
    cudaDevAttrMaxTexture2DMipmappedWidth     = 73, 
    cudaDevAttrMaxTexture2DMipmappedHeight    = 74, 
    cudaDevAttrComputeCapabilityMajor         = 75,  
    cudaDevAttrComputeCapabilityMinor         = 76, 
    cudaDevAttrMaxTexture1DMipmappedWidth     = 77, 
    cudaDevAttrStreamPrioritiesSupported      = 78  
};




struct  cudaDeviceProp
{
    char   name[256];                  
    size_t totalGlobalMem;             
    size_t sharedMemPerBlock;          
    int    regsPerBlock;               
    int    warpSize;                   
    size_t memPitch;                   
    int    maxThreadsPerBlock;         
    int    maxThreadsDim[3];           
    int    maxGridSize[3];             
    int    clockRate;                  
    size_t totalConstMem;              
    int    major;                      
    int    minor;                      
    size_t textureAlignment;           
    size_t texturePitchAlignment;      
    int    deviceOverlap;              
    int    multiProcessorCount;        
    int    kernelExecTimeoutEnabled;   
    int    integrated;                 
    int    canMapHostMemory;           
    int    computeMode;                
    int    maxTexture1D;               
    int    maxTexture1DMipmap;         
    int    maxTexture1DLinear;         
    int    maxTexture2D[2];            
    int    maxTexture2DMipmap[2];      
    int    maxTexture2DLinear[3];      
    int    maxTexture2DGather[2];      
    int    maxTexture3D[3];            
    int    maxTexture3DAlt[3];         
    int    maxTextureCubemap;          
    int    maxTexture1DLayered[2];     
    int    maxTexture2DLayered[3];     
    int    maxTextureCubemapLayered[2];
    int    maxSurface1D;               
    int    maxSurface2D[2];            
    int    maxSurface3D[3];            
    int    maxSurface1DLayered[2];     
    int    maxSurface2DLayered[3];     
    int    maxSurfaceCubemap;          
    int    maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;           
    int    concurrentKernels;          
    int    ECCEnabled;                 
    int    pciBusID;                   
    int    pciDeviceID;                
    int    pciDomainID;                
    int    tccDriver;                  
    int    asyncEngineCount;           
    int    unifiedAddressing;          
    int    memoryClockRate;            
    int    memoryBusWidth;             
    int    l2CacheSize;                
    int    maxThreadsPerMultiProcessor;
    int    streamPrioritiesSupported;  
};




































































typedef  struct  cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef  struct  cudaIpcMemHandle_st 
{
    char reserved[64];
}cudaIpcMemHandle_t;










typedef  enum cudaError cudaError_t;




typedef  struct CUstream_st *cudaStream_t;




typedef  struct CUevent_st *cudaEvent_t;




typedef  struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef  struct CUuuid_st cudaUUID_t;




typedef  enum cudaOutputMode cudaOutputMode_t;


 

#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"

#line 58 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
























enum  cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero  = 0,    
    cudaBoundaryModeClamp = 1,    
    cudaBoundaryModeTrap  = 2     
};




enum   cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,     
    cudaFormatModeAuto = 1        
};




struct  surfaceReference
{
    


    struct cudaChannelFormatDesc channelDesc;
};




typedef  unsigned long long cudaSurfaceObject_t;


 

#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
#line 59 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
























enum  cudaTextureAddressMode
{
    cudaAddressModeWrap   = 0,    
    cudaAddressModeClamp  = 1,    
    cudaAddressModeMirror = 2,    
    cudaAddressModeBorder = 3     
};




enum  cudaTextureFilterMode
{
    cudaFilterModePoint  = 0,     
    cudaFilterModeLinear = 1      
};




enum  cudaTextureReadMode
{
    cudaReadModeElementType     = 0,  
    cudaReadModeNormalizedFloat = 1   
};




struct  textureReference
{
    


    int                          normalized;
    


    enum cudaTextureFilterMode   filterMode;
    


    enum cudaTextureAddressMode  addressMode[3];
    


    struct cudaChannelFormatDesc channelDesc;
    


    int                          sRGB;
    


    unsigned int                 maxAnisotropy;
    


    enum cudaTextureFilterMode   mipmapFilterMode;
    


    float                        mipmapLevelBias;
    


    float                        minMipmapLevelClamp;
    


    float                        maxMipmapLevelClamp;
    int                          __cudaReserved[15];
};




struct  cudaTextureDesc
{
    


    enum cudaTextureAddressMode addressMode[3];
    


    enum cudaTextureFilterMode  filterMode;
    


    enum cudaTextureReadMode    readMode;
    


    int                         sRGB;
    


    int                         normalizedCoords;
    


    unsigned int                maxAnisotropy;
    


    enum cudaTextureFilterMode  mipmapFilterMode;
    


    float                       mipmapLevelBias;
    


    float                       minMipmapLevelClamp;
    


    float                       maxMipmapLevelClamp;
};




typedef  unsigned long long cudaTextureObject_t;


 

#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 60 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"




































































#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"
#line 57 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"






















































































































#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"




















































































































































































































#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"












































































































































































































































































































































































































































#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 62 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"










































































































































































































#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"
#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"









#pragma warning(push)
#pragma warning(disable: 4201 4408)



















#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"

struct  char1
{
    signed char x;
};

struct  uchar1
{
    unsigned char x;
};


struct  __declspec(align(2)) char2
{
    signed char x, y;
};

struct  __declspec(align(2)) uchar2
{
    unsigned char x, y;
};

struct  char3
{
    signed char x, y, z;
};

struct  uchar3
{
    unsigned char x, y, z;
};

struct  __declspec(align(4)) char4
{
    signed char x, y, z, w;
};

struct  __declspec(align(4)) uchar4
{
    unsigned char x, y, z, w;
};

struct  short1
{
    short x;
};

struct  ushort1
{
    unsigned short x;
};

struct  __declspec(align(4)) short2
{
    short x, y;
};

struct  __declspec(align(4)) ushort2
{
    unsigned short x, y;
};

struct  short3
{
    short x, y, z;
};

struct  ushort3
{
    unsigned short x, y, z;
};

struct  short4 { union { struct { short x; short y; short z; short w; }; struct { long long int :1,:0; }; }; };
struct  ushort4 { union { struct { unsigned short x; unsigned short y; unsigned short z; unsigned short w; }; struct { long long int :1,:0; }; }; };

struct  int1
{
    int x;
};

struct  uint1
{
    unsigned int x;
};

struct  int2 { union { struct { int x; int y; }; struct { long long int :1,:0; }; }; };
struct  uint2 { union { struct { unsigned int x; unsigned int y; }; struct { long long int :1,:0; }; }; };

struct  int3
{
    int x, y, z;
};

struct  uint3
{
    unsigned int x, y, z;
};

struct   int4
{
    int x, y, z, w;
};

struct   uint4
{
    unsigned int x, y, z, w;
};

struct  long1
{
    long int x;
};

struct  ulong1
{
    unsigned long x;
};


struct  long2 { union { struct { long int x; long int y; }; struct { long long int :1,:0; }; }; };
struct  ulong2 { union { struct { unsigned long int x; unsigned long int y; }; struct { long long int :1,:0; }; }; };












#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"

struct  long3
{
    long int x, y, z;
};

struct  ulong3
{
    unsigned long int x, y, z;
};

struct   long4
{
    long int x, y, z, w;
};

struct   ulong4
{
    unsigned long int x, y, z, w;
};

struct  float1
{
    float x;
};















#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"

struct  float2 { union { struct { float x; float y; }; struct { long long int :1,:0; }; }; };

#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"


struct  float3
{
    float x, y, z;
};

struct   float4
{
    float x, y, z, w;
};

struct  longlong1
{
    long long int x;
};

struct  ulonglong1
{
    unsigned long long int x;
};

struct   longlong2
{
    long long int x, y;
};

struct   ulonglong2
{
    unsigned long long int x, y;
};

struct  longlong3
{
    long long int x, y, z;
};

struct  ulonglong3
{
    unsigned long long int x, y, z;
};

struct   longlong4
{
    long long int x, y, z ,w;
};

struct   ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct  double1
{
    double x;
};

struct   double2
{
    double x, y;
};

struct  double3
{
    double x, y, z;
};

struct   double4
{
    double x, y, z, w;
};



#pragma warning(pop)

#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







typedef  struct char1 char1;
typedef  struct uchar1 uchar1;
typedef  struct char2 char2;
typedef  struct uchar2 uchar2;
typedef  struct char3 char3;
typedef  struct uchar3 uchar3;
typedef  struct char4 char4;
typedef  struct uchar4 uchar4;
typedef  struct short1 short1;
typedef  struct ushort1 ushort1;
typedef  struct short2 short2;
typedef  struct ushort2 ushort2;
typedef  struct short3 short3;
typedef  struct ushort3 ushort3;
typedef  struct short4 short4;
typedef  struct ushort4 ushort4;
typedef  struct int1 int1;
typedef  struct uint1 uint1;
typedef  struct int2 int2;
typedef  struct uint2 uint2;
typedef  struct int3 int3;
typedef  struct uint3 uint3;
typedef  struct int4 int4;
typedef  struct uint4 uint4;
typedef  struct long1 long1;
typedef  struct ulong1 ulong1;
typedef  struct long2 long2;
typedef  struct ulong2 ulong2;
typedef  struct long3 long3;
typedef  struct ulong3 ulong3;
typedef  struct long4 long4;
typedef  struct ulong4 ulong4;
typedef  struct float1 float1;
typedef  struct float2 float2;
typedef  struct float3 float3;
typedef  struct float4 float4;
typedef  struct longlong1 longlong1;
typedef  struct ulonglong1 ulonglong1;
typedef  struct longlong2 longlong2;
typedef  struct ulonglong2 ulonglong2;
typedef  struct longlong3 longlong3;
typedef  struct ulonglong3 ulonglong3;
typedef  struct longlong4 longlong4;
typedef  struct ulonglong4 ulonglong4;
typedef  struct double1 double1;
typedef  struct double2 double2;
typedef  struct double3 double3;
typedef  struct double4 double4;







struct  dim3
{
    unsigned int x, y, z;

      dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
      dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
      operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }
#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
};

typedef  struct dim3 dim3;



#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\builtin_types.h"
#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"










































#line 44 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"






#line 51 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"



#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"

#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\crt\\storage_class.h"
#line 71 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"
















































































































































































#line 248 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"
#line 432 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
#line 437 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef size_t rsize_t; }
#line 446 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int __w64 intptr_t; }
#line 464 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int __w64 ptrdiff_t; }
#line 475 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef unsigned short wint_t; }
#line 476 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef unsigned short wctype_t; }
#line 497 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int errno_t; }
#line 501 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef long __w64 __time32_t; }
#line 506 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __int64 __time64_t; }
#line 514 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __time64_t time_t; }
#line 569 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { __declspec(dllimport) void __cdecl _invalid_parameter(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 576 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { 
#line 575 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
__declspec(dllimport) __declspec(noreturn) void __cdecl 
#line 576 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
_invoke_watson(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 1979 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct threadlocaleinfostruct; 
#line 1980 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct threadmbcinfostruct; 
#line 1981 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef threadlocaleinfostruct *pthreadlocinfo; }
#line 1982 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef threadmbcinfostruct *pthreadmbcinfo; }
#line 1983 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct __lc_time_data; 
#line 1989 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 1985 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct localeinfo_struct { 
#line 1987 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
pthreadlocinfo locinfo; 
#line 1988 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
pthreadmbcinfo mbcinfo; 
#line 1989 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
} _locale_tstruct, *_locale_t; }
#line 1997 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 1992 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct localerefcount { 
#line 1993 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
char *locale; 
#line 1994 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
__wchar_t *wlocale; 
#line 1995 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int *refcount; 
#line 1996 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int *wrefcount; 
#line 1997 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
} locrefcount; }
#line 2018 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 1999 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct threadlocaleinfostruct { 
#line 2000 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int refcount; 
#line 2001 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
unsigned lc_codepage; 
#line 2002 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
unsigned lc_collate_cp; 
#line 2003 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
unsigned lc_time_cp; 
#line 2004 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
locrefcount lc_category[6]; 
#line 2005 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int lc_clike; 
#line 2006 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int mb_cur_max; 
#line 2007 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int *lconv_intl_refcount; 
#line 2008 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int *lconv_num_refcount; 
#line 2009 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int *lconv_mon_refcount; 
#line 2010 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
struct lconv *lconv; 
#line 2011 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
int *ctype1_refcount; 
#line 2012 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
unsigned short *ctype1; 
#line 2013 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
const unsigned short *pctype; 
#line 2014 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
const unsigned char *pclmap; 
#line 2015 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
const unsigned char *pcumap; 
#line 2016 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
__lc_time_data *lc_time_curr; 
#line 2017 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
__wchar_t *locale_name[6]; 
#line 2018 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
} threadlocinfo; }
#line 2055 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\crtdefs.h"
#pragma pack ( pop )
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"













#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_types.h"
#line 36 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
namespace std { typedef decltype((__nullptr)) nullptr_t; }
#line 37 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
using std::nullptr_t;
#line 43 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern int *__cdecl _errno(); } 
#line 46 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
extern "C" { errno_t __cdecl _set_errno(int ); } 
#line 47 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
extern "C" { errno_t __cdecl _get_errno(int * ); } 
#line 69 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern unsigned long __cdecl __threadid(); } 
#line 71 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern uintptr_t __cdecl __threadhandle(); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"





















































































































































#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"













#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"















#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
typedef struct cudaArray *cudaArray_t; 
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
typedef const cudaArray *cudaArray_const_t; 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
struct cudaArray; 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t; 
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t; 
#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
struct cudaMipmappedArray; 
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"









#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"















#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"













#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"











#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"











#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"





















#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"























#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
struct cudaGraphicsResource; 
#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"















#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"











#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"

















#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"













#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"











































































#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"















































#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"





















#line 929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"













#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"



















#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"













#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"











#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"













#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"















#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"









#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"































































































































































#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"



















































































































#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"








#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"








#line 1291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"




#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"











#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"









#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"




#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"













#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"









#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"









#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"



























#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"

























#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"




#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_types.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"



#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"







#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"




#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_types.h"
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * , cudaDeviceAttr , int ); } 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * , cudaLimit ); } 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * ); } 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * ); } 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t ); } 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * ); } 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * ); } 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * , unsigned ); } 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t ); } 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned ); } 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * , unsigned ); } 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t , cudaStream_t ); } 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t ); } 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * , const void * ); } 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * ); } 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** , size_t ); } 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t ); } 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t ); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t ); } 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * , int , size_t , cudaStream_t ); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t ); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t ); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * ); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBuffer(size_t , size_t ); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice(void * , void * , dim3 , dim3 , unsigned , cudaStream_t ); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
namespace _GLOBAL__N__14_kernel_cpp1_ii_b614c5e6 { }; using namespace _GLOBAL__N__14_kernel_cpp1_ii_b614c5e6; namespace _GLOBAL__N__14_kernel_cpp1_ii_b614c5e6 { 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
template< class T> __inline cudaError_t cudaMalloc(T ** , size_t ); 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
template< class T> __inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , T * ); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
}
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceReset(); } 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetLimit(cudaLimit , size_t ); } 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * , cudaLimit ); } 
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * ); } 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetStreamPriorityRange(int * , int * ); } 
#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetCacheConfig(cudaFuncCache ); } 
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * ); } 
#line 503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetSharedMemConfig(cudaSharedMemConfig ); } 
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetByPCIBusId(int * , char * ); } 
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetPCIBusId(char * , int , int ); } 
#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t ); } 
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t ); } 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * ); } 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t , unsigned ); } 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcCloseMemHandle(void * ); } 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadExit(); } 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSynchronize(); } 
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetLimit(cudaLimit , size_t ); } 
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetLimit(size_t * , cudaLimit ); } 
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetCacheConfig(cudaFuncCache * ); } 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetCacheConfig(cudaFuncCache ); } 
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t ); } 
#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * ); } 
#line 1329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceProperties(cudaDeviceProp * , int ); } 
#line 1476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * , cudaDeviceAttr , int ); } 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaChooseDevice(int * , const cudaDeviceProp * ); } 
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDevice(int ); } 
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * ); } 
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetValidDevices(int * , int ); } 
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDeviceFlags(unsigned ); } 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreate(cudaStream_t * ); } 
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * , unsigned ); } 
#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithPriority(cudaStream_t * , unsigned , int ); } 
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetPriority(cudaStream_t , int * ); } 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetFlags(cudaStream_t , unsigned * ); } 
#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t ); } 
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned ); } 
#line 1856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { typedef void (__stdcall *cudaStreamCallback_t)(cudaStream_t , cudaError_t , void * ); }
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAddCallback(cudaStream_t , cudaStreamCallback_t , void * , unsigned ); } 
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamSynchronize(cudaStream_t ); } 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamQuery(cudaStream_t ); } 
#line 1964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreate(cudaEvent_t * ); } 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * , unsigned ); } 
#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t , cudaStream_t  = 0); } 
#line 2060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventQuery(cudaEvent_t ); } 
#line 2092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventSynchronize(cudaEvent_t ); } 
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t ); } 
#line 2158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t ); } 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaConfigureCall(dim3 , dim3 , size_t  = 0, cudaStream_t  = 0); } 
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetupArgument(const void * , size_t , size_t ); } 
#line 2273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetCacheConfig(const void * , cudaFuncCache ); } 
#line 2324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetSharedMemConfig(const void * , cudaSharedMemConfig ); } 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunch(const void * ); } 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * , const void * ); } 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForDevice(double * ); } 
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForHost(double * ); } 
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** , size_t ); } 
#line 2500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocHost(void ** , size_t ); } 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocPitch(void ** , size_t * , size_t , size_t ); } 
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocArray(cudaArray_t * , const cudaChannelFormatDesc * , size_t , size_t  = 0, unsigned  = 0); } 
#line 2605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * ); } 
#line 2625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeHost(void * ); } 
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeArray(cudaArray_t ); } 
#line 2669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeMipmappedArray(cudaMipmappedArray_t ); } 
#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostAlloc(void ** , size_t , unsigned ); } 
#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostRegister(void * , size_t , unsigned ); } 
#line 2800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostUnregister(void * ); } 
#line 2827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetDevicePointer(void ** , void * , unsigned ); } 
#line 2846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetFlags(unsigned * , void * ); } 
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3D(cudaPitchedPtr * , cudaExtent ); } 
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3DArray(cudaArray_t * , const cudaChannelFormatDesc * , cudaExtent , unsigned  = 0); } 
#line 3137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocMipmappedArray(cudaMipmappedArray_t * , const cudaChannelFormatDesc * , cudaExtent , unsigned , unsigned  = 0); } 
#line 3163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetMipmappedArrayLevel(cudaArray_t * , cudaMipmappedArray_const_t , unsigned ); } 
#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3D(const cudaMemcpy3DParms * ); } 
#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * ); } 
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t  = 0); } 
#line 3414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t  = 0); } 
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemGetInfo(size_t * , size_t * ); } 
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaArrayGetInfo(cudaChannelFormatDesc * , cudaExtent * , unsigned * , cudaArray_t ); } 
#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind ); } 
#line 3521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeer(void * , int , const void * , int , size_t ); } 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArray(cudaArray_t , size_t , size_t , const void * , size_t , cudaMemcpyKind ); } 
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArray(void * , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyArrayToArray(cudaArray_t , size_t , size_t , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind  = cudaMemcpyDeviceToDevice); } 
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 3708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArray(cudaArray_t , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 3750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArray(void * , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind ); } 
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DArrayToArray(cudaArray_t , size_t , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind  = cudaMemcpyDeviceToDevice); } 
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbol(const void * , const void * , size_t , size_t  = 0, cudaMemcpyKind  = cudaMemcpyHostToDevice); } 
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbol(void * , const void * , size_t , size_t  = 0, cudaMemcpyKind  = cudaMemcpyDeviceToHost); } 
#line 3902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t  = 0); } 
#line 3974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArrayAsync(cudaArray_t , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArrayAsync(void * , cudaArray_const_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArrayAsync(cudaArray_t , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArrayAsync(void * , size_t , cudaArray_const_t , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbolAsync(const void * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbolAsync(void * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t  = 0); } 
#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset(void * , int , size_t ); } 
#line 4305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2D(void * , size_t , int , size_t , size_t ); } 
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3D(cudaPitchedPtr , int , cudaExtent ); } 
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * , int , size_t , cudaStream_t  = 0); } 
#line 4409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t  = 0); } 
#line 4455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t  = 0); } 
#line 4478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolAddress(void ** , const void * ); } 
#line 4500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolSize(size_t * , const void * ); } 
#line 4644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPointerGetAttributes(cudaPointerAttributes * , const void * ); } 
#line 4678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceCanAccessPeer(int * , int , int ); } 
#line 4715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceEnablePeerAccess(int , unsigned ); } 
#line 4734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceDisablePeerAccess(int ); } 
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnregisterResource(cudaGraphicsResource_t ); } 
#line 4820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned ); } 
#line 4855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t  = 0); } 
#line 4886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t  = 0); } 
#line 4915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t ); } 
#line 4949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsSubResourceGetMappedArray(cudaArray_t * , cudaGraphicsResource_t , unsigned , unsigned ); } 
#line 4974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * , cudaGraphicsResource_t ); } 
#line 5010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetChannelDesc(cudaChannelFormatDesc * , cudaArray_const_t ); } 
#line 5045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaChannelFormatDesc __stdcall cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind ); } 
#line 5092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t  = 4294967295U); } 
#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t ); } 
#line 5171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToArray(const textureReference * , cudaArray_const_t , const cudaChannelFormatDesc * ); } 
#line 5199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToMipmappedArray(const textureReference * , cudaMipmappedArray_const_t , const cudaChannelFormatDesc * ); } 
#line 5220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaUnbindTexture(const textureReference * ); } 
#line 5245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureAlignmentOffset(size_t * , const textureReference * ); } 
#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureReference(const textureReference ** , const void * ); } 
#line 5306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindSurfaceToArray(const surfaceReference * , cudaArray_const_t , const cudaChannelFormatDesc * ); } 
#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceReference(const surfaceReference ** , const void * ); } 
#line 5536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateTextureObject(cudaTextureObject_t * , const cudaResourceDesc * , const cudaTextureDesc * , const cudaResourceViewDesc * ); } 
#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroyTextureObject(cudaTextureObject_t ); } 
#line 5567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceDesc(cudaResourceDesc * , cudaTextureObject_t ); } 
#line 5583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectTextureDesc(cudaTextureDesc * , cudaTextureObject_t ); } 
#line 5600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * , cudaTextureObject_t ); } 
#line 5633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateSurfaceObject(cudaSurfaceObject_t * , const cudaResourceDesc * ); } 
#line 5648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroySurfaceObject(cudaSurfaceObject_t ); } 
#line 5663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * , cudaSurfaceObject_t ); } 
#line 5690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDriverGetVersion(int * ); } 
#line 5707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * ); } 
#line 5712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetExportTable(const void ** , const cudaUUID_t * ); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template< class T> __inline ::cudaChannelFormatDesc cudaCreateChannelDesc() 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf() 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf1() 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf2() 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf4() 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char> () 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(char)) * 8); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> () 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> () 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> () 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> () 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> () 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> () 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> () 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> () 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short> () 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> () 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> () 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> () 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> () 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> () 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> () 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> () 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int> () 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> () 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> () 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> () 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> () 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> () 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> () 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> () 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long> () 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned long> () 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long1> () 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong1> () 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long2> () 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong2> () 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long4> () 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong4> () 
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float> () 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> () 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> () 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> () 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
{ 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\channel_descriptor.h"
} 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
static __inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
{ 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
cudaPitchedPtr s; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(s.ptr) = d; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(s.pitch) = p; 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(s.xsize) = xsz; 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(s.ysize) = ysz; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
return s; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
} 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
static __inline cudaPos make_cudaPos(size_t x, size_t y, size_t z) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
{ 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
cudaPos p; 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(p.x) = x; 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(p.y) = y; 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(p.z) = z; 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
return p; 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
} 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
static __inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d) 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
{ 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
cudaExtent e; 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(e.width) = w; 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(e.height) = h; 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
(e.depth) = d; 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
return e; 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\driver_functions.h"
} 
#line 69 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline char1 make_char1(signed char x) 
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
char1 t; (t.x) = x; return t; 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uchar1 make_uchar1(unsigned char x) 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uchar1 t; (t.x) = x; return t; 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline char2 make_char2(signed char x, signed char y) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t; 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y) 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline char3 make_char3(signed char x, signed char y, signed char z) 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z) 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w) 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w) 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline short1 make_short1(short x) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
short1 t; (t.x) = x; return t; 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ushort1 make_ushort1(unsigned short x) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ushort1 t; (t.x) = x; return t; 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline short2 make_short2(short x, short y) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t; 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y) 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t; 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline short3 make_short3(short x, short y, short z) 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z) 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline short4 make_short4(short x, short y, short z, short w) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w) 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline int1 make_int1(int x) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
int1 t; (t.x) = x; return t; 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uint1 make_uint1(unsigned x) 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uint1 t; (t.x) = x; return t; 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline int2 make_int2(int x, int y) 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t; 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uint2 make_uint2(unsigned x, unsigned y) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t; 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline int3 make_int3(int x, int y, int z) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z) 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline int4 make_int4(int x, int y, int z, int w) 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w) 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline long1 make_long1(long x) 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
long1 t; (t.x) = x; return t; 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulong1 make_ulong1(unsigned long x) 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulong1 t; (t.x) = x; return t; 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline long2 make_long2(long x, long y) 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t; 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t; 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline long3 make_long3(long x, long y, long z) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z) 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline long4 make_long4(long x, long y, long z, long w) 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w) 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline float1 make_float1(float x) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
float1 t; (t.x) = x; return t; 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline float2 make_float2(float x, float y) 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t; 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline float3 make_float3(float x, float y, float z) 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline float4 make_float4(float x, float y, float z, float w) 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline longlong1 make_longlong1(__int64 x) 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
longlong1 t; (t.x) = x; return t; 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x) 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulonglong1 t; (t.x) = x; return t; 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline longlong2 make_longlong2(__int64 x, __int64 y) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t; 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y) 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t; 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z) 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z) 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w) 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w) 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline double1 make_double1(double x) 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
double1 t; (t.x) = x; return t; 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline double2 make_double2(double x, double y) 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t; 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline double3 make_double3(double x, double y, double z) 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
static __inline double4 make_double4(double x, double y, double z, double w) 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
{ 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\vector_functions.h"
} 
#line 46 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl _memccpy(void * , const void * , int , size_t ); } 
#line 47 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const void *__cdecl memchr(const void * , int , size_t ); } 
#line 48 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp(const void * , const void * , size_t ); } 
#line 49 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp_l(const void * , const void * , size_t , _locale_t ); } 
#line 50 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { int __cdecl memcmp(const void * , const void * , size_t ); } 
#line 54 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { void *__cdecl memcpy(void * , const void * , size_t ); } 
#line 56 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memcpy_s(void * , rsize_t , const void * , rsize_t ); } 
#line 93 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { void *__cdecl memset(void * , int , size_t ); } 
#line 97 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memccpy(void * , const void * , int , size_t ); } 
#line 98 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl memicmp(const void * , const void * , size_t ); } 
#line 103 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strset_s(char * , size_t , int ); } 
#line 104 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strset_s ( char ( & _Dest ) [ _Size ], int _Value ) throw ( ) { return _strset_s ( _Dest, _Size, _Value ); }
#line 105 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { char *__cdecl _strset(char * , int ); } 
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcpy_s(char * , rsize_t , const char * ); } 
#line 109 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strcpy_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcpy_s ( _Dest, _Size, _Source ); }
#line 110 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strcpy(char * , const char * ); } 
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcat_s(char * , rsize_t , const char * ); } 
#line 114 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strcat_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcat_s ( _Dest, _Size, _Source ); }
#line 115 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strcat(char * , const char * ); } 
#line 116 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { int __cdecl strcmp(const char * , const char * ); } 
#line 117 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { size_t __cdecl strlen(const char * ); } 
#line 121 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { 
#line 118 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 121 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
strnlen(const char * , size_t ); } 
#line 126 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { static __inline size_t __cdecl strnlen_s(const char *_Str, size_t _MaxCount) 
#line 127 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ 
#line 128 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
return (_Str == (0)) ? (0) : strnlen(_Str, _MaxCount); 
#line 129 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
} } 
#line 132 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memmove_s(void * , rsize_t , const void * , rsize_t ); } 
#line 135 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memmove(void * , const void * , size_t ); } 
#line 142 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdup(const char * ); } 
#line 148 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strchr(const char * , int ); } 
#line 149 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp(const char * , const char * ); } 
#line 150 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcmpi(const char * , const char * ); } 
#line 151 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp_l(const char * , const char * , _locale_t ); } 
#line 152 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcoll(const char * , const char * ); } 
#line 153 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcoll_l(const char * , const char * , _locale_t ); } 
#line 154 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll(const char * , const char * ); } 
#line 155 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll_l(const char * , const char * , _locale_t ); } 
#line 156 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll(const char * , const char * , size_t ); } 
#line 157 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll_l(const char * , const char * , size_t , _locale_t ); } 
#line 158 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll(const char * , const char * , size_t ); } 
#line 159 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll_l(const char * , const char * , size_t , _locale_t ); } 
#line 160 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strcspn(const char * , const char * ); } 
#line 161 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strerror(const char * ); } 
#line 162 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strerror_s(char * , size_t , const char * ); } 
#line 163 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strerror_s ( char ( & _Buffer ) [ _Size ], const char * _ErrorMessage ) throw ( ) { return _strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 164 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strerror(int); } 
#line 166 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strerror_s(char * , size_t , int ); } 
#line 168 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strerror_s ( char ( & _Buffer ) [ _Size ], int _ErrorMessage ) throw ( ) { return strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 169 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s(char * , size_t ); } 
#line 170 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strlwr_s ( _String, _Size ); }
#line 171 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr(char * ); } 
#line 172 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s_l(char * , size_t , _locale_t ); } 
#line 173 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strlwr_s_l ( _String, _Size, _Locale ); }
#line 174 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr_l(char * , _locale_t ); } 
#line 176 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncat_s(char * , rsize_t , const char * , rsize_t ); } 
#line 178 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strncat_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
#line 182 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncat(char * , const char * , size_t ); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl strncmp(const char * , const char * , size_t ); } 
#line 185 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp(const char * , const char * , size_t ); } 
#line 186 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp_l(const char * , const char * , size_t , _locale_t ); } 
#line 188 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncpy_s(char * , rsize_t , const char * , rsize_t ); } 
#line 190 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strncpy_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 191 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncpy(char * , const char * , size_t ); } 
#line 192 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strnset_s(char * , size_t , int , size_t ); } 
#line 193 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strnset_s ( char ( & _Dest ) [ _Size ], int _Val, size_t _Count ) throw ( ) { return _strnset_s ( _Dest, _Size, _Val, _Count ); }
#line 194 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strnset(char * , int , size_t ); } 
#line 195 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strpbrk(const char * , const char * ); } 
#line 196 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strrchr(const char * , int ); } 
#line 197 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strrev(char * ); } 
#line 198 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strspn(const char * , const char * ); } 
#line 199 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strstr(const char * , const char * ); } 
#line 200 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok(char * , const char * ); } 
#line 202 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok_s(char * , const char * , char ** ); } 
#line 204 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s(char * , size_t ); } 
#line 205 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strupr_s ( _String, _Size ); }
#line 206 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr(char * ); } 
#line 207 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s_l(char * , size_t , _locale_t ); } 
#line 208 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strupr_s_l ( _String, _Size, _Locale ); }
#line 209 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr_l(char * , _locale_t ); } 
#line 210 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strxfrm(char * , const char * , size_t ); } 
#line 211 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strxfrm_l(char * , const char * , size_t , _locale_t ); } 
#line 217 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline char *__cdecl strchr(char *_Str, int _Ch) 
#line 218 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (char *)strchr((const char *)_Str, _Ch); } 
#line 219 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline char *__cdecl strpbrk(char *_Str, const char *_Control) 
#line 220 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (char *)strpbrk((const char *)_Str, _Control); } 
#line 221 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline char *__cdecl strrchr(char *_Str, int _Ch) 
#line 222 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (char *)strrchr((const char *)_Str, _Ch); } 
#line 223 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline char *__cdecl strstr(char *_Str, const char *_SubStr) 
#line 224 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (char *)strstr((const char *)_Str, _SubStr); } 
#line 228 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline void *__cdecl memchr(void *_Pv, int _C, size_t _N) 
#line 229 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (void *)memchr((const void *)_Pv, _C, _N); } 
#line 241 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strdup(const char * ); } 
#line 248 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcmpi(const char * , const char * ); } 
#line 249 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl stricmp(const char * , const char * ); } 
#line 250 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strlwr(char * ); } 
#line 251 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strnicmp(const char * , const char * , size_t ); } 
#line 252 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strnset(char * , int , size_t ); } 
#line 253 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strrev(char * ); } 
#line 254 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strset(char * , int ); } 
#line 255 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strupr(char * ); } 
#line 269 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsdup(const __wchar_t * ); } 
#line 276 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscat_s(__wchar_t * , rsize_t , const __wchar_t * ); } 
#line 278 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscat_s ( _Dest, _Size, _Source ); }
#line 279 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscat(__wchar_t * , const __wchar_t * ); } 
#line 282 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcschr(const __wchar_t * , __wchar_t ); } 
#line 283 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscmp(const __wchar_t * , const __wchar_t * ); } 
#line 285 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscpy_s(__wchar_t * , rsize_t , const __wchar_t * ); } 
#line 287 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscpy_s ( _Dest, _Size, _Source ); }
#line 288 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscpy(__wchar_t * , const __wchar_t * ); } 
#line 289 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcscspn(const __wchar_t * , const __wchar_t * ); } 
#line 290 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcslen(const __wchar_t * ); } 
#line 294 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { 
#line 291 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 294 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
wcsnlen(const __wchar_t * , size_t ); } 
#line 299 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { static __inline size_t __cdecl wcsnlen_s(const __wchar_t *_Src, size_t _MaxCount) 
#line 300 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ 
#line 301 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
return (_Src == (0)) ? (0) : wcsnlen(_Src, _MaxCount); 
#line 302 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
} } 
#line 305 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncat_s(__wchar_t * , rsize_t , const __wchar_t * , rsize_t ); } 
#line 307 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncat(__wchar_t * , const __wchar_t * , size_t ); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl wcsncmp(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 314 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncpy_s(__wchar_t * , rsize_t , const __wchar_t * , rsize_t ); } 
#line 316 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 317 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncpy(__wchar_t * , const __wchar_t * , size_t ); } 
#line 318 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcspbrk(const __wchar_t * , const __wchar_t * ); } 
#line 319 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsrchr(const __wchar_t * , __wchar_t ); } 
#line 320 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsspn(const __wchar_t * , const __wchar_t * ); } 
#line 323 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsstr(const __wchar_t * , const __wchar_t * ); } 
#line 324 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok(__wchar_t * , const __wchar_t * ); } 
#line 326 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok_s(__wchar_t * , const __wchar_t * , __wchar_t ** ); } 
#line 328 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcserror(int ); } 
#line 329 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcserror_s(__wchar_t * , size_t , int ); } 
#line 330 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], int _Error ) throw ( ) { return _wcserror_s ( _Buffer, _Size, _Error ); }
#line 331 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl __wcserror(const __wchar_t * ); } 
#line 332 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl __wcserror_s(__wchar_t * , size_t , const __wchar_t * ); } 
#line 333 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl __wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], const wchar_t * _ErrorMessage ) throw ( ) { return __wcserror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 335 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp(const __wchar_t * , const __wchar_t * ); } 
#line 336 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp_l(const __wchar_t * , const __wchar_t * , _locale_t ); } 
#line 337 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 338 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp_l(const __wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 339 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsnset_s(__wchar_t * , size_t , __wchar_t , size_t ); } 
#line 340 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsnset_s ( wchar_t ( & _Dst ) [ _Size ], wchar_t _Val, size_t _MaxCount ) throw ( ) { return _wcsnset_s ( _Dst, _Size, _Val, _MaxCount ); }
#line 341 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsnset(__wchar_t * , __wchar_t , size_t ); } 
#line 342 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsrev(__wchar_t * ); } 
#line 343 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsset_s(__wchar_t * , size_t , __wchar_t ); } 
#line 344 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsset_s ( wchar_t ( & _Str ) [ _Size ], wchar_t _Val ) throw ( ) { return _wcsset_s ( _Str, _Size, _Val ); }
#line 345 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsset(__wchar_t * , __wchar_t ); } 
#line 347 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s(__wchar_t * , size_t ); } 
#line 348 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcslwr_s ( _String, _Size ); }
#line 349 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr(__wchar_t * ); } 
#line 350 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s_l(__wchar_t * , size_t , _locale_t ); } 
#line 351 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcslwr_s_l ( _String, _Size, _Locale ); }
#line 352 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr_l(__wchar_t * , _locale_t ); } 
#line 353 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s(__wchar_t * , size_t ); } 
#line 354 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcsupr_s ( _String, _Size ); }
#line 355 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr(__wchar_t * ); } 
#line 356 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s_l(__wchar_t * , size_t , _locale_t ); } 
#line 357 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcsupr_s_l ( _String, _Size, _Locale ); }
#line 358 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr_l(__wchar_t * , _locale_t ); } 
#line 359 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsxfrm(__wchar_t * , const __wchar_t * , size_t ); } 
#line 360 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsxfrm_l(__wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 361 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscoll(const __wchar_t * , const __wchar_t * ); } 
#line 362 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcscoll_l(const __wchar_t * , const __wchar_t * , _locale_t ); } 
#line 363 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll(const __wchar_t * , const __wchar_t * ); } 
#line 364 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll_l(const __wchar_t * , const __wchar_t * , _locale_t ); } 
#line 365 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 366 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll_l(const __wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 367 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 368 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll_l(const __wchar_t * , const __wchar_t * , size_t , _locale_t ); } 
#line 376 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcschr(__wchar_t *_Str, __wchar_t _Ch) 
#line 377 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcschr((const __wchar_t *)_Str, _Ch); } 
#line 378 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcspbrk(__wchar_t *_Str, const __wchar_t *_Control) 
#line 379 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcspbrk((const __wchar_t *)_Str, _Control); } 
#line 380 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcsrchr(__wchar_t *_Str, __wchar_t _Ch) 
#line 381 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcsrchr((const __wchar_t *)_Str, _Ch); } 
#line 384 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcsstr(__wchar_t *_Str, const __wchar_t *_SubStr) 
#line 385 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcsstr((const __wchar_t *)_Str, _SubStr); } 
#line 397 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsdup(const __wchar_t * ); } 
#line 407 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicmp(const __wchar_t * , const __wchar_t * ); } 
#line 408 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsnicmp(const __wchar_t * , const __wchar_t * , size_t ); } 
#line 409 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsnset(__wchar_t * , __wchar_t , size_t ); } 
#line 410 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsrev(__wchar_t * ); } 
#line 411 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsset(__wchar_t * , __wchar_t ); } 
#line 412 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcslwr(__wchar_t * ); } 
#line 413 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsupr(__wchar_t * ); } 
#line 414 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicoll(const __wchar_t * , const __wchar_t * ); } 
#line 32 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
#pragma pack ( push, 8 )
#line 82 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { typedef long clock_t; }
#line 106 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { struct tm { 
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_sec; 
#line 108 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_min; 
#line 109 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_hour; 
#line 110 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_mday; 
#line 111 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_mon; 
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_year; 
#line 113 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_wday; 
#line 114 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_yday; 
#line 115 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
int tm_isdst; 
#line 116 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
}; }
#line 131 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) int *__cdecl __daylight(); } 
#line 135 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __dstbias(); } 
#line 139 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __timezone(); } 
#line 143 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char **__cdecl __tzname(); } 
#line 146 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_daylight(int * ); } 
#line 147 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_dstbias(long * ); } 
#line 148 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_timezone(long * ); } 
#line 149 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_tzname(size_t * , char * , size_t , int ); } 
#line 153 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl asctime(const tm * ); } 
#line 155 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl asctime_s(char * , size_t , const tm * ); } 
#line 157 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl asctime_s ( char ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return asctime_s ( _Buffer, _Size, _Time ); }
#line 159 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime32(const __time32_t * ); } 
#line 160 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime32_s(char * , size_t , const __time32_t * ); } 
#line 161 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime32_s ( char ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _ctime32_s ( _Buffer, _Size, _Time ); }
#line 163 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) clock_t __cdecl clock(); } 
#line 164 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime32(__time32_t , __time32_t ); } 
#line 166 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime32(const __time32_t * ); } 
#line 167 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime32_s(tm * , const __time32_t * ); } 
#line 169 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime32(const __time32_t * ); } 
#line 170 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime32_s(tm * , const __time32_t * ); } 
#line 172 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl strftime(char * , size_t , const char * , const tm * ); } 
#line 173 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strftime_l(char * , size_t , const char * , const tm * , _locale_t ); } 
#line 175 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strdate_s(char * , size_t ); } 
#line 176 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _strdate_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strdate_s ( _Buffer, _Size ); }
#line 177 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdate(char * ); } 
#line 179 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strtime_s(char * , size_t ); } 
#line 180 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _strtime_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strtime_s ( _Buffer, _Size ); }
#line 181 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strtime(char * ); } 
#line 183 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _time32(__time32_t * ); } 
#line 184 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mktime32(tm * ); } 
#line 185 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mkgmtime32(tm * ); } 
#line 192 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) void __cdecl _tzset(); } 
#line 197 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime64(__time64_t , __time64_t ); } 
#line 198 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime64(const __time64_t * ); } 
#line 199 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime64_s(char * , size_t , const __time64_t * ); } 
#line 200 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime64_s ( char ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _ctime64_s ( _Buffer, _Size, _Time ); }
#line 202 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime64(const __time64_t * ); } 
#line 203 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime64_s(tm * , const __time64_t * ); } 
#line 205 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime64(const __time64_t * ); } 
#line 206 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime64_s(tm * , const __time64_t * ); } 
#line 208 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mktime64(tm * ); } 
#line 209 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mkgmtime64(tm * ); } 
#line 210 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _time64(__time64_t * ); } 
#line 214 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _getsystime(tm * ); } 
#line 215 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _setsystime(tm * , unsigned ); } 
#line 228 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wasctime(const tm * ); } 
#line 229 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wasctime_s(__wchar_t * , size_t , const tm * ); } 
#line 230 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wasctime_s ( wchar_t ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return _wasctime_s ( _Buffer, _Size, _Time ); }
#line 232 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime32(const __time32_t * ); } 
#line 233 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime32_s(__wchar_t * , size_t , const __time32_t * ); } 
#line 234 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime32_s ( wchar_t ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _wctime32_s ( _Buffer, _Size, _Time ); }
#line 236 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsftime(__wchar_t * , size_t , const __wchar_t * , const tm * ); } 
#line 237 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsftime_l(__wchar_t * , size_t , const __wchar_t * , const tm * , _locale_t ); } 
#line 239 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrdate_s(__wchar_t * , size_t ); } 
#line 240 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrdate_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrdate_s ( _Buffer, _Size ); }
#line 241 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrdate(__wchar_t * ); } 
#line 243 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrtime_s(__wchar_t * , size_t ); } 
#line 244 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrtime_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrtime_s ( _Buffer, _Size ); }
#line 245 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrtime(__wchar_t * ); } 
#line 247 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime64(const __time64_t * ); } 
#line 248 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime64_s(__wchar_t * , size_t , const __time64_t * ); } 
#line 249 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime64_s ( wchar_t ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _wctime64_s ( _Buffer, _Size, _Time ); }
#line 27 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
#pragma warning(push)
#pragma warning(disable:4996)
#line 44 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
extern "C" { static __inline __wchar_t *__cdecl _wctime(const time_t *_Time) 
#line 45 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _wctime64(_Time); 
#pragma warning( pop )
} } 
#line 52 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
extern "C" { static __inline errno_t __cdecl _wctime_s(__wchar_t *_Buffer, size_t _SizeInWords, const time_t *_Time) 
#line 53 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
{ 
#line 54 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
return _wctime64_s(_Buffer, _SizeInWords, _Time); 
#line 55 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
} } 
#line 58 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\wtime.inl"
#pragma warning(pop)
#line 82 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline double __cdecl difftime(time_t _Time1, time_t _Time2) 
#line 83 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 84 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _difftime64(_Time1, _Time2); 
#line 85 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 86 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline char *__cdecl ctime(const time_t *_Time) 
#line 87 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _ctime64(_Time); 
#pragma warning( pop )
} } 
#line 94 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl ctime_s(char *_Buffer, size_t _SizeInBytes, const time_t *_Time) 
#line 95 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 96 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _ctime64_s(_Buffer, _SizeInBytes, _Time); 
#line 97 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 99 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline tm *__cdecl gmtime(const time_t *_Time) 
#line 100 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _gmtime64(_Time); 
#pragma warning( pop )
} } 
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl gmtime_s(tm *_Tm, const time_t *_Time) 
#line 108 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 109 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _gmtime64_s(_Tm, _Time); 
#line 110 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline tm *__cdecl localtime(const time_t *_Time) 
#line 113 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _localtime64(_Time); 
#pragma warning( pop )
} } 
#line 119 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl localtime_s(tm *_Tm, const time_t *_Time) 
#line 120 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 121 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _localtime64_s(_Tm, _Time); 
#line 122 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 123 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl mktime(tm *_Tm) 
#line 124 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 125 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _mktime64(_Tm); 
#line 126 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 127 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl _mkgmtime(tm *_Tm) 
#line 128 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 129 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _mkgmtime64(_Tm); 
#line 130 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 131 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl time(time_t *_Time) 
#line 132 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
{ 
#line 133 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
return _time64(_Time); 
#line 134 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.inl"
} } 
#line 274 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) int daylight; 
#line 275 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) long timezone; 
#line 276 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) char *tzname[2]; 
#line 280 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) void __cdecl tzset(); } 
#line 290 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\time.h"
#pragma pack ( pop )
#line 69 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\common_functions.h"
extern "C" { __declspec(dllimport) extern clock_t __cdecl clock(); } 
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\common_functions.h"
extern "C" { extern void *__cdecl memset(void *, int, size_t); } 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\common_functions.h"
extern "C" { extern void *__cdecl memcpy(void *, const void *, size_t); } 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __cdecl abs(int); } 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern long __cdecl labs(long); } 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llabs(__int64); } 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double __cdecl fabs(double ); } 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float fabsf(float ); } 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int min(int, int); } 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern unsigned umin(unsigned, unsigned); } 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llmin(__int64, __int64); } 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern unsigned __int64 ullmin(unsigned __int64, unsigned __int64); } 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float fminf(float , float ); } 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double fmin(double , double ); } 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int max(int, int); } 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern unsigned umax(unsigned, unsigned); } 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llmax(__int64, __int64); } 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern unsigned __int64 ullmax(unsigned __int64, unsigned __int64); } 
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float fmaxf(float , float ); } 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double fmax(double, double); } 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl sin(double ); 
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl cos(double ); 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern void sincos(double , double * , double * ); } 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern void sincosf(float , float * , float * ); } 
#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl tan(double ); 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl sqrt(double ); 
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double rsqrt(double ); } 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float rsqrtf(float ); } 
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double log2(double ); } 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double exp2(double ); } 
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float exp2f(float ); } 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double exp10(double ); } 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float exp10f(float ); } 
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double expm1(double ); } 
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float expm1f(float ); } 
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float log2f(float ); } 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl log10(double ); 
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl log(double ); 
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double log1p(double ); } 
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float log1pf(float ); } 
#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl floor(double ); 
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl exp(double ); 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl cosh(double ); 
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl sinh(double ); 
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl tanh(double ); 
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double acosh(double ); } 
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float acoshf(float ); } 
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double asinh(double ); } 
#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float asinhf(float ); } 
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double atanh(double ); } 
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float atanhf(float ); } 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double , int ); 
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float ldexpf(float , int ); } 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double logb(double ); } 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float logbf(float ); } 
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int ilogb(double ); } 
#line 1889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int ilogbf(float ); } 
#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double scalbn(double , int ); } 
#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float scalbnf(float , int ); } 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double scalbln(double , long ); } 
#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float scalblnf(float , long ); } 
#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double , int * ); 
#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float frexpf(float , int * ); } 
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double round(double ); } 
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float roundf(float ); } 
#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern long lround(double ); } 
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern long lroundf(float ); } 
#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llround(double ); } 
#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llroundf(float ); } 
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double rint(double ); } 
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float rintf(float ); } 
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern long lrint(double ); } 
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern long lrintf(float ); } 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llrint(double ); } 
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern __int64 llrintf(float ); } 
#line 2528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double nearbyint(double ); } 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float nearbyintf(float ); } 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double ); 
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double trunc(double ); } 
#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float truncf(float ); } 
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double fdim(double , double ); } 
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float fdimf(float , float ); } 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl atan2(double , double ); 
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl atan(double ); 
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl acos(double ); 
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl asin(double ); 
#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { static __inline double __cdecl hypot(double , double ); } 
#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { static __inline float __cdecl hypotf(float , float ); } 
#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double cbrt(double ); } 
#line 3071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float cbrtf(float ); } 
#line 3120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double rcbrt(double ); } 
#line 3169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float rcbrtf(float ); } 
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double sinpi(double ); } 
#line 3289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float sinpif(float ); } 
#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double cospi(double ); } 
#line 3393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float cospif(float ); } 
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern void sincospi(double , double * , double * ); } 
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern void sincospif(float , float * , float * ); } 
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl pow(double , double ); 
#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl modf(double , double * ); } 
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" double __cdecl fmod(double , double ); 
#line 3961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double remainder(double , double ); } 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float remainderf(float , float ); } 
#line 4097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double remquo(double , double , int * ); } 
#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float remquof(float , float , int * ); } 
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j0(double ); } 
#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float j0f(float ); } 
#line 4280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j1(double ); } 
#line 4337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float j1f(float ); } 
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl jn(int , double ); } 
#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float jnf(int , float ); } 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y0(double ); } 
#line 4511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float y0f(float ); } 
#line 4559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y1(double ); } 
#line 4607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float y1f(float ); } 
#line 4656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl yn(int , double ); } 
#line 4705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float ynf(int , float ); } 
#line 4783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double erf(double ); } 
#line 4861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float erff(float ); } 
#line 4918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double erfinv(double ); } 
#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float erfinvf(float ); } 
#line 5009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double erfc(double ); } 
#line 5043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float erfcf(float ); } 
#line 5167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double lgamma(double ); } 
#line 5223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double erfcinv(double ); } 
#line 5279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float erfcinvf(float ); } 
#line 5337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double normcdfinv(double ); } 
#line 5395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float normcdfinvf(float ); } 
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double normcdf(double ); } 
#line 5481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float normcdff(float ); } 
#line 5556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double erfcx(double ); } 
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float erfcxf(float ); } 
#line 5760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float lgammaf(float ); } 
#line 5865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double tgamma(double ); } 
#line 5970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float tgammaf(float ); } 
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double copysign(double , double ); } 
#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float copysignf(float , float ); } 
#line 6021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double nextafter(double , double ); } 
#line 6054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float nextafterf(float , float ); } 
#line 6066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double nan(const char * ); } 
#line 6078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float nanf(const char * ); } 
#line 6079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __isinff(float); } 
#line 6080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __isnanf(float); } 
#line 6089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __finite(double); } 
#line 6090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __finitef(float); } 
#line 6091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __signbit(double); } 
#line 6092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __isnan(double); } 
#line 6093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __isinf(double); } 
#line 6096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __signbitf(float); } 
#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern double fma(double , double , double ); } 
#line 6404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern float fmaf(float , float , float ); } 
#line 6409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __signbitl(long double); } 
#line 6415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __finitel(long double); } 
#line 6416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __isinfl(long double); } 
#line 6417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern int __isnanl(long double); } 
#line 6464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float acosf(float ); } 
#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float asinf(float ); } 
#line 6544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float atanf(float ); } 
#line 6577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float atan2f(float , float ); } 
#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float cosf(float ); } 
#line 6643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float sinf(float ); } 
#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float tanf(float ); } 
#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float coshf(float ); } 
#line 6750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float sinhf(float ); } 
#line 6780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float tanhf(float ); } 
#line 6831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float logf(float ); } 
#line 6881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float expf(float ); } 
#line 6932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float log10f(float ); } 
#line 6987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float modff(float , float * ); } 
#line 7295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float powf(float , float ); } 
#line 7364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float sqrtf(float ); } 
#line 7423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float ceilf(float ); } 
#line 7495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float floorf(float ); } 
#line 7554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { extern inline float fmodf(float , float ); } 
#line 24 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
#pragma pack ( push, 8 )
#line 37 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { struct _exception { 
#line 38 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
int type; 
#line 39 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
char *name; 
#line 40 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
double arg1; 
#line 41 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
double arg2; 
#line 42 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
double retval; 
#line 43 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
}; }
#line 54 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { struct _complex { 
#line 55 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
double x, y; 
#line 56 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
}; }
#line 88 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double _HUGE; 
#line 101 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { int __cdecl abs(int ); } 
#line 102 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { long __cdecl labs(long ); } 
#line 103 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __int64 __cdecl llabs(__int64 ); } 
#line 106 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl acos(double ); 
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl asin(double ); 
#line 108 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl atan(double ); 
#line 109 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl atan2(double , double ); 
#line 111 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _copysign(double , double ); } 
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _chgsign(double ); } 
#line 115 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl cos(double ); 
#line 116 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl cosh(double ); 
#line 117 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl exp(double ); 
#line 118 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { double __cdecl fabs(double ); } 
#line 119 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl fmod(double , double ); 
#line 120 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl log(double ); 
#line 121 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl log10(double ); 
#line 122 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl pow(double , double ); 
#line 123 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl sin(double ); 
#line 124 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl sinh(double ); 
#line 125 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl tan(double ); 
#line 126 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl tanh(double ); 
#line 127 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" double __cdecl sqrt(double ); 
#line 130 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * ); } 
#line 131 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * , _locale_t ); } 
#line 134 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _cabs(_complex ); } 
#line 135 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double ); 
#line 136 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl floor(double ); 
#line 137 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double , int * ); 
#line 138 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _hypot(double , double ); } 
#line 139 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _hypotf(float , float ); } 
#line 140 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j0(double ); } 
#line 141 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j1(double ); } 
#line 142 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _jn(int , double ); } 
#line 143 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double , int ); 
#line 149 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { int __cdecl _matherr(_exception * ); } 
#line 152 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl modf(double , double * ); } 
#line 154 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y0(double ); } 
#line 155 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y1(double ); } 
#line 156 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _yn(int , double ); } 
#line 161 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { static __inline double __cdecl hypot(double _X, double _Y) 
#line 162 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ 
#line 163 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
return _hypot(_X, _Y); 
#line 164 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
} } 
#line 166 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { static __inline float __cdecl hypotf(float _X, float _Y) 
#line 167 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ 
#line 168 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
return _hypotf(_X, _Y); 
#line 169 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
} } 
#line 175 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _set_SSE2_enable(int ); } 
#line 329 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double acosl(long double _X) 
#line 330 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return acos((double)_X); } } 
#line 331 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double asinl(long double _X) 
#line 332 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return asin((double)_X); } } 
#line 333 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double atanl(long double _X) 
#line 334 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return atan((double)_X); } } 
#line 335 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double atan2l(long double _Y, long double _X) 
#line 336 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return atan2((double)_Y, (double)_X); } } 
#line 337 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double ceill(long double _X) 
#line 338 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return ceil((double)_X); } } 
#line 339 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double cosl(long double _X) 
#line 340 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return cos((double)_X); } } 
#line 341 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double coshl(long double _X) 
#line 342 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return cosh((double)_X); } } 
#line 343 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double expl(long double _X) 
#line 344 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return exp((double)_X); } } 
#line 345 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double fabsl(long double _X) 
#line 346 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fabs((double)_X); } } 
#line 347 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double floorl(long double _X) 
#line 348 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return floor((double)_X); } } 
#line 349 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double fmodl(long double _X, long double _Y) 
#line 350 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fmod((double)_X, (double)_Y); } } 
#line 351 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double frexpl(long double _X, int *_Y) 
#line 352 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return frexp((double)_X, _Y); } } 
#line 353 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double ldexpl(long double _X, int _Y) 
#line 354 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return ldexp((double)_X, _Y); } } 
#line 355 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double logl(long double _X) 
#line 356 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return log((double)_X); } } 
#line 357 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double log10l(long double _X) 
#line 358 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return log10((double)_X); } } 
#line 359 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double modfl(long double _X, long double *_Y) 
#line 360 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ double _Di, _Df = modf((double)_X, &_Di); 
#line 361 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
(*_Y) = ((long double)_Di); 
#line 362 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
return _Df; } } 
#line 363 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double powl(long double _X, long double _Y) 
#line 364 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return pow((double)_X, (double)_Y); } } 
#line 365 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double sinl(long double _X) 
#line 366 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sin((double)_X); } } 
#line 367 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double sinhl(long double _X) 
#line 368 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sinh((double)_X); } } 
#line 369 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double sqrtl(long double _X) 
#line 370 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sqrt((double)_X); } } 
#line 371 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double tanl(long double _X) 
#line 372 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return tan((double)_X); } } 
#line 374 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double tanhl(long double _X) 
#line 375 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return tanh((double)_X); } } 
#line 377 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double _chgsignl(long double _Number) 
#line 378 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ 
#line 379 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
return _chgsign(static_cast< double>(_Number)); 
#line 380 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
} } 
#line 382 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline long double _copysignl(long double _Number, long double _Sign) 
#line 383 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ 
#line 384 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
return _copysign(static_cast< double>(_Number), static_cast< double>(_Sign)); 
#line 385 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
} } 
#line 387 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float frexpf(float _X, int *_Y) 
#line 388 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)frexp((double)_X, _Y); } } 
#line 391 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float fabsf(float _X) 
#line 392 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)fabs((double)_X); } } 
#line 395 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float ldexpf(float _X, int _Y) 
#line 396 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)ldexp((double)_X, _Y); } } 
#line 399 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float acosf(float _X) 
#line 400 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)acos((double)_X); } } 
#line 401 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float asinf(float _X) 
#line 402 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)asin((double)_X); } } 
#line 403 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float atanf(float _X) 
#line 404 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)atan((double)_X); } } 
#line 405 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float atan2f(float _Y, float _X) 
#line 406 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)atan2((double)_Y, (double)_X); } } 
#line 407 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float ceilf(float _X) 
#line 408 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)ceil((double)_X); } } 
#line 409 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float cosf(float _X) 
#line 410 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)cos((double)_X); } } 
#line 411 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float coshf(float _X) 
#line 412 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)cosh((double)_X); } } 
#line 413 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float expf(float _X) 
#line 414 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)exp((double)_X); } } 
#line 415 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float floorf(float _X) 
#line 416 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)floor((double)_X); } } 
#line 417 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float fmodf(float _X, float _Y) 
#line 418 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)fmod((double)_X, (double)_Y); } } 
#line 419 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float logf(float _X) 
#line 420 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)log((double)_X); } } 
#line 421 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float log10f(float _X) 
#line 422 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)log10((double)_X); } } 
#line 423 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float modff(float _X, float *_Y) 
#line 424 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ double _Di, _Df = modf((double)_X, &_Di); 
#line 425 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
(*_Y) = ((float)_Di); 
#line 426 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
return (float)_Df; } } 
#line 427 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float powf(float _X, float _Y) 
#line 428 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)pow((double)_X, (double)_Y); } } 
#line 429 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float sinf(float _X) 
#line 430 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)sin((double)_X); } } 
#line 431 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float sinhf(float _X) 
#line 432 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)sinh((double)_X); } } 
#line 433 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float sqrtf(float _X) 
#line 434 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)sqrt((double)_X); } } 
#line 435 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float tanf(float _X) 
#line 436 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)tan((double)_X); } } 
#line 437 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { inline float tanhf(float _X) 
#line 438 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return (float)tanh((double)_X); } } 
#line 459 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double HUGE; 
#line 464 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl cabs(_complex ); } 
#line 465 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j0(double ); } 
#line 466 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j1(double ); } 
#line 467 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl jn(int , double ); } 
#line 468 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y0(double ); } 
#line 469 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y1(double ); } 
#line 470 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl yn(int , double ); } 
#line 481 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
template < class _Ty > inline
        _Ty _Pow_int ( _Ty _X, int _Y )
        { unsigned int _N;
        if ( _Y >= 0 )
                _N = ( unsigned int ) _Y;
        else
                _N = ( unsigned int ) ( - _Y );
        for ( _Ty _Z = _Ty ( 1 );; _X *= _X )
                { if ( ( _N & 1 ) != 0 )
                        _Z *= _X;
                if ( ( _N >>= 1 ) == 0 )
                        return ( _Y < 0 ? _Ty ( 1 ) / _Z : _Z ); } }
#line 494 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline double __cdecl abs(double _X) 
#line 495 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fabs(_X); } 
#line 496 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline double __cdecl pow(double _X, int _Y) 
#line 497 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 498 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl abs(float _X) 
#line 499 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fabsf(_X); } 
#line 500 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl acos(float _X) 
#line 501 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return acosf(_X); } 
#line 502 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl asin(float _X) 
#line 503 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return asinf(_X); } 
#line 504 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl atan(float _X) 
#line 505 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return atanf(_X); } 
#line 506 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl atan2(float _Y, float _X) 
#line 507 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return atan2f(_Y, _X); } 
#line 508 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl ceil(float _X) 
#line 509 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return ceilf(_X); } 
#line 510 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl cos(float _X) 
#line 511 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return cosf(_X); } 
#line 512 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl cosh(float _X) 
#line 513 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return coshf(_X); } 
#line 514 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl exp(float _X) 
#line 515 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return expf(_X); } 
#line 516 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl fabs(float _X) 
#line 517 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fabsf(_X); } 
#line 518 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl floor(float _X) 
#line 519 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return floorf(_X); } 
#line 520 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl fmod(float _X, float _Y) 
#line 521 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fmodf(_X, _Y); } 
#line 522 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl frexp(float _X, int *_Y) 
#line 523 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return frexpf(_X, _Y); } 
#line 524 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl ldexp(float _X, int _Y) 
#line 525 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return ldexpf(_X, _Y); } 
#line 526 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl log(float _X) 
#line 527 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return logf(_X); } 
#line 528 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl log10(float _X) 
#line 529 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return log10f(_X); } 
#line 530 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl modf(float _X, float *_Y) 
#line 531 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return modff(_X, _Y); } 
#line 532 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl pow(float _X, float _Y) 
#line 533 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return powf(_X, _Y); } 
#line 534 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl pow(float _X, int _Y) 
#line 535 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 536 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl sin(float _X) 
#line 537 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sinf(_X); } 
#line 538 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl sinh(float _X) 
#line 539 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sinhf(_X); } 
#line 540 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl sqrt(float _X) 
#line 541 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sqrtf(_X); } 
#line 542 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl tan(float _X) 
#line 543 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return tanf(_X); } 
#line 544 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline float __cdecl tanh(float _X) 
#line 545 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return tanhf(_X); } 
#line 546 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl abs(long double _X) 
#line 547 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fabsl(_X); } 
#line 548 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl acos(long double _X) 
#line 549 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return acosl(_X); } 
#line 550 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl asin(long double _X) 
#line 551 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return asinl(_X); } 
#line 552 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl atan(long double _X) 
#line 553 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return atanl(_X); } 
#line 554 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl atan2(long double _Y, long double _X) 
#line 555 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return atan2l(_Y, _X); } 
#line 556 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl ceil(long double _X) 
#line 557 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return ceill(_X); } 
#line 558 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl cos(long double _X) 
#line 559 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return cosl(_X); } 
#line 560 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl cosh(long double _X) 
#line 561 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return coshl(_X); } 
#line 562 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl exp(long double _X) 
#line 563 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return expl(_X); } 
#line 564 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl fabs(long double _X) 
#line 565 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fabsl(_X); } 
#line 566 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl floor(long double _X) 
#line 567 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return floorl(_X); } 
#line 568 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl fmod(long double _X, long double _Y) 
#line 569 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return fmodl(_X, _Y); } 
#line 570 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl frexp(long double _X, int *_Y) 
#line 571 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return frexpl(_X, _Y); } 
#line 572 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl ldexp(long double _X, int _Y) 
#line 573 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return ldexpl(_X, _Y); } 
#line 574 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl log(long double _X) 
#line 575 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return logl(_X); } 
#line 576 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl log10(long double _X) 
#line 577 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return log10l(_X); } 
#line 578 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl modf(long double _X, long double *_Y) 
#line 579 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return modfl(_X, _Y); } 
#line 580 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl pow(long double _X, long double _Y) 
#line 581 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return powl(_X, _Y); } 
#line 582 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl pow(long double _X, int _Y) 
#line 583 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 584 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl sin(long double _X) 
#line 585 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sinl(_X); } 
#line 586 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl sinh(long double _X) 
#line 587 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sinhl(_X); } 
#line 588 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl sqrt(long double _X) 
#line 589 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return sqrtl(_X); } 
#line 590 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl tan(long double _X) 
#line 591 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return tanl(_X); } 
#line 592 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
inline long double __cdecl tanh(long double _X) 
#line 593 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
{ return tanhl(_X); } 
#line 598 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\math.h"
#pragma pack ( pop )
#line 28 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
#pragma pack ( push, 8 )
#line 52 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef int (__cdecl *_onexit_t)(void); }
#line 78 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 75 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct _div_t { 
#line 76 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
int quot; 
#line 77 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
int rem; 
#line 78 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} div_t; }
#line 83 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 80 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct _ldiv_t { 
#line 81 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
long quot; 
#line 82 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
long rem; 
#line 83 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} ldiv_t; }
#line 88 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 85 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct _lldiv_t { 
#line 86 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
__int64 quot; 
#line 87 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
__int64 rem; 
#line 88 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} lldiv_t; }
#line 102 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
#pragma pack ( 4 )
#line 105 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 103 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct { 
#line 104 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
unsigned char ld[10]; 
#line 105 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} _LDOUBLE; }
#pragma pack ( )
#line 124 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 122 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct { 
#line 123 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
double x; 
#line 124 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} _CRT_DOUBLE; }
#line 128 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 126 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct { 
#line 127 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
float f; 
#line 128 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} _CRT_FLOAT; }
#line 139 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 134 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct { 
#line 138 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
long double x; 
#line 139 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} _LONGDOUBLE; }
#line 143 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
#pragma pack ( 4 )
#line 146 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 144 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
struct { 
#line 145 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
unsigned char ld12[12]; 
#line 146 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} _LDBL12; }
#pragma pack ( )
#line 163 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int __mb_cur_max; 
#line 168 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_func(); } 
#line 169 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_l_func(_locale_t); } 
#line 208 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef void (__cdecl *_purecall_handler)(void); }
#line 211 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _set_purecall_handler(_purecall_handler ); } 
#line 212 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _get_purecall_handler(); } 
#line 228 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { typedef void (__cdecl *_invalid_parameter_handler)(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); }
#line 231 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(_invalid_parameter_handler ); } 
#line 232 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(); } 
#line 245 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long *__cdecl __doserrno(); } 
#line 248 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _set_doserrno(unsigned long ); } 
#line 249 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_doserrno(unsigned long * ); } 
#line 252 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __sys_errlist(); } 
#line 255 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __sys_nerr(); } 
#line 261 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __p___argc(); } 
#line 262 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char ***__cdecl __p___argv(); } 
#line 263 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t ***__cdecl __p___wargv(); } 
#line 264 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char ***__cdecl __p__environ(); } 
#line 265 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t ***__cdecl __p__wenviron(); } 
#line 268 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __p__pgmptr(); } 
#line 269 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t **__cdecl __p__wpgmptr(); } 
#line 277 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int __argc; 
#line 278 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char **__argv; 
#line 279 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **__wargv; 
#line 298 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char **_environ; 
#line 299 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **_wenviron; 
#line 304 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char *_pgmptr; 
#line 305 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t *_wpgmptr; 
#line 328 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_pgmptr(char ** ); } 
#line 329 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_wpgmptr(__wchar_t ** ); } 
#line 333 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int _fmode; 
#line 339 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _set_fmode(int ); } 
#line 340 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_fmode(int * ); } 
#line 349 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template< class _CountofType, size_t _SizeOfArray> char (*__countof_helper(_CountofType (& )[_SizeOfArray]))[_SizeOfArray]; 
#line 360 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl exit(int ); } 
#line 361 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl _exit(int ); } 
#line 362 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl abort(); } 
#line 365 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _set_abort_behavior(unsigned , unsigned ); } 
#line 374 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __int64 __cdecl _abs64(__int64); } 
#line 412 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { int __cdecl atexit(void (__cdecl *)(void)); } 
#line 419 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl atoi(const char * ); } 
#line 420 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoi_l(const char * , _locale_t ); } 
#line 421 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl atol(const char * ); } 
#line 422 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _atol_l(const char * , _locale_t ); } 
#line 426 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch_s(const void * , const void * , rsize_t , rsize_t , int (__cdecl * )(void *, const void *, const void *), void * ); } 
#line 430 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch(const void * , const void * , size_t , size_t , int (__cdecl * )(const void *, const void *)); } 
#line 435 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort_s(void * , rsize_t , rsize_t , int (__cdecl * )(void *, const void *, const void *), void * ); } 
#line 439 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort(void * , size_t , size_t , int (__cdecl * )(const void *, const void *)); } 
#line 443 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned short __cdecl _byteswap_ushort(unsigned short ); } 
#line 444 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _byteswap_ulong(unsigned long ); } 
#line 445 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64 ); } 
#line 446 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) div_t __cdecl div(int , int ); } 
#line 449 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl getenv(const char * ); } 
#line 451 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl getenv_s(size_t * , char * , rsize_t , const char * ); } 
#line 453 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl getenv_s ( size_t * _ReturnSize, char ( & _Dest ) [ _Size ], const char * _VarName ) throw ( ) { return getenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 459 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _dupenv_s(char ** , size_t * , const char * ); } 
#line 466 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itoa_s(int , char * , size_t , int ); } 
#line 467 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itoa_s ( int _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 468 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _itoa(int , char * , int ); } 
#line 469 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64toa_s(__int64 , char * , size_t , int ); } 
#line 470 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _i64toa(__int64 , char * , int ); } 
#line 471 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64toa_s(unsigned __int64 , char * , size_t , int ); } 
#line 472 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ui64toa(unsigned __int64 , char * , int ); } 
#line 473 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64(const char * ); } 
#line 474 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64_l(const char * , _locale_t ); } 
#line 475 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64(const char * , char ** , int ); } 
#line 476 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64_l(const char * , char ** , int , _locale_t ); } 
#line 477 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64(const char * , char ** , int ); } 
#line 478 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64_l(const char * , char ** , int , _locale_t ); } 
#line 479 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) ldiv_t __cdecl ldiv(long , long ); } 
#line 480 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) lldiv_t __cdecl lldiv(__int64 , __int64 ); } 
#line 484 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
inline long abs(long _X) 
#line 485 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
{ 
#line 486 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
return labs(_X); 
#line 487 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} 
#line 488 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
inline __int64 abs(__int64 _X) 
#line 489 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
{ 
#line 490 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
return llabs(_X); 
#line 491 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} 
#line 492 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
inline ldiv_t div(long _A1, long _A2) 
#line 493 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
{ 
#line 494 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
return ldiv(_A1, _A2); 
#line 495 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} 
#line 496 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
inline lldiv_t div(__int64 _A1, __int64 _A2) 
#line 497 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
{ 
#line 498 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
return lldiv(_A1, _A2); 
#line 499 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
} 
#line 502 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltoa_s(long , char * , size_t , int ); } 
#line 503 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltoa_s ( long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 504 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ltoa(long , char * , int ); } 
#line 505 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mblen(const char * , size_t ); } 
#line 506 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mblen_l(const char * , size_t , _locale_t ); } 
#line 507 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen(const char * ); } 
#line 508 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen_l(const char * , _locale_t ); } 
#line 509 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen(const char * , size_t ); } 
#line 510 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen_l(const char * , size_t , _locale_t ); } 
#line 511 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mbtowc(__wchar_t * , const char * , size_t ); } 
#line 512 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mbtowc_l(__wchar_t * , const char * , size_t , _locale_t ); } 
#line 513 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl mbstowcs_s(size_t * , __wchar_t * , size_t , const char * , size_t ); } 
#line 514 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl mbstowcs_s ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount ) throw ( ) { return mbstowcs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 515 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl mbstowcs(__wchar_t * , const char * , size_t ); } 
#line 517 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _mbstowcs_s_l(size_t * , __wchar_t * , size_t , const char * , size_t , _locale_t ); } 
#line 518 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _mbstowcs_s_l ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _mbstowcs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 519 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstowcs_l(__wchar_t * , const char * , size_t , _locale_t ); } 
#line 521 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl rand(); } 
#line 526 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _set_error_mode(int ); } 
#line 528 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl srand(unsigned ); } 
#line 529 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl strtod(const char * , char ** ); } 
#line 530 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _strtod_l(const char * , char ** , _locale_t ); } 
#line 531 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl strtol(const char * , char ** , int ); } 
#line 532 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _strtol_l(const char * , char ** , int , _locale_t ); } 
#line 533 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl strtoul(const char * , char ** , int ); } 
#line 534 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _strtoul_l(const char * , char ** , int , _locale_t ); } 
#line 539 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl system(const char * ); } 
#line 543 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultoa_s(unsigned long , char * , size_t , int ); } 
#line 544 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultoa_s ( unsigned long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 545 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ultoa(unsigned long , char * , int ); } 
#line 546 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl wctomb(char * , __wchar_t ); } 
#line 547 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wctomb_l(char * , __wchar_t , _locale_t ); } 
#line 549 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wctomb_s(int * , char * , rsize_t , __wchar_t ); } 
#line 551 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctomb_s_l(int * , char * , size_t , __wchar_t , _locale_t ); } 
#line 552 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcstombs_s(size_t * , char * , size_t , const __wchar_t * , size_t ); } 
#line 553 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl wcstombs_s ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount ) throw ( ) { return wcstombs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 554 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcstombs(char * , const __wchar_t * , size_t ); } 
#line 555 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcstombs_s_l(size_t * , char * , size_t , const __wchar_t * , size_t , _locale_t ); } 
#line 556 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wcstombs_s_l ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _wcstombs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 557 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcstombs_l(char * , const __wchar_t * , size_t , _locale_t ); } 
#line 619 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl calloc(size_t , size_t ); } 
#line 620 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl free(void * ); } 
#line 621 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl malloc(size_t ); } 
#line 623 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl realloc(void * , size_t ); } 
#line 625 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _recalloc(void * , size_t , size_t ); } 
#line 626 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl _aligned_free(void * ); } 
#line 627 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_malloc(size_t , size_t ); } 
#line 628 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_malloc(size_t , size_t , size_t ); } 
#line 630 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_realloc(void * , size_t , size_t ); } 
#line 632 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_recalloc(void * , size_t , size_t , size_t ); } 
#line 634 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_realloc(void * , size_t , size_t , size_t ); } 
#line 636 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_recalloc(void * , size_t , size_t , size_t , size_t ); } 
#line 637 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _aligned_msize(void * , size_t , size_t ); } 
#line 664 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itow_s(int , __wchar_t * , size_t , int ); } 
#line 665 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itow_s ( int _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itow_s ( _Value, _Dest, _Size, _Radix ); }
#line 666 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _itow(int , __wchar_t * , int ); } 
#line 667 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltow_s(long , __wchar_t * , size_t , int ); } 
#line 668 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltow_s ( long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltow_s ( _Value, _Dest, _Size, _Radix ); }
#line 669 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ltow(long , __wchar_t * , int ); } 
#line 670 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultow_s(unsigned long , __wchar_t * , size_t , int ); } 
#line 671 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultow_s ( unsigned long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultow_s ( _Value, _Dest, _Size, _Radix ); }
#line 672 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ultow(unsigned long , __wchar_t * , int ); } 
#line 673 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl wcstod(const __wchar_t * , __wchar_t ** ); } 
#line 674 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wcstod_l(const __wchar_t * , __wchar_t ** , _locale_t ); } 
#line 675 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl wcstol(const __wchar_t * , __wchar_t ** , int ); } 
#line 676 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wcstol_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 677 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl wcstoul(const __wchar_t * , __wchar_t ** , int ); } 
#line 678 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _wcstoul_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 682 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wgetenv(const __wchar_t * ); } 
#line 683 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wgetenv_s(size_t * , __wchar_t * , size_t , const __wchar_t * ); } 
#line 684 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wgetenv_s ( size_t * _ReturnSize, wchar_t ( & _Dest ) [ _Size ], const wchar_t * _VarName ) throw ( ) { return _wgetenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 691 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wdupenv_s(__wchar_t ** , size_t * , const __wchar_t * ); } 
#line 699 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wsystem(const __wchar_t * ); } 
#line 704 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof(const __wchar_t * ); } 
#line 705 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof_l(const __wchar_t * , _locale_t ); } 
#line 706 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi(const __wchar_t * ); } 
#line 707 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi_l(const __wchar_t * , _locale_t ); } 
#line 708 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol(const __wchar_t * ); } 
#line 709 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol_l(const __wchar_t * , _locale_t ); } 
#line 711 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64tow_s(__int64 , __wchar_t * , size_t , int ); } 
#line 712 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _i64tow(__int64 , __wchar_t * , int ); } 
#line 713 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64tow_s(unsigned __int64 , __wchar_t * , size_t , int ); } 
#line 714 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ui64tow(unsigned __int64 , __wchar_t * , int ); } 
#line 715 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64(const __wchar_t * ); } 
#line 716 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64_l(const __wchar_t * , _locale_t ); } 
#line 717 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64(const __wchar_t * , __wchar_t ** , int ); } 
#line 718 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 719 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64(const __wchar_t * , __wchar_t ** , int ); } 
#line 720 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64_l(const __wchar_t * , __wchar_t ** , int , _locale_t ); } 
#line 740 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fullpath(char * , const char * , size_t ); } 
#line 748 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ecvt_s(char * , size_t , double , int , int * , int * ); } 
#line 749 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ecvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _ecvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 750 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ecvt(double , int , int * , int * ); } 
#line 751 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _fcvt_s(char * , size_t , double , int , int * , int * ); } 
#line 752 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _fcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _fcvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 753 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fcvt(double , int , int * , int * ); } 
#line 754 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gcvt_s(char * , size_t , double , int ); } 
#line 755 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _gcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits ) throw ( ) { return _gcvt_s ( _Dest, _Size, _Value, _NumOfDigits ); }
#line 756 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _gcvt(double , int , char * ); } 
#line 758 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl(_CRT_DOUBLE * , char * ); } 
#line 759 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl(_LDOUBLE * , char * ); } 
#line 760 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt(_CRT_FLOAT * , char * ); } 
#line 761 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl_l(_CRT_DOUBLE * , char * , _locale_t ); } 
#line 762 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl_l(_LDOUBLE * , char * , _locale_t ); } 
#line 763 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt_l(_CRT_FLOAT * , char * , _locale_t ); } 
#line 764 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotl(unsigned long , int ); } 
#line 765 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotr(unsigned long , int ); } 
#line 766 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _makepath_s(char * , size_t , const char * , const char * , const char * , const char * ); } 
#line 768 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _makepath_s ( char ( & _Path ) [ _Size ], const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext ) throw ( ) { return _makepath_s ( _Path, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 769 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _makepath(char * , const char * , const char * , const char * , const char * ); } 
#line 796 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { _onexit_t __cdecl _onexit(_onexit_t ); } 
#line 801 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl perror(const char * ); } 
#line 804 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
#pragma warning (push)
#pragma warning (disable:6540)
#line 808 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _putenv(const char * ); } 
#line 809 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _putenv_s(const char * , const char * ); } 
#line 812 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __cdecl _rotl(unsigned , int ); } 
#line 813 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotl64(unsigned __int64 , int ); } 
#line 814 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __cdecl _rotr(unsigned , int ); } 
#line 815 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotr64(unsigned __int64 , int ); } 
#pragma warning (pop)
#line 819 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _searchenv_s(const char * , const char * , char * , size_t ); } 
#line 820 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _searchenv_s ( const char * _Filename, const char * _EnvVar, char ( & _ResultPath ) [ _Size ] ) throw ( ) { return _searchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 821 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _searchenv(const char * , const char * , char * ); } 
#line 824 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _splitpath(const char * , char * , char * , char * , char * ); } 
#line 825 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _splitpath_s(const char * , char * , size_t , char * , size_t , char * , size_t , char * , size_t ); } 
#line 830 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _splitpath_s ( const char * _Dest, char ( & _Drive ) [ _DriveSize ], char ( & _Dir ) [ _DirSize ], char ( & _Name ) [ _NameSize ], char ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _splitpath_s ( _Dest, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 832 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _swab(char * , char * , int ); } 
#line 843 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wfullpath(__wchar_t * , const __wchar_t * , size_t ); } 
#line 849 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wmakepath_s(__wchar_t * , size_t , const __wchar_t * , const __wchar_t * , const __wchar_t * , const __wchar_t * ); } 
#line 851 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wmakepath_s ( wchar_t ( & _ResultPath ) [ _Size ], const wchar_t * _Drive, const wchar_t * _Dir, const wchar_t * _Filename, const wchar_t * _Ext ) throw ( ) { return _wmakepath_s ( _ResultPath, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 852 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wmakepath(__wchar_t * , const __wchar_t * , const __wchar_t * , const __wchar_t * , const __wchar_t * ); } 
#line 855 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wperror(const __wchar_t * ); } 
#line 859 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wputenv(const __wchar_t * ); } 
#line 860 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wputenv_s(const __wchar_t * , const __wchar_t * ); } 
#line 861 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsearchenv_s(const __wchar_t * , const __wchar_t * , __wchar_t * , size_t ); } 
#line 862 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wsearchenv_s ( const wchar_t * _Filename, const wchar_t * _EnvVar, wchar_t ( & _ResultPath ) [ _Size ] ) throw ( ) { return _wsearchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 863 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsearchenv(const __wchar_t * , const __wchar_t * , __wchar_t * ); } 
#line 866 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsplitpath(const __wchar_t * , __wchar_t * , __wchar_t * , __wchar_t * , __wchar_t * ); } 
#line 867 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsplitpath_s(const __wchar_t * , __wchar_t * , size_t , __wchar_t * , size_t , __wchar_t * , size_t , __wchar_t * , size_t ); } 
#line 872 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _wsplitpath_s ( const wchar_t * _Path, wchar_t ( & _Drive ) [ _DriveSize ], wchar_t ( & _Dir ) [ _DirSize ], wchar_t ( & _Name ) [ _NameSize ], wchar_t ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _wsplitpath_s ( _Path, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 879 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode in" "stead. See online help for details.")) __declspec(dllimport) void __cdecl _seterrormode(int ); } 
#line 880 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. S" "ee online help for details.")) __declspec(dllimport) void __cdecl _beep(unsigned , unsigned ); } 
#line 881 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. " "See online help for details.")) __declspec(dllimport) void __cdecl _sleep(unsigned long ); } 
#line 904 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
#pragma warning(push)
#pragma warning(disable: 4141)
extern "C" { __declspec(dllimport) char *__cdecl ecvt(double , int , int * , int * ); } 
#line 907 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl fcvt(double , int , int * , int * ); } 
#line 908 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl gcvt(double , int , char * ); } 
#line 909 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl itoa(int , char * , int ); } 
#line 910 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ltoa(long , char * , int ); } 
#line 913 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl putenv(const char * ); } 
#line 916 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl swab(char * , char * , int ); } 
#line 917 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ultoa(unsigned long , char * , int ); } 
#pragma warning(pop)
extern "C" { _onexit_t __cdecl onexit(_onexit_t ); } 
#line 185 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("_MSC_VER", "1700")
#line 189 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("_ITERATOR_DEBUG_LEVEL", "2")
#line 200 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("RuntimeLibrary", "MDd_DynamicDebug")
#line 27 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\use_ansi.h"
#pragma comment(lib, "msvcprtd")
#line 930 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdlib.h"
#pragma pack ( pop )
#line 10 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma pack ( push, 8 )
#line 491 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
namespace std { 
#line 492 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef bool _Bool; 
#line 493 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
}
#line 509 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef __int64 _Longlong; 
#line 510 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef unsigned __int64 _ULonglong; 
#line 528 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef unsigned short char16_t; 
#line 529 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef unsigned char32_t; 
#line 542 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
namespace std { 
#line 543 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
enum _Uninitialized { 
#line 545 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
_Noinit
#line 546 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
}; 
#line 550 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma warning(push)
#pragma warning(disable:4412)
class __declspec(dllimport) _Lockit { 
#line 575 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
public: __thiscall _Lockit(); 
#line 576 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
explicit __thiscall _Lockit(int); 
#line 577 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
__thiscall ~_Lockit() throw(); 
#line 580 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_ctor(int); 
#line 581 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_dtor(int); 
#line 584 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
private: static void __cdecl _Lockit_ctor(_Lockit *); 
#line 585 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_ctor(_Lockit *, int); 
#line 586 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_dtor(_Lockit *); 
#line 588 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
_Lockit(const _Lockit &); 
#line 589 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
_Lockit &operator=(const _Lockit &); 
#line 591 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
int _Locktype; 
#line 606 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
}; 
#line 693 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
class __declspec(dllimport) _Init_locks { 
#line 709 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
public: __thiscall _Init_locks(); 
#line 710 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
__thiscall ~_Init_locks() throw(); 
#line 714 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
private: static void __cdecl _Init_locks_ctor(_Init_locks *); 
#line 715 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
static void __cdecl _Init_locks_dtor(_Init_locks *); 
#line 726 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
}; 
#line 728 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma warning(pop)
}
#line 738 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
__declspec(dllimport) void __cdecl _Atexit(void (__cdecl *)(void)); 
#line 740 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef int _Mbstatet; 
#line 741 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
typedef unsigned long _Uint32t; 
#line 9 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
#pragma warning(push,3)
#line 750 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\yvals.h"
#pragma pack ( pop )
#line 8 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
#pragma pack ( push, 8 )
#line 13 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
namespace std { 
#line 15 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _T1, class 
#line 16 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Ret> struct unary_function; 
#line 20 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _T1, class 
#line 21 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_T2, class 
#line 22 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Ret> struct binary_function; 
#line 26 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Nil { 
#line 28 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 29 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
static _Nil _Nil_obj; 
#line 32 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template < class _Ty,
 _Ty _Val >
 struct integral_constant
 {
 static const _Ty value = _Val;

 typedef _Ty value_type;
 typedef integral_constant < _Ty, _Val > type;

 operator value_type ( ) const
  {
  return ( value );
  }
 };
#line 47 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef integral_constant< bool, true>  true_type; 
#line 48 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef integral_constant< bool, false>  false_type; 
#line 51 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< bool __T0> 
#line 52 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Cat_base : public false_type { 
#line 55 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 58 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Cat_base< true>  : public true_type { 
#line 61 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 64 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< bool _Test, class 
#line 65 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Ty = void> 
#line 66 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct enable_if { 
#line 68 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 70 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 71 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct enable_if< true, _Ty>  { 
#line 73 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 74 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 77 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< bool _Test, class 
#line 78 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Ty1, class 
#line 79 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Ty2> 
#line 80 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct conditional { 
#line 82 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty2 type; 
#line 83 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 85 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty1, class 
#line 86 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Ty2> 
#line 87 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct conditional< true, _Ty1, _Ty2>  { 
#line 89 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty1 type; 
#line 90 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 93 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty1, class _Ty2> 
#line 94 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct is_same : public false_type { 
#line 97 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 99 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty1> 
#line 100 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct is_same< _Ty1, _Ty1>  : public true_type { 
#line 103 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 106 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_const { 
#line 109 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 110 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 113 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty>  { 
#line 115 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 116 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 118 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 119 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty []>  { 
#line 121 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type[]; 
#line 122 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 124 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 125 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty [_Nx]>  { 
#line 127 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type[_Nx]; 
#line 128 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 131 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 132 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_volatile { 
#line 134 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 135 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 137 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 138 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty>  { 
#line 140 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 141 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 143 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 144 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty []>  { 
#line 146 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type[]; 
#line 147 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 149 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 150 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty [_Nx]>  { 
#line 152 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type[_Nx]; 
#line 153 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 156 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 157 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_cv { 
#line 160 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef typename remove_const< typename remove_volatile< _Ty> ::type> ::type type; 
#line 161 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 164 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 165 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Is_integral : public false_type { 
#line 168 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 171 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< bool>  : public true_type { 
#line 174 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 177 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< char>  : public true_type { 
#line 180 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 183 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned char>  : public true_type { 
#line 186 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 189 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed char>  : public true_type { 
#line 192 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 196 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< __wchar_t>  : public true_type { 
#line 199 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 203 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned short>  : public true_type { 
#line 206 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 209 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed short>  : public true_type { 
#line 212 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 215 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned>  : public true_type { 
#line 218 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 221 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed int>  : public true_type { 
#line 224 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 227 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned long>  : public true_type { 
#line 230 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 233 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed long>  : public true_type { 
#line 236 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 254 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< __int64>  : public true_type { 
#line 257 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 260 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned __int64>  : public true_type { 
#line 263 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 267 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 268 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct is_integral : public _Is_integral< typename remove_cv< _Ty> ::type>  { 
#line 271 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 274 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 275 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Is_floating_point : public false_type { 
#line 278 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 281 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< float>  : public true_type { 
#line 284 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 287 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< double>  : public true_type { 
#line 290 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 293 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< long double>  : public true_type { 
#line 296 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 299 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 300 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct is_floating_point : public _Is_floating_point< typename remove_cv< _Ty> ::type>  { 
#line 303 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 305 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 306 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Is_numeric : public _Cat_base< is_integral< _Ty> ::value || is_floating_point< _Ty> ::value>  { 
#line 310 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 313 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 314 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_reference { 
#line 316 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 317 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 319 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 320 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_reference< _Ty &>  { 
#line 322 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 323 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 325 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 326 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct remove_reference< _Ty &&>  { 
#line 328 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 329 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 332 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 333 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Src> 
#line 334 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Copy_cv { 
#line 336 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 337 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef _Tgtx &type; 
#line 338 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 340 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 341 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Src> 
#line 342 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, const _Src>  { 
#line 344 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 345 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef const _Tgtx &type; 
#line 346 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 348 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 349 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Src> 
#line 350 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, volatile _Src>  { 
#line 352 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 353 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef volatile _Tgtx &type; 
#line 354 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 356 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 357 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Src> 
#line 358 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, const volatile _Src>  { 
#line 360 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 361 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef const volatile _Tgtx &type; 
#line 362 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 364 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 365 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Src> 
#line 366 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, _Src &>  { 
#line 368 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
typedef typename std::_Copy_cv< _Tgt, _Src> ::type type; 
#line 369 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 372 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Wrap_int { 
#line 374 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
_Wrap_int(int) 
#line 375 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
{ 
#line 376 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
} 
#line 377 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}; 
#line 412 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 413 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
struct _Has_result_type { 
#line 414 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
template< class _Uty> static auto _Fn(int, typename remove_reference< typename _Uty::result_type> ::type * = 0, typename remove_reference< typename _Uty::result_type> ::type * = 0, typename remove_reference< typename _Uty::result_type> ::type * = 0)->true_type; template< class _Uty> static auto _Fn(_Wrap_int)->false_type; typedef decltype((_Fn< _Ty> (0))) type; }; 
#line 415 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
}
#line 417 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
#pragma warning(pop)
#line 11 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
#pragma warning(push,3)
#line 418 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtr1common"
#pragma pack ( pop )
#line 10 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
#pragma pack ( push, 8 )
#line 15 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
namespace std { 
#line 16 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
template< class _Ty> 
#line 17 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
struct _Promote_to_float { 
#line 20 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
typedef typename conditional< is_integral< _Ty> ::value, double, _Ty> ::type type; 
#line 21 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
}; 
#line 23 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
template< class _Ty1, class 
#line 24 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
_Ty2> 
#line 25 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
struct _Common_float_type { 
#line 27 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
typedef typename _Promote_to_float< _Ty1> ::type _Ty1f; 
#line 28 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
typedef typename _Promote_to_float< _Ty2> ::type _Ty2f; 
#line 33 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
typedef typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, long double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, long double> ::value, long double, typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, double> ::value, double, float> ::type> ::type type; 
#line 34 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
}; 
#line 35 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
}
#line 70 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl pow(double, double); 
#line 71 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
inline float __cdecl pow(float, float); 
#line 72 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
inline long double __cdecl pow(long double, long double); 
#line 74 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value
  && :: std :: _Is_numeric < _Ty2 > :: value,
  typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type
 pow ( const _Ty1 _Left, const _Ty2 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( :: pow ( type ( _Left ), type ( _Right ) ) );
 }
#line 86 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl acos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acos ( _Ty _Left ) { return ( :: acos ( ( double ) _Left ) ); }
#line 87 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl asin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asin ( _Ty _Left ) { return ( :: asin ( ( double ) _Left ) ); }
#line 88 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl atan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atan ( _Ty _Left ) { return ( :: atan ( ( double ) _Left ) ); }
#line 89 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl atan2(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type atan2 ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: atan2 ( ( type ) _Left, ( type ) _Right ) ); }
#line 90 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ceil ( _Ty _Left ) { return ( :: ceil ( ( double ) _Left ) ); }
#line 91 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl cos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cos ( _Ty _Left ) { return ( :: cos ( ( double ) _Left ) ); }
#line 92 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl cosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cosh ( _Ty _Left ) { return ( :: cosh ( ( double ) _Left ) ); }
#line 93 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl exp(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp ( _Ty _Left ) { return ( :: exp ( ( double ) _Left ) ); }
#line 95 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl floor(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type floor ( _Ty _Left ) { return ( :: floor ( ( double ) _Left ) ); }
#line 96 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl fmod(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type fmod ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmod ( ( type ) _Left, ( type ) _Right ) ); }
#line 97 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double, int *); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type frexp ( _Ty _Left, int * _Arg2 ) { return ( :: frexp ( ( double ) _Left, _Arg2 ) ); }
#line 98 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ldexp ( _Ty _Left, int _Arg2 ) { return ( :: ldexp ( ( double ) _Left, _Arg2 ) ); }
#line 99 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl log(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log ( _Ty _Left ) { return ( :: log ( ( double ) _Left ) ); }
#line 100 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl log10(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log10 ( _Ty _Left ) { return ( :: log10 ( ( double ) _Left ) ); }
#line 103 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sin ( _Ty _Left ) { return ( :: sin ( ( double ) _Left ) ); }
#line 104 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sinh ( _Ty _Left ) { return ( :: sinh ( ( double ) _Left ) ); }
#line 105 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sqrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sqrt ( _Ty _Left ) { return ( :: sqrt ( ( double ) _Left ) ); }
#line 106 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl tan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tan ( _Ty _Left ) { return ( :: tan ( ( double ) _Left ) ); }
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl tanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tanh ( _Ty _Left ) { return ( :: tanh ( ( double ) _Left ) ); }
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\xtgmath.h"
#pragma warning(pop)
#pragma pack ( pop )
#line 27 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
namespace std { 
#line 28 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::acosf;using ::asinf;
#line 29 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::atanf;using ::atan2f;using ::ceilf;
#line 30 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::cosf;using ::coshf;using ::expf;
#line 31 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::fabsf;using ::floorf;using ::fmodf;
#line 32 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::frexpf;using ::ldexpf;using ::logf;
#line 33 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::log10f;using ::modff;using ::powf;
#line 34 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::sinf;using ::sinhf;using ::sqrtf;
#line 35 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::tanf;using ::tanhf;
#line 37 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::acosl;using ::asinl;
#line 38 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::atanl;using ::atan2l;using ::ceill;
#line 39 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::cosl;using ::coshl;using ::expl;
#line 40 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::fabsl;using ::floorl;using ::fmodl;
#line 41 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::frexpl;using ::ldexpl;using ::logl;
#line 42 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::log10l;using ::modfl;using ::powl;
#line 43 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::sinl;using ::sinhl;using ::sqrtl;
#line 44 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::tanl;using ::tanhl;
#line 46 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::abs;
#line 48 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::acos;using ::asin;
#line 49 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::atan;using ::atan2;using ::ceil;
#line 50 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::cos;using ::cosh;using ::exp;
#line 51 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::fabs;using ::floor;using ::fmod;
#line 52 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::frexp;using ::ldexp;using ::log;
#line 53 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::log10;using ::modf;using ::pow;
#line 54 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::sin;using ::sinh;using ::sqrt;
#line 55 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::tan;using ::tanh;
#line 57 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
using ::hypot;using ::hypotf;
#line 58 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cmath"
}
#line 18 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
namespace std { 
#line 19 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::size_t;using ::div_t;using ::ldiv_t;
#line 21 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::abort;using ::abs;using ::atexit;
#line 22 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::atof;using ::atoi;using ::atol;
#line 23 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::bsearch;using ::calloc;using ::div;
#line 24 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::exit;using ::free;
#line 25 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::labs;using ::ldiv;using ::malloc;
#line 26 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::mblen;using ::mbstowcs;using ::mbtowc;
#line 27 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::qsort;using ::rand;using ::realloc;
#line 28 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::srand;using ::strtod;using ::strtol;
#line 29 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::strtoul;
#line 30 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::wcstombs;using ::wctomb;
#line 32 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::lldiv_t;
#line 33 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::llabs;using ::lldiv;
#line 36 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::getenv;
#line 37 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
using ::system;
#line 39 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\cstdlib"
}
#line 7661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl _hypot(double , double ); } 
#line 7662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl _hypotf(float , float ); } 
#line 7666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int signbit(long double a) 
#line 7667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __signbitl(a); 
#line 7669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int signbit(double a) 
#line 7683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __signbit(a); 
#line 7685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int signbit(float a) 
#line 7699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __signbitf(a); 
#line 7701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isinf(long double a) 
#line 7704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __isinfl(a); 
#line 7706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isinf(double a) 
#line 7720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __isinf(a); 
#line 7722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isinf(float a) 
#line 7736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __isinff(a); 
#line 7738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isnan(long double a) 
#line 7741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __isnanl(a); 
#line 7743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isnan(double a) 
#line 7756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __isnan(a); 
#line 7758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isnan(float a) 
#line 7771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __isnanf(a); 
#line 7773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isfinite(long double a) 
#line 7776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __finitel(a); 
#line 7778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isfinite(double a) 
#line 7792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __finite(a); 
#line 7794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int isfinite(float a) 
#line 7808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return __finitef(a); 
#line 7810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
template< class T> extern inline T _Pow_int(T, int); 
#line 7813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline __int64 abs(__int64); 
#line 7828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline long __cdecl abs(long); 
#line 7829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl abs(float); 
#line 7830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline double __cdecl abs(double); 
#line 7831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl fabs(float); 
#line 7832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl ceil(float); 
#line 7833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl floor(float); 
#line 7834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl sqrt(float); 
#line 7835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl pow(float, float); 
#line 7836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl pow(float, int); 
#line 7837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline double __cdecl pow(double, int); 
#line 7838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl log(float); 
#line 7839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl log10(float); 
#line 7840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl fmod(float, float); 
#line 7841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl modf(float, float *); 
#line 7842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl exp(float); 
#line 7843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl frexp(float, int *); 
#line 7844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl ldexp(float, int); 
#line 7845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl asin(float); 
#line 7846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl sin(float); 
#line 7847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl sinh(float); 
#line 7848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl acos(float); 
#line 7849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl cos(float); 
#line 7850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl cosh(float); 
#line 7851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl atan(float); 
#line 7852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl atan2(float, float); 
#line 7853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl tan(float); 
#line 7854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
extern inline float __cdecl tanh(float); 
#line 7860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float logb(float a) 
#line 7861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return logbf(a); 
#line 7863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline int ilogb(float a) 
#line 7866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ilogbf(a); 
#line 7868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float scalbn(float a, int b) 
#line 7871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return scalbnf(a, b); 
#line 7873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float scalbln(float a, long b) 
#line 7876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return scalblnf(a, b); 
#line 7878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float exp2(float a) 
#line 7881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return exp2f(a); 
#line 7883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float exp10(float a) 
#line 7886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return exp10f(a); 
#line 7888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float expm1(float a) 
#line 7891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return expm1f(a); 
#line 7893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float log2(float a) 
#line 7896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return log2f(a); 
#line 7898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float log1p(float a) 
#line 7901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return log1pf(a); 
#line 7903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float rsqrt(float a) 
#line 7906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return rsqrtf(a); 
#line 7908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float acosh(float a) 
#line 7911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return acoshf(a); 
#line 7913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float asinh(float a) 
#line 7916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return asinhf(a); 
#line 7918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float atanh(float a) 
#line 7921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return atanhf(a); 
#line 7923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float hypot(float a, float b) 
#line 7926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return hypotf(a, b); 
#line 7928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float cbrt(float a) 
#line 7931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return cbrtf(a); 
#line 7933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float rcbrt(float a) 
#line 7936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return rcbrtf(a); 
#line 7938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float sinpi(float a) 
#line 7941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return sinpif(a); 
#line 7943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float cospi(float a) 
#line 7946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return cospif(a); 
#line 7948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline void sincospi(float a, float *sptr, float *cptr) 
#line 7951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
sincospif(a, sptr, cptr); 
#line 7953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline void sincos(float a, float *sptr, float *cptr) 
#line 7956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
sincosf(a, sptr, cptr); 
#line 7958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float j0(float a) 
#line 7961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return j0f(a); 
#line 7963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float j1(float a) 
#line 7966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return j1f(a); 
#line 7968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float jn(int n, float a) 
#line 7971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return jnf(n, a); 
#line 7973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float y0(float a) 
#line 7976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return y0f(a); 
#line 7978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float y1(float a) 
#line 7981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return y1f(a); 
#line 7983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float yn(int n, float a) 
#line 7986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ynf(n, a); 
#line 7988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float erf(float a) 
#line 7991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return erff(a); 
#line 7993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 7995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float erfinv(float a) 
#line 7996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 7997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return erfinvf(a); 
#line 7998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float erfc(float a) 
#line 8001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return erfcf(a); 
#line 8003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float erfcinv(float a) 
#line 8006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return erfcinvf(a); 
#line 8008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float normcdfinv(float a) 
#line 8011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return normcdfinvf(a); 
#line 8013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float normcdf(float a) 
#line 8016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return normcdff(a); 
#line 8018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float erfcx(float a) 
#line 8021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return erfcxf(a); 
#line 8023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float lgamma(float a) 
#line 8026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return lgammaf(a); 
#line 8028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float tgamma(float a) 
#line 8031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return tgammaf(a); 
#line 8033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float copysign(float a, float b) 
#line 8036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return copysignf(a, b); 
#line 8038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double copysign(double a, float b) 
#line 8041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return copysign(a, (double)b); 
#line 8043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float copysign(float a, double b) 
#line 8046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return copysignf(a, (float)b); 
#line 8048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float nextafter(float a, float b) 
#line 8051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return nextafterf(a, b); 
#line 8053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float remainder(float a, float b) 
#line 8056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return remainderf(a, b); 
#line 8058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float remquo(float a, float b, int *quo) 
#line 8061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return remquof(a, b, quo); 
#line 8063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float round(float a) 
#line 8066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return roundf(a); 
#line 8068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline long lround(float a) 
#line 8071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return lroundf(a); 
#line 8073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline __int64 llround(float a) 
#line 8076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return llroundf(a); 
#line 8078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float trunc(float a) 
#line 8081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return truncf(a); 
#line 8083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float rint(float a) 
#line 8086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return rintf(a); 
#line 8088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline long lrint(float a) 
#line 8091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return lrintf(a); 
#line 8093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline __int64 llrint(float a) 
#line 8096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return llrintf(a); 
#line 8098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float nearbyint(float a) 
#line 8101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return nearbyintf(a); 
#line 8103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float fdim(float a, float b) 
#line 8106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fdimf(a, b); 
#line 8108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float fma(float a, float b, float c) 
#line 8111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmaf(a, b, c); 
#line 8113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float fmax(float a, float b) 
#line 8116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmaxf(a, b); 
#line 8118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float fmin(float a, float b) 
#line 8121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fminf(a, b); 
#line 8123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned min(unsigned a, unsigned b) 
#line 8126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return umin(a, b); 
#line 8128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned min(int a, unsigned b) 
#line 8131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return umin((unsigned)a, b); 
#line 8133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned min(unsigned a, int b) 
#line 8136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return umin(a, (unsigned)b); 
#line 8138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline __int64 min(__int64 a, __int64 b) 
#line 8141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return llmin(a, b); 
#line 8143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b) 
#line 8146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ullmin(a, b); 
#line 8148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned __int64 min(__int64 a, unsigned __int64 b) 
#line 8151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ullmin((unsigned __int64)a, b); 
#line 8153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned __int64 min(unsigned __int64 a, __int64 b) 
#line 8156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ullmin(a, (unsigned __int64)b); 
#line 8158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float min(float a, float b) 
#line 8161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fminf(a, b); 
#line 8163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double min(double a, double b) 
#line 8166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmin(a, b); 
#line 8168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double min(float a, double b) 
#line 8171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmin((double)a, b); 
#line 8173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double min(double a, float b) 
#line 8176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmin(a, (double)b); 
#line 8178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned max(unsigned a, unsigned b) 
#line 8181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return umax(a, b); 
#line 8183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned max(int a, unsigned b) 
#line 8186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return umax((unsigned)a, b); 
#line 8188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned max(unsigned a, int b) 
#line 8191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return umax(a, (unsigned)b); 
#line 8193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline __int64 max(__int64 a, __int64 b) 
#line 8196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return llmax(a, b); 
#line 8198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b) 
#line 8201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ullmax(a, b); 
#line 8203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned __int64 max(__int64 a, unsigned __int64 b) 
#line 8206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ullmax((unsigned __int64)a, b); 
#line 8208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline unsigned __int64 max(unsigned __int64 a, __int64 b) 
#line 8211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return ullmax(a, (unsigned __int64)b); 
#line 8213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline float max(float a, float b) 
#line 8216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmaxf(a, b); 
#line 8218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double max(double a, double b) 
#line 8221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmax(a, b); 
#line 8223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double max(float a, double b) 
#line 8226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmax((double)a, b); 
#line 8228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 8230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
static __inline double max(double a, float b) 
#line 8231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
{ 
#line 8232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
return fmax(a, (double)b); 
#line 8233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
} 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
template< class T, int dim = 1> 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
struct surface : public surfaceReference { 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
surface() 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
{ 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> (); 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
} 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
surface(::cudaChannelFormatDesc desc) 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
{ 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
(channelDesc) = desc; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
} 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
}; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
template< int dim> 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
struct surface< void, dim>  : public surfaceReference { 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
surface() 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
{ 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> (); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
} 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_surface_types.h"
}; 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType> 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
struct texture : public textureReference { 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
texture(int norm = 0, ::cudaTextureFilterMode 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
fMode = cudaFilterModePoint, ::cudaTextureAddressMode 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
aMode = cudaAddressModeClamp) 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
{ 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(normalized) = norm; 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(filterMode) = fMode; 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
((addressMode)[0]) = aMode; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
((addressMode)[1]) = aMode; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
((addressMode)[2]) = aMode; 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> (); 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(sRGB) = 0; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
} 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
texture(int norm, ::cudaTextureFilterMode 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
fMode, ::cudaTextureAddressMode 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
aMode, ::cudaChannelFormatDesc 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
desc) 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
{ 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(normalized) = norm; 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(filterMode) = fMode; 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
((addressMode)[0]) = aMode; 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
((addressMode)[1]) = aMode; 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
((addressMode)[2]) = aMode; 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(channelDesc) = desc; 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
(sRGB) = 0; 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
} 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_texture_types.h"
}; 
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline int mulhi(int a, int b) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, unsigned b) 
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned mulhi(int a, unsigned b) 
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, int b) 
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline __int64 mul64hi(__int64 a, __int64 b) 
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b) 
#line 2311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b) 
#line 2316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b) 
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline int float_as_int(float a) 
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;
#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline float int_as_float(int a) 
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline float saturate(float a) 
#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline int mul24(int a, int b) 
#line 2341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned umul24(unsigned a, unsigned b) 
#line 2346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline void trap() 
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline void brkpt(int c = 0) 
#line 2357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)c;
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline void syncthreads() 
#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline void prof_trigger(int e) 
#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)e;
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}





































#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline void threadfence(bool global = true) 
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)global;
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline int float2int(float a, cudaRoundMode mode = cudaRoundZero) 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero) 
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 2405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest) 
#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 2415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
static __inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest) 
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
::exit(___);}







#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicAdd(int *address, int val) 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicAdd(unsigned *address, unsigned val) 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicSub(int *address, int val) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicSub(unsigned *address, unsigned val) 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicExch(int *address, int val) 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicExch(unsigned *address, unsigned val) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline float atomicExch(float *address, float val) 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicMin(int *address, int val) 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicMin(unsigned *address, unsigned val) 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicMax(int *address, int val) 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicMax(unsigned *address, unsigned val) 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicInc(unsigned *address, unsigned val) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicDec(unsigned *address, unsigned val) 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicAnd(int *address, int val) 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicAnd(unsigned *address, unsigned val) 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicOr(int *address, int val) 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicOr(unsigned *address, unsigned val) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicXor(int *address, int val) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicXor(unsigned *address, unsigned val) 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline int atomicCAS(int *address, int compare, int val) 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
static __inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
::exit(___);}







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_11_atomic_functions.h"
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
static __inline unsigned __int64 atomicAdd(unsigned __int64 *address, unsigned __int64 val) 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
::exit(___);}







#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
static __inline unsigned __int64 atomicExch(unsigned __int64 *address, unsigned __int64 val) 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
::exit(___);}







#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
static __inline unsigned __int64 atomicCAS(unsigned __int64 *address, unsigned __int64 compare, unsigned __int64 val) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
::exit(___);}







#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
static __inline bool any(bool cond) 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
::exit(___);}







#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
static __inline bool all(bool cond) 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
::exit(___);}







#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_12_atomic_functions.h"
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double fma(double a, double b, double c, cudaRoundMode mode) 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest) 
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest) 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest) 
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline int double2int(double a, cudaRoundMode mode = cudaRoundZero) 
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero) 
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline __int64 double2ll(double a, cudaRoundMode mode = cudaRoundZero) 
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode = cudaRoundZero) 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double ll2double(__int64 a, cudaRoundMode mode = cudaRoundNearest) 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode = cudaRoundNearest) 
#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest) 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest) 
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
static __inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest) 
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
::exit(___);}







#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_13_double_functions.h"
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_atomic_functions.h"
static __inline float atomicAdd(float *address, float val) 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_atomic_functions.h"
::exit(___);}







#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_atomic_functions.h"
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMin(__int64 *address, __int64 val) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMax(__int64 *address, __int64 val) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMin(unsigned __int64 *address, unsigned __int64 val) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMax(unsigned __int64 *address, unsigned __int64 val) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicAnd(unsigned __int64 *address, unsigned __int64 val) 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicOr(unsigned __int64 *address, unsigned __int64 val) 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicXor(unsigned __int64 *address, unsigned __int64 val) 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
::exit(___);}







#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_atomic_functions.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
static __inline unsigned ballot(bool pred) 
#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
::exit(___);}







#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
static __inline int syncthreads_count(bool pred) 
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
::exit(___);}







#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_and(bool pred) 
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
::exit(___);}







#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_or(bool pred) 
#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
::exit(___);}







#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
static __inline unsigned __isGlobal(const void *ptr) 
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
{int volatile ___ = 1;(void)ptr;
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
::exit(___);}
















#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_intrinsics.h"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}












#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}












#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}












#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}












#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}














#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}














#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}














#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
static __inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
::exit(___);}














#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_30_intrinsics.h"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline __int64 __ldg(const __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline unsigned __int64 __ldg(const unsigned __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static __inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
::exit(___);}










#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
::exit(___);}










#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
::exit(___);}










#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
::exit(___);}










#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_32_intrinsics.h"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1Dread(::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2Dread(::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf3Dread(::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1DLayeredread(::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2DLayeredread(::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 1848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapread(::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapLayeredread(::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}











#line 2220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}









#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
#line 2557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 2839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 2995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 3065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 3998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 3996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 4193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 4230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}

























#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 4252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 4472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 4473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 4475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
::exit(___);}







#line 4484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_functions.h"
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x) 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x) 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x) 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x) 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x) 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x) 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x) 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x) 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x) 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x) 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x) 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x) 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x) 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x) 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x) 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x) 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x) 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x) 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x) 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x) 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x) 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x) 
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x) 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x) 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x) 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x) 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x) 
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x) 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x) 
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x) 
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x) 
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x) 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x) 
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x) 
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x) 
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x) 
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x) 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x) 
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x) 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x) 
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x) 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x) 
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x) 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x) 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x) 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x) 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x) 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x) 
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x) 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x) 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x) 
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x) 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x) 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x) 
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x) 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x) 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x) 
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x) 
#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x) 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x) 
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 2801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 2995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) 
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 3995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) 
#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 4097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}







#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 4879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 4993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 4998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 5012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 5015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 5020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 5931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 5995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 5999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 6829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 6994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 7109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 7741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 7993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 7999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 8934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 8994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 8999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 9070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 9075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}









#line 9383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 9518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
::exit(___);}











#line 9537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_fetch_functions.h"
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x) 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x) 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x) 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x) 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x) 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x) 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x) 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x) 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x) 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x) 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x) 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x) 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x) 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x) 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x) 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x) 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x) 
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x) 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x) 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x) 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long *retVal, cudaTextureObject_t texObject, int x) 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long1 *retVal, cudaTextureObject_t texObject, int x) 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long2 *retVal, cudaTextureObject_t texObject, int x) 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long4 *retVal, cudaTextureObject_t texObject, int x) 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned long *retVal, cudaTextureObject_t texObject, int x) 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong1 *retVal, cudaTextureObject_t texObject, int x) 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong2 *retVal, cudaTextureObject_t texObject, int x) 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong4 *retVal, cudaTextureObject_t texObject, int x) 
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x) 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x) 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x) 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x) 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1Dfetch(::cudaTextureObject_t texObject, int x) 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char *retVal, cudaTextureObject_t texObject, float x) 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x) 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x) 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x) 
#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x) 
#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x) 
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x) 
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x) 
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short *retVal, cudaTextureObject_t texObject, float x) 
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x) 
#line 463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x) 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x) 
#line 477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x) 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x) 
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x) 
#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x) 
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int *retVal, cudaTextureObject_t texObject, float x) 
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x) 
#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x) 
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x) 
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x) 
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x) 
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x) 
#line 567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long *retVal, cudaTextureObject_t texObject, float x) 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long1 *retVal, cudaTextureObject_t texObject, float x) 
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long2 *retVal, cudaTextureObject_t texObject, float x) 
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long4 *retVal, cudaTextureObject_t texObject, float x) 
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned long *retVal, cudaTextureObject_t texObject, float x) 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong1 *retVal, cudaTextureObject_t texObject, float x) 
#line 617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong2 *retVal, cudaTextureObject_t texObject, float x) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong4 *retVal, cudaTextureObject_t texObject, float x) 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float *retVal, cudaTextureObject_t texObject, float x) 
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x) 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x) 
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x) 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1D(::cudaTextureObject_t texObject, float x) 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2D(::cudaTextureObject_t texObject, float x, float y) 
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex3D(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1DLayered(::cudaTextureObject_t texObject, float x, int layer) 
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2DLayered(::cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
texCubemap(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
texCubemapLayered(::cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 2985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 2992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0) 
#line 3239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}





























#line 3285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2Dgather(::cudaTextureObject_t to, float x, float y, int comp = 0) 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1DLod(::cudaTextureObject_t texObject, float x, float level) 
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
#line 3580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2DLod(::cudaTextureObject_t texObject, float x, float y, float level) 
#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
#line 3892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 3923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 4199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex3DLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 4217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 4235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 4511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1DLayeredLod(::cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
#line 4516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 4529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 4823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2DLayeredLod(::cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 4841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 4859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 4995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 4999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 5135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
texCubemapLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 5136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 5140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 5153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 5171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
texCubemapLayeredLod(::cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 5465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 5483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 5759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1DGrad(::cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 5795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 5995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 5999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 6058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 6071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2DGrad(::cudaTextureObject_t texObject, float x, float y, ::float2 dPdx, ::float2 dPdy) 
#line 6072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 6076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 6089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 6107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 6383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex3DGrad(::cudaTextureObject_t texObject, float x, float y, float z, ::float4 dPdx, ::float4 dPdy) 
#line 6384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 6401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 6419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 6695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex1DLayeredGrad(::cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 6713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 6731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 7003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 6993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}










#line 7010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 7006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 7007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
tex2DLayeredGrad(::cudaTextureObject_t texObject, float x, float y, int layer, ::float2 dPdx, ::float2 dPdy) 
#line 7008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 7012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
::exit(___);}











#line 7025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\texture_indirect_functions.h"
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surf1Dread(::cudaSurfaceObject_t surfObject, int x, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surf2Dread(::cudaSurfaceObject_t surfObject, int x, int y, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surf3Dread(::cudaSurfaceObject_t surfObject, int x, int y, int z, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surf1DLayeredread(::cudaSurfaceObject_t surfObject, int x, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surf2DLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 2990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surfCubemapread(::cudaSurfaceObject_t surfObject, int x, int y, int face, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 3417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}
























#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
surfCubemapLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}











#line 3974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 3995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 3996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 4987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 4993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 4994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 5991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 5992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 6989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 6990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 7261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 7262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
::exit(___);}




















#line 7294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\surface_indirect_functions.h"
#line 66 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_launch_parameters.h"
extern "C" const uint3 threadIdx; 
#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_launch_parameters.h"
extern "C" const uint3 blockIdx; 
#line 68 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_launch_parameters.h"
extern "C" const dim3 blockDim; 
#line 69 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_launch_parameters.h"
extern "C" const dim3 gridDim; 
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_launch_parameters.h"
extern "C" const int warpSize; 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\cuda_device_runtime_api.h"
namespace _GLOBAL__N__14_kernel_cpp1_ii_b614c5e6 { }; using namespace _GLOBAL__N__14_kernel_cpp1_ii_b614c5e6; namespace _GLOBAL__N__14_kernel_cpp1_ii_b614c5e6 { 
#line 123 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 124 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaSetupArgument(T 
#line 125 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
arg, ::size_t 
#line 126 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset) 
#line 128 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 129 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset); 
#line 130 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 162 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
static __inline cudaError_t cudaEventCreate(cudaEvent_t *
#line 163 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
event, unsigned 
#line 164 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
flags) 
#line 166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 167 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags); 
#line 168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
__inline cudaError_t cudaMallocHost(void **
#line 226 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
ptr, size_t 
#line 227 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size, unsigned 
#line 228 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
flags) 
#line 230 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 231 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags); 
#line 232 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 234 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 235 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaHostAlloc(T **
#line 236 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
ptr, ::size_t 
#line 237 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size, unsigned 
#line 238 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
flags) 
#line 240 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 241 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags); 
#line 242 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 244 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 245 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaHostGetDevicePointer(T **
#line 246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
pDevice, void *
#line 247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
pHost, unsigned 
#line 248 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
flags) 
#line 250 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags); 
#line 252 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 254 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 255 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMalloc(T **
#line 256 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 257 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size) 
#line 259 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 260 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size); 
#line 261 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 264 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMallocHost(T **
#line 265 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
ptr, ::size_t 
#line 266 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size, unsigned 
#line 267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
flags = 0) 
#line 269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 270 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags); 
#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 273 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 274 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMallocPitch(T **
#line 275 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, ::size_t *
#line 276 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
pitch, ::size_t 
#line 277 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
width, ::size_t 
#line 278 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
height) 
#line 280 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 281 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height); 
#line 282 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 319 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 320 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMemcpyToSymbol(const T &
#line 321 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
symbol, const void *
#line 322 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
src, ::size_t 
#line 323 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 324 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 325 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice) 
#line 327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 328 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind); 
#line 329 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 371 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 372 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
#line 373 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
symbol, const void *
#line 374 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
src, ::size_t 
#line 375 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 376 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 377 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice, ::cudaStream_t 
#line 378 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
stream = 0) 
#line 380 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 381 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream); 
#line 382 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 417 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 418 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMemcpyFromSymbol(void *
#line 419 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
dst, const T &
#line 420 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
symbol, ::size_t 
#line 421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 423 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost) 
#line 425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 426 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind); 
#line 427 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 469 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 470 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
#line 471 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
dst, const T &
#line 472 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
symbol, ::size_t 
#line 473 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
count, ::size_t 
#line 474 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, ::cudaStream_t 
#line 476 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
stream = 0) 
#line 478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream); 
#line 480 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 502 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 503 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaGetSymbolAddress(void **
#line 504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, const T &
#line 505 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
symbol) 
#line 507 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 508 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol)); 
#line 509 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 531 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 532 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaGetSymbolSize(::size_t *
#line 533 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size, const T &
#line 534 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
symbol) 
#line 536 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 537 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol)); 
#line 538 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 574 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 575 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 576 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 577 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, const void *
#line 578 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 579 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
desc, ::size_t 
#line 580 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size = 4294967295U) 
#line 582 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 583 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size); 
#line 584 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 619 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 621 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 622 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, const void *
#line 623 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 624 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
size = 4294967295U) 
#line 626 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 627 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size); 
#line 628 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 675 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 676 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 677 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 678 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, const void *
#line 679 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 680 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
desc, ::size_t 
#line 681 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
width, ::size_t 
#line 682 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
height, ::size_t 
#line 683 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
pitch) 
#line 685 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 686 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch); 
#line 687 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 733 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 734 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 735 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 736 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, const void *
#line 737 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 738 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
width, ::size_t 
#line 739 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
height, ::size_t 
#line 740 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
pitch) 
#line 742 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 743 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch); 
#line 744 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 775 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 776 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 777 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 778 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 779 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
desc) 
#line 781 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 782 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc); 
#line 783 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 813 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 814 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 815 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 816 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
array) 
#line 818 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 820 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 822 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err; 
#line 823 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 854 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 855 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 856 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 857 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
mipmappedArray, const ::cudaChannelFormatDesc &
#line 858 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
desc) 
#line 860 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 861 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc); 
#line 862 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 892 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 893 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 894 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 895 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
mipmappedArray) 
#line 897 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 898 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 899 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaArray_t levelArray; 
#line 900 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0); 
#line 902 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
if (err != (cudaSuccess)) { 
#line 903 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return err; 
#line 904 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
}  
#line 905 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray); 
#line 907 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err; 
#line 908 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 931 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 932 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode>  &
#line 933 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex) 
#line 935 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 936 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaUnbindTexture(&tex); 
#line 937 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 965 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> __inline ::cudaError_t 
#line 966 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaGetTextureAlignmentOffset(::size_t *
#line 967 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 968 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
tex) 
#line 970 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 971 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex); 
#line 972 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1018 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1019 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaFuncSetCacheConfig(T *
#line 1020 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
func, ::cudaFuncCache 
#line 1021 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cacheConfig) 
#line 1023 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 1024 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig); 
#line 1025 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1027 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1028 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
#line 1029 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
func, ::cudaSharedMemConfig 
#line 1030 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
config) 
#line 1032 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 1033 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config); 
#line 1034 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1070 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1071 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaLaunch(T *
#line 1072 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
func) 
#line 1074 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 1075 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaLaunch((const void *)func); 
#line 1076 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1108 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1109 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaFuncGetAttributes(::cudaFuncAttributes *
#line 1110 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
attr, T *
#line 1111 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
entry) 
#line 1113 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 1114 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry); 
#line 1115 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1137 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim> __inline ::cudaError_t 
#line 1138 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1139 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1140 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1141 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
desc) 
#line 1143 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 1144 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc); 
#line 1145 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
template< class T, int dim> __inline ::cudaError_t 
#line 1167 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1169 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
array) 
#line 1171 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
{ 
#line 1172 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1173 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err; 
#line 1176 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
} 
#line 1182 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\cuda_runtime.h"
}
#line 26 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
#pragma pack ( push, 8 )
#line 56 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { struct _iobuf { 
#line 57 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
char *_ptr; 
#line 58 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
int _cnt; 
#line 59 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
char *_base; 
#line 60 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
int _flag; 
#line 61 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
int _file; 
#line 62 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
int _charbuf; 
#line 63 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
int _bufsiz; 
#line 64 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
char *_tmpfname; 
#line 65 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
}; }
#line 66 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { typedef _iobuf FILE; }
#line 129 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl __iob_func(); } 
#line 136 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { typedef __int64 fpos_t; }
#line 170 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _filbuf(FILE * ); } 
#line 171 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _flsbuf(int , FILE * ); } 
#line 176 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _fsopen(const char * , const char * , int ); } 
#line 179 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl clearerr(FILE * ); } 
#line 181 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl clearerr_s(FILE * ); } 
#line 183 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fclose(FILE * ); } 
#line 184 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fcloseall(); } 
#line 189 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _fdopen(int , const char * ); } 
#line 192 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl feof(FILE * ); } 
#line 193 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl ferror(FILE * ); } 
#line 194 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fflush(FILE * ); } 
#line 195 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fgetc(FILE * ); } 
#line 196 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fgetchar(); } 
#line 197 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fgetpos(FILE * , fpos_t * ); } 
#line 198 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl fgets(char * , int , FILE * ); } 
#line 203 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fileno(FILE * ); } 
#line 211 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl _tempnam(const char * , const char * ); } 
#line 217 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _flushall(); } 
#line 218 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl fopen(const char * , const char * ); } 
#line 220 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl fopen_s(FILE ** , const char * , const char * ); } 
#line 222 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fprintf(FILE * , const char * , ...); } 
#line 224 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fprintf_s(FILE * , const char * , ...); } 
#line 226 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputc(int , FILE * ); } 
#line 227 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fputchar(int ); } 
#line 228 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputs(const char * , FILE * ); } 
#line 229 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl fread(void * , size_t , size_t , FILE * ); } 
#line 231 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl fread_s(void * , size_t , size_t , size_t , FILE * ); } 
#line 233 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl freopen(const char * , const char * , FILE * ); } 
#line 235 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl freopen_s(FILE ** , const char * , const char * , FILE * ); } 
#line 237 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fscanf(FILE * , const char * , ...); } 
#line 238 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fscanf_l(FILE * , const char * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 242 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fscanf_s(FILE * , const char * , ...); } 
#line 244 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fscanf_s_l(FILE * , const char * , _locale_t , ...); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl fsetpos(FILE * , const fpos_t * ); } 
#line 247 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fseek(FILE * , long , int ); } 
#line 248 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) long __cdecl ftell(FILE * ); } 
#line 250 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fseeki64(FILE * , __int64 , int ); } 
#line 251 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _ftelli64(FILE * ); } 
#line 253 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl fwrite(const void * , size_t , size_t , FILE * ); } 
#line 254 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl getc(FILE * ); } 
#line 255 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl getchar(); } 
#line 256 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _getmaxstdio(); } 
#line 258 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl gets_s(char * , rsize_t ); } 
#line 260 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline char * __cdecl gets_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return gets_s ( _Buffer, _Size ); }
#line 261 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl gets(char * ); } 
#line 262 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { int __cdecl _getw(FILE * ); } 
#line 268 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _pclose(FILE * ); } 
#line 269 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _popen(const char * , const char * ); } 
#line 271 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl printf(const char * , ...); } 
#line 273 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl printf_s(const char * , ...); } 
#line 275 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl putc(int , FILE * ); } 
#line 276 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl putchar(int ); } 
#line 277 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl puts(const char * ); } 
#line 278 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _putw(int , FILE * ); } 
#line 281 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl remove(const char * ); } 
#line 282 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl rename(const char * , const char * ); } 
#line 283 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _unlink(const char * ); } 
#line 285 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl unlink(const char * ); } 
#line 288 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl rewind(FILE * ); } 
#line 289 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _rmtmp(); } 
#line 290 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl scanf(const char * , ...); } 
#line 291 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scanf_l(const char * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 295 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl scanf_s(const char * , ...); } 
#line 297 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scanf_s_l(const char * , _locale_t , ...); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) void __cdecl setbuf(FILE * , char * ); } 
#line 300 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _setmaxstdio(int ); } 
#line 301 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _set_output_format(unsigned ); } 
#line 302 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _get_output_format(); } 
#line 303 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl setvbuf(FILE * , char * , int , size_t ); } 
#line 304 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_s(char * , size_t , size_t , const char * , ...); } 
#line 305 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl _snprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, ... ) throw ( ) { va_list _ArgList; ( _ArgList = ( va_list ) ( & reinterpret_cast < const char & > ( _Format ) ) + ( ( sizeof ( _Format ) + sizeof ( int ) - 1 ) & ~ ( sizeof ( int ) - 1 ) ) ); return _vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 307 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl sprintf_s(char * , size_t , const char * , ...); } 
#line 309 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl sprintf_s ( char ( & _Dest ) [ _Size ], const char * _Format, ... ) throw ( ) { va_list _ArgList; ( _ArgList = ( va_list ) ( & reinterpret_cast < const char & > ( _Format ) ) + ( ( sizeof ( _Format ) + sizeof ( int ) - 1 ) & ~ ( sizeof ( int ) - 1 ) ) ); return vsprintf_s ( _Dest, _Size, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 310 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf(const char * , ...); } 
#line 311 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl sscanf(const char * , const char * , ...); } 
#line 312 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sscanf_l(const char * , const char * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 316 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl sscanf_s(const char * , const char * , ...); } 
#line 318 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sscanf_s_l(const char * , const char * , _locale_t , ...); } 
#line 319 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf(const char * , size_t , const char * , ...); } 
#line 320 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf_l(const char * , size_t , const char * , _locale_t , ...); } 
#line 321 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf_s(const char * , size_t , const char * , ...); } 
#line 322 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf_s_l(const char * , size_t , const char * , _locale_t , ...); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) FILE *__cdecl tmpfile(); } 
#line 326 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl tmpfile_s(FILE ** ); } 
#line 327 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl tmpnam_s(char * , rsize_t ); } 
#line 329 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline errno_t __cdecl tmpnam_s ( char ( & _Buf ) [ _Size ] ) throw ( ) { return tmpnam_s ( _Buf, _Size ); }
#line 330 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl tmpnam(char * ); } 
#line 331 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl ungetc(int , FILE * ); } 
#line 332 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfprintf(FILE * , const char * , va_list ); } 
#line 334 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfprintf_s(FILE * , const char * , va_list ); } 
#line 336 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vprintf(const char * , va_list ); } 
#line 338 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vprintf_s(const char * , va_list ); } 
#line 340 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsnprintf(char * , size_t , const char * , va_list ); } 
#line 342 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsnprintf_s(char * , size_t , size_t , const char * , va_list ); } 
#line 343 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vsnprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, va_list _Args ) throw ( ) { return vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _Args ); }
#line 345 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_s(char * , size_t , size_t , const char * , va_list ); } 
#line 346 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl _vsnprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, va_list _Args ) throw ( ) { return _vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _Args ); }
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { __declspec(dllimport) int __cdecl _snprintf(char * , size_t , const char * , ...); } extern "C" { __declspec(dllimport) int __cdecl _vsnprintf(char * , size_t , const char * , va_list ); } 
#pragma warning(pop)
#line 352 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsprintf_s(char * , size_t , const char * , va_list ); } 
#line 353 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vsprintf_s ( char ( & _Dest ) [ _Size ], const char * _Format, va_list _Args ) throw ( ) { return vsprintf_s ( _Dest, _Size, _Format, _Args ); }
#line 355 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { __declspec(dllimport) int __cdecl sprintf(char * , const char * , ...); } extern "C" { __declspec(dllimport) int __cdecl vsprintf(char * , const char * , va_list ); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl _vscprintf(const char * , va_list ); } 
#line 360 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_c(char * , size_t , const char * , ...); } 
#line 361 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_c(char * , size_t , const char * , va_list ); } 
#line 363 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_p(FILE * , const char * , ...); } 
#line 364 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_p(const char * , ...); } 
#line 365 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_p(char * , size_t , const char * , ...); } 
#line 366 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_p(FILE * , const char * , va_list ); } 
#line 367 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_p(const char * , va_list ); } 
#line 368 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_p(char * , size_t , const char * , va_list ); } 
#line 369 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf_p(const char * , ...); } 
#line 370 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscprintf_p(const char * , va_list ); } 
#line 371 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _set_printf_count_output(int ); } 
#line 372 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _get_printf_count_output(); } 
#line 374 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_l(const char * , _locale_t , ...); } 
#line 375 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_p_l(const char * , _locale_t , ...); } 
#line 376 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_s_l(const char * , _locale_t , ...); } 
#line 377 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_l(const char * , _locale_t , va_list ); } 
#line 378 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_p_l(const char * , _locale_t , va_list ); } 
#line 379 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_s_l(const char * , _locale_t , va_list ); } 
#line 381 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_l(FILE * , const char * , _locale_t , ...); } 
#line 382 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_p_l(FILE * , const char * , _locale_t , ...); } 
#line 383 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_s_l(FILE * , const char * , _locale_t , ...); } 
#line 384 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_l(FILE * , const char * , _locale_t , va_list ); } 
#line 385 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_p_l(FILE * , const char * , _locale_t , va_list ); } 
#line 386 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_s_l(FILE * , const char * , _locale_t , va_list ); } 
#line 388 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_l(char * , const char * , _locale_t , ...); } 
#line 389 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_p_l(char * , size_t , const char * , _locale_t , ...); } 
#line 390 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_s_l(char * , size_t , const char * , _locale_t , ...); } 
#line 391 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_l(char * , const char * , _locale_t, va_list ); } 
#line 392 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_p_l(char * , size_t , const char * , _locale_t , va_list ); } 
#line 393 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_s_l(char * , size_t , const char * , _locale_t , va_list ); } 
#line 395 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf_l(const char * , _locale_t , ...); } 
#line 396 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf_p_l(const char * , _locale_t , ...); } 
#line 397 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscprintf_l(const char * , _locale_t , va_list ); } 
#line 398 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscprintf_p_l(const char * , _locale_t , va_list ); } 
#line 400 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_l(char * , size_t , const char * , _locale_t , ...); } 
#line 401 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_c_l(char * , size_t , const char * , _locale_t , ...); } 
#line 402 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_s_l(char * , size_t , size_t , const char * , _locale_t , ...); } 
#line 403 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_l(char * , size_t , const char * , _locale_t , va_list ); } 
#line 404 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_c_l(char * , size_t , const char *, _locale_t , va_list ); } 
#line 405 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_s_l(char * , size_t , size_t , const char * , _locale_t , va_list ); } 
#line 418 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfsopen(const __wchar_t * , const __wchar_t * , int ); } 
#line 421 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl fgetwc(FILE * ); } 
#line 422 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fgetwchar(); } 
#line 423 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl fputwc(__wchar_t , FILE * ); } 
#line 424 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fputwchar(__wchar_t ); } 
#line 425 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl getwc(FILE * ); } 
#line 426 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) inline wint_t __cdecl getwchar(); } 
#line 427 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl putwc(__wchar_t , FILE * ); } 
#line 428 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) inline wint_t __cdecl putwchar(__wchar_t ); } 
#line 429 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl ungetwc(wint_t , FILE * ); } 
#line 431 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl fgetws(__wchar_t * , int , FILE * ); } 
#line 432 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputws(const __wchar_t * , FILE * ); } 
#line 433 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _getws_s(__wchar_t * , size_t ); } 
#line 434 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline wchar_t * __cdecl _getws_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _getws_s ( _String, _Size ); }
#line 435 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _getws(__wchar_t * ); } 
#line 436 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _putws(const __wchar_t * ); } 
#line 438 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwprintf(FILE * , const __wchar_t * , ...); } 
#line 440 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwprintf_s(FILE * , const __wchar_t * , ...); } 
#line 442 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wprintf(const __wchar_t * , ...); } 
#line 444 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wprintf_s(const __wchar_t * , ...); } 
#line 446 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf(const __wchar_t * , ...); } 
#line 447 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfwprintf(FILE * , const __wchar_t * , va_list ); } 
#line 449 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfwprintf_s(FILE * , const __wchar_t * , va_list ); } 
#line 451 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vwprintf(const __wchar_t * , va_list ); } 
#line 453 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vwprintf_s(const __wchar_t * , va_list ); } 
#line 457 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl swprintf_s(__wchar_t * , size_t , const __wchar_t * , ...); } 
#line 459 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl swprintf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, ... ) throw ( ) { va_list _ArgList; ( _ArgList = ( va_list ) ( & reinterpret_cast < const char & > ( _Format ) ) + ( ( sizeof ( _Format ) + sizeof ( int ) - 1 ) & ~ ( sizeof ( int ) - 1 ) ) ); return vswprintf_s ( _Dest, _Size, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 461 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vswprintf_s(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#line 463 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vswprintf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, va_list _Args ) throw ( ) { return vswprintf_s ( _Dest, _Size, _Format, _Args ); }
#line 465 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_c(__wchar_t * , size_t , const __wchar_t * , ...); } 
#line 466 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_c(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#line 468 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwprintf_s(__wchar_t * , size_t , size_t , const __wchar_t * , ...); } 
#line 469 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl _snwprintf_s ( wchar_t ( & _Dest ) [ _Size ], size_t _Count, const wchar_t * _Format, ... ) throw ( ) { va_list _ArgList; ( _ArgList = ( va_list ) ( & reinterpret_cast < const char & > ( _Format ) ) + ( ( sizeof ( _Format ) + sizeof ( int ) - 1 ) & ~ ( sizeof ( int ) - 1 ) ) ); return _vsnwprintf_s ( _Dest, _Size, _Count, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 470 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf_s(__wchar_t * , size_t , size_t , const __wchar_t * , va_list ); } 
#line 471 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl _vsnwprintf_s ( wchar_t ( & _Dest ) [ _Size ], size_t _Count, const wchar_t * _Format, va_list _Args ) throw ( ) { return _vsnwprintf_s ( _Dest, _Size, _Count, _Format, _Args ); }
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { __declspec(dllimport) int __cdecl _snwprintf(__wchar_t * , size_t , const __wchar_t * , ...); } extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#pragma warning(pop)
#line 477 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_p(FILE * , const __wchar_t * , ...); } 
#line 478 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_p(const __wchar_t * , ...); } 
#line 479 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_p(FILE * , const __wchar_t * , va_list ); } 
#line 480 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_p(const __wchar_t * , va_list ); } 
#line 481 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_p(__wchar_t * , size_t , const __wchar_t * , ...); } 
#line 482 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_p(__wchar_t * , size_t , const __wchar_t * , va_list ); } 
#line 483 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf_p(const __wchar_t * , ...); } 
#line 484 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf_p(const __wchar_t * , va_list ); } 
#line 486 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_l(const __wchar_t * , _locale_t , ...); } 
#line 487 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_p_l(const __wchar_t * , _locale_t , ...); } 
#line 488 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_s_l(const __wchar_t * , _locale_t , ...); } 
#line 489 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_l(const __wchar_t * , _locale_t , va_list ); } 
#line 490 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_p_l(const __wchar_t * , _locale_t , va_list ); } 
#line 491 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_s_l(const __wchar_t * , _locale_t , va_list ); } 
#line 493 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 494 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_p_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 495 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_s_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 496 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_l(FILE * , const __wchar_t * , _locale_t , va_list ); } 
#line 497 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_p_l(FILE * , const __wchar_t * , _locale_t , va_list ); } 
#line 498 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_s_l(FILE * , const __wchar_t * , _locale_t , va_list ); } 
#line 500 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_c_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 501 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_p_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 502 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_s_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 503 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_c_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 504 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_p_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 505 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_s_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 507 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf_l(const __wchar_t * , _locale_t , ...); } 
#line 508 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf_p_l(const __wchar_t * , _locale_t , ...); } 
#line 509 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf_p_l(const __wchar_t * , _locale_t , va_list ); } 
#line 511 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwprintf_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 512 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwprintf_s_l(__wchar_t * , size_t , size_t , const __wchar_t * , _locale_t , ...); } 
#line 513 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf_l(__wchar_t * , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 514 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf_s_l(__wchar_t * , size_t , size_t , const __wchar_t * , _locale_t , va_list ); } 
#line 528 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
#pragma warning(push)
#pragma warning(disable:4141 4996 4793)
extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl _swprintf(__wchar_t * , const __wchar_t * , ...); } extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl _vswprintf(__wchar_t * , const __wchar_t * , va_list ); } 
#line 531 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl __swprintf_l(__wchar_t * , const __wchar_t * , _locale_t , ...); } extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl __vswprintf_l(__wchar_t * , const __wchar_t * , _locale_t , va_list ); } 
#pragma warning(pop)
#line 34 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4412 )
extern "C" { static __inline int swprintf(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, ...) 
#line 37 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 38 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 39 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
int _Ret; 
#line 40 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = (((va_list)(&(reinterpret_cast< const char &>(_Format)))) + (((sizeof _Format + sizeof(int)) - (1)) & (~(sizeof(int) - (1))))); 
#line 41 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Ret = _vswprintf_c_l(_String, _Count, _Format, 0, _Arglist); 
#line 42 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 43 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 44 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 47 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4412 )
extern "C" { static __inline int __cdecl vswprintf(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, va_list _Ap) 
#line 50 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 51 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _vswprintf_c_l(_String, _Count, _Format, 0, _Ap); 
#line 52 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 58 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4412 )
extern "C" { static __inline int _swprintf_l(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, _locale_t _Plocinfo, ...) 
#line 61 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 62 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 63 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
int _Ret; 
#line 64 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = (((va_list)(&(reinterpret_cast< const char &>(_Plocinfo)))) + (((sizeof _Plocinfo + sizeof(int)) - (1)) & (~(sizeof(int) - (1))))); 
#line 65 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Ret = _vswprintf_c_l(_String, _Count, _Format, _Plocinfo, _Arglist); 
#line 66 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 67 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 68 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 71 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4412 )
extern "C" { static __inline int __cdecl _vswprintf_l(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, _locale_t _Plocinfo, va_list _Ap) 
#line 74 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 75 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _vswprintf_c_l(_String, _Count, _Format, _Plocinfo, _Ap); 
#line 76 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 80 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4996 )
#line 83 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int swprintf(__wchar_t *_String, const __wchar_t *_Format, ...) 
#line 86 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 87 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 88 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = (((va_list)(&(reinterpret_cast< const char &>(_Format)))) + (((sizeof _Format + sizeof(int)) - (1)) & (~(sizeof(int) - (1))))); 
#line 89 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
int _Ret = _vswprintf(_String, _Format, _Arglist); 
#line 90 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 91 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 92 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 95 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int __cdecl vswprintf(__wchar_t *_String, const __wchar_t *_Format, va_list _Ap) 
#line 98 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 99 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _vswprintf(_String, _Format, _Ap); 
#line 100 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 103 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int _swprintf_l(__wchar_t *_String, const __wchar_t *_Format, _locale_t _Plocinfo, ...) 
#line 106 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 107 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 108 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = (((va_list)(&(reinterpret_cast< const char &>(_Plocinfo)))) + (((sizeof _Plocinfo + sizeof(int)) - (1)) & (~(sizeof(int) - (1))))); 
#line 109 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
int _Ret = __vswprintf_l(_String, _Format, _Plocinfo, _Arglist); 
#line 110 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 111 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 112 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 115 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int __cdecl _vswprintf_l(__wchar_t *_String, const __wchar_t *_Format, _locale_t _Plocinfo, va_list _Ap) 
#line 118 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
{ 
#line 119 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
return __vswprintf_l(_String, _Format, _Plocinfo, _Ap); 
#line 120 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 123 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\swprintf.inl"
#pragma warning( pop )
#line 552 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wtempnam(const __wchar_t * , const __wchar_t * ); } 
#line 558 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf(const __wchar_t * , va_list ); } 
#line 559 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf_l(const __wchar_t * , _locale_t , va_list ); } 
#line 560 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwscanf(FILE * , const __wchar_t * , ...); } 
#line 561 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwscanf_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 565 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwscanf_s(FILE * , const __wchar_t * , ...); } 
#line 567 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwscanf_s_l(FILE * , const __wchar_t * , _locale_t , ...); } 
#line 568 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl swscanf(const __wchar_t * , const __wchar_t * , ...); } 
#line 569 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swscanf_l(const __wchar_t * , const __wchar_t * , _locale_t , ...); } 
#line 571 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl swscanf_s(const __wchar_t * , const __wchar_t * , ...); } 
#line 573 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swscanf_s_l(const __wchar_t * , const __wchar_t * , _locale_t , ...); } 
#line 574 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf(const __wchar_t * , size_t , const __wchar_t * , ...); } 
#line 575 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf_l(const __wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 576 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf_s(const __wchar_t * , size_t , const __wchar_t * , ...); } 
#line 577 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf_s_l(const __wchar_t * , size_t , const __wchar_t * , _locale_t , ...); } 
#line 578 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wscanf(const __wchar_t * , ...); } 
#line 579 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wscanf_l(const __wchar_t * , _locale_t , ...); } 
#line 581 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wscanf_s(const __wchar_t * , ...); } 
#line 583 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wscanf_s_l(const __wchar_t * , _locale_t , ...); } 
#pragma warning(pop)
#line 586 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfdopen(int , const __wchar_t * ); } 
#line 587 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfopen(const __wchar_t * , const __wchar_t * ); } 
#line 588 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wfopen_s(FILE ** , const __wchar_t * , const __wchar_t * ); } 
#line 589 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfreopen(const __wchar_t * , const __wchar_t * , FILE * ); } 
#line 590 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wfreopen_s(FILE ** , const __wchar_t * , const __wchar_t * , FILE * ); } 
#line 597 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wpopen(const __wchar_t * , const __wchar_t * ); } 
#line 599 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wremove(const __wchar_t * ); } 
#line 600 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wtmpnam_s(__wchar_t * , size_t ); } 
#line 601 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
template < size_t _Size > inline errno_t __cdecl _wtmpnam_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wtmpnam_s ( _Buffer, _Size ); }
#line 602 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wtmpnam(__wchar_t * ); } 
#line 604 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fgetwc_nolock(FILE * ); } 
#line 605 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fputwc_nolock(__wchar_t , FILE * ); } 
#line 606 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _ungetwc_nolock(wint_t , FILE * ); } 
#line 614 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { inline wint_t __cdecl getwchar() 
#line 615 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
{ return fgetwc(&(__iob_func()[0])); } } 
#line 616 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { inline wint_t __cdecl putwchar(__wchar_t _C) 
#line 617 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
{ return fputwc(_C, &(__iob_func()[1])); } } 
#line 663 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl _lock_file(FILE * ); } 
#line 664 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl _unlock_file(FILE * ); } 
#line 666 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fclose_nolock(FILE * ); } 
#line 667 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fflush_nolock(FILE * ); } 
#line 668 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl _fread_nolock(void * , size_t , size_t , FILE * ); } 
#line 669 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl _fread_nolock_s(void * , size_t , size_t , size_t , FILE * ); } 
#line 670 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fseek_nolock(FILE * , long , int ); } 
#line 671 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) long __cdecl _ftell_nolock(FILE * ); } 
#line 672 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fseeki64_nolock(FILE * , __int64 , int ); } 
#line 673 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _ftelli64_nolock(FILE * ); } 
#line 674 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl _fwrite_nolock(const void * , size_t , size_t , FILE * ); } 
#line 675 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _ungetc_nolock(int , FILE * ); } 
#line 702 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl tempnam(const char * , const char * ); } 
#line 708 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fcloseall(); } 
#line 709 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl fdopen(int , const char * ); } 
#line 710 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fgetchar(); } 
#line 711 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fileno(FILE * ); } 
#line 712 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl flushall(); } 
#line 713 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputchar(int ); } 
#line 714 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl getw(FILE * ); } 
#line 715 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl putw(int , FILE * ); } 
#line 716 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl rmtmp(); } 
#line 724 "C:\\Program Files\\Microsoft Visual Studio 11.0\\VC\\include\\stdio.h"
#pragma pack ( pop )
#line 4 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
 __declspec(noinline) void kernel(int a, int b, int *c) ;







#line 13 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
#line 9 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
int main() 
#line 10 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
{ 
#line 11 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
return 0; 
#line 12 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
} 
#line 1 "kernel.cudafe1.stub.c"

#line 1 "kernel.cudafe1.stub.c"
#line 1 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.cudafe1.stub.c"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"







































































#line 73 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

template <typename T>
static inline void *__cudaAddressOf(T &val) 
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}





        








          



          







#line 106 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"


#line 109 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"




#line 114 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"


#line 117 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref; __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {

#pragma data_seg("__nv_module_id")
  static const __declspec(allocate("__nv_module_id")) unsigned char __module_id_str[] = "__NV_MODULE_ID";
#pragma data_seg()




#line 140 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"









}

extern "C" {
extern void** __stdcall __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __stdcall __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __stdcall __cudaRegisterVar(
        void **fatCubinHandle,
        char  *hostVar,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern void __stdcall __cudaRegisterTexture(
        void                    **fatCubinHandle,
  const struct textureReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       norm,      
        int                       ext        
);

extern void __stdcall __cudaRegisterSurface(
        void                    **fatCubinHandle,
  const struct surfaceReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       ext        
);

extern void __stdcall __cudaRegisterFunction(
        void   **fatCubinHandle,
  const char    *hostFun,
        char    *deviceFun,
  const char    *deviceName,
        int      thread_limit,
        uint3   *tid,
        uint3   *bid,
        dim3    *bDim,
        dim3    *gDim,
        int     *wSize
);




#line 207 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"


#line 210 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"
extern int __cdecl atexit(void(__cdecl *)(void));
#line 212 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

}

static void **__cudaFatCubinHandle;

static void __cdecl __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\common_functions.h"



























































































































































#line 157 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\common_functions.h"








#line 166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\common_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 8242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"










































































































































































































#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\host_defines.h"
#line 8244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_constants.h"

























































































#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_constants.h"

#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_constants.h"









#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_constants.h"






#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_constants.h"

























































#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_constants.h"
#line 8245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 11447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"







#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"













































#line 47 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"





#line 53 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"









#line 63 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"




#line 68 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"

#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"

#line 72 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/func_macro.h"
#line 11455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"



inline int __isnan(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 > 0xffe0000000000000ull;
}

#line 11471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"









inline double exp10(double a)
{
  return pow(10.0, a);
}

inline float exp10f(float a)
{
    return (float)exp10((double)a);
}

inline void sincos(double a, double *sptr, double *cptr)
{
  *sptr = sin(a);
  *cptr = cos(a);
}

inline void sincosf(float a, float *sptr, float *cptr)
{
  double s, c;

  sincos((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline int __isinf(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 == 0xffe0000000000000ull;
}

#line 11518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"



inline double log2(double a)
{
  return log(a) * 1.44269504088896340;
}

#line 11527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"








#line 11536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"







inline int __signbit(double a)
{
  volatile union {
    double               d;
    signed long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l < 0ll;
}

inline double copysign(double a, double b)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvta, cvtb;

  cvta.d = a;
  cvtb.d = b;
  cvta.l = (cvta.l & 0x7fffffffffffffffULL) | (cvtb.l & 0x8000000000000000ULL);
  return cvta.d;
}

inline int __finite(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l << 1 < 0xffe0000000000000ull;
}

inline double fmax(double a, double b)
{
  if (__isnan(a) && __isnan(b)) return a + b;
  if (__isnan(a)) return b;
  if (__isnan(b)) return a;
  if ((a == 0.0) && (b == 0.0) && __signbit(b)) return a;
  return a > b ? a : b;
}

inline double fmin(double a, double b)
{
  if (__isnan(a) && __isnan(b)) return a + b;
  if (__isnan(a)) return b;
  if (__isnan(b)) return a;
  if ((a == 0.0) && (b == 0.0) && __signbit(a)) return a;
  return a < b ? a : b;
}

inline double trunc(double a)
{
  return a < 0.0 ? ceil(a) : floor(a);
}

inline double round(double a)
{
  double fa = fabs(a);

  if (fa > 4503599627370496.0) {
    return a;
  } else {
    double u = floor(fa + 0.5);
    if (fa < 0.5) u = 0;
    u = copysign (u, a);
    return u;
  }
}

inline long int lround(double a)
{
  return (long int)round(a);
}

inline long long int llround(double a)
{
  return (long long int)round(a);
}

inline double rint(double a)
{
  double fa = fabs(a);
  double u = 4503599627370496.0 + fa;
  if (fa >= 4503599627370496.0) {
    u = a;
  } else {
    u = u - 4503599627370496.0;
    u = copysign (u, a);
  }
  return u;  
}
inline double nearbyint(double a)
{
  return rint(a);
}

inline long int lrint(double a)
{
  return (long int)rint(a);
}

inline long long int llrint(double a)
{
  return (long long int)rint(a);
}

inline double fdim(double a, double b)
{
  if (a > b) {
    return (a - b);
  } else if (a <= b) {
    return 0.0;
  } else if (__isnan(a)) {
    return a;
  } else {
    return b;
  }
}

inline double scalbn(double a, int b)
{
  return ldexp(a, b);
}

inline double scalbln(double a, long int b)
{
  int t;

  if (b > 2147483647L) {
    t = 2147483647;
  } else if (b < (-2147483647 - 1)) {
    t = (-2147483647 - 1);
  } else {
    t = (int)b;
  }
  return scalbn(a, t);
}

inline double exp2(double a)
{
  return pow(2.0, a);
}






inline double log1p(double a)
{
  volatile double u, m;

  u = 1.0 + a;
  if (u == 1.0) {
    
    u = a;
  } else {
    m = u - 1.0;
    u = log(u);
    if (a < 1.0) {
      
      u = a * u;
      u = u / m;
    }
  }
  return u;
}




inline double expm1(double a)
{
  volatile double u, m;

  u = exp(a);
  m = u - 1.0;
  if (m == 0.0) {
    
    m = a;
  } 
  else if (fabs(a) < 1.0) {
    
    u = log(u);
    m = m * a;
    m = m / u;
  }
  return m;
}

inline double cbrt(double a)
{
  double s, t;

  if (a == 0.0 || __isinf(a)) {
    return a;
  } 
  s = fabs(a);
  t = exp2(3.3333333333333333e-1 * log2(s));           
  t = t - (t - (s / (t * t))) * 3.3333333333333333e-1; 
  t = copysign(t, a);
  return t;
}

inline double acosh(double a)
{
  double s, t;

  t = a - 1.0;
  if (t == a) {
    return log(2.0) + log(a);
  } else {
    s = a + 1.0;
    t = t + sqrt(s * t);
    return log1p(t);
  }
}

inline double asinh(double a)
{
  double fa, oofa, t;

  fa = fabs(a);
  if (fa > 1e18) {
    t = log(2.0) + log(fa);
  } else {
    oofa = 1.0 / fa;
    t = fa + fa / (oofa + sqrt(1.0 + oofa * oofa));
    t = log1p(t);
  }
  t = copysign(t, a);
  return t;
}

inline double atanh(double a)
{
  double fa, t;

  if (__isnan(a)) {
    return a + a;
  }
  fa = fabs(a);
  t = (2.0 * fa) / (1.0 - fa);
  t = 0.5 * log1p(t);
  if (__isnan(t) || !__signbit(a)) {
    return t;
  }
  return -t;
}

inline int ilogb(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } x;
  unsigned long long int i;
  int expo = -1022;

  if (__isnan(a)) return -((int)((unsigned int)-1 >> 1))-1;
  if (__isinf(a)) return ((int)((unsigned int)-1 >> 1));
  x.d = a;
  i = x.l & 0x7fffffffffffffffull;
  if (i == 0) return -((int)((unsigned int)-1 >> 1))-1;
  if (i >= 0x0010000000000000ull) {
    return (int)(((i >> 52) & 0x7ff) - 1023);
  }
  while (i < 0x0010000000000000ull) {
    expo--;
    i <<= 1;
  }
  return expo;
}

inline double logb(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } x;
  unsigned long long int i;
  int expo = -1022;

  if (__isnan(a)) return a + a;
  if (__isinf(a)) return fabs(a);
  x.d = a;
  i = x.l & 0x7fffffffffffffffull;
  if (i == 0) return -1.0/fabs(a);
  if (i >= 0x0010000000000000ull) {
    return (double)((int)((i >> 52) & 0x7ff) - 1023);
  }
  while (i < 0x0010000000000000ull) {
    expo--;
    i <<= 1;
  }
  return (double)expo;
}

inline double remquo(double a, double b, int *quo)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;
  int rem1 = 1; 
  int expo_a;
  int expo_b;
  unsigned long long mant_a;
  unsigned long long mant_b;
  unsigned long long mant_c;
  unsigned long long temp;
  int sign_a;
  int sign_b;
  int sign_c;
  int expo_c;
  int expodiff;
  int quot = 0;                 
  int l;
  int iter;

  cvt.d = a;
  mant_a = (cvt.l << 11) | 0x8000000000000000ULL;
  expo_a = (int)((cvt.l >> 52) & 0x7ff) - 1023;
  sign_a = (int)(cvt.l >> 63);

  cvt.d = b;
  mant_b = (cvt.l << 11) | 0x8000000000000000ULL;
  expo_b = (int)((cvt.l >> 52) & 0x7ff) - 1023;
  sign_b = (int)(cvt.l >> 63);

  sign_c = sign_a;  
  expo_c = expo_a;  
      
  
  if (__isnan(a) || __isnan(b)) {
    *quo = quot;
    return a + b;
  }
  if (__isinf(a) || (b == 0.0)) {
    *quo = quot;
    cvt.l = 0xfff8000000000000ULL;
    return cvt.d;
  }
  if ((a == 0.0) || (__isinf(b))) {
    *quo = quot;
    return a;
  }
  
  if (expo_a < -1022) {
    mant_a = mant_a + mant_a;
    while (mant_a < 0x8000000000000000ULL) {
      mant_a = mant_a + mant_a;
      expo_a--;
    }
  } 
  if (expo_b < -1022) {
    mant_b = mant_b + mant_b;
    while (mant_b < 0x8000000000000000ULL) {
      mant_b = mant_b + mant_b;
      expo_b--;
    }
  }
  expodiff = expo_a - expo_b;
  
  if (expodiff < 0) {
    iter = -1;
  } else {
    iter = expodiff;
  }
  


  mant_a = mant_a >> 1;
  mant_b = mant_b >> 1;
  expo_c = expo_a - iter; 

  
  for (l = 0; l < (iter + 1); l++) {
    mant_a = mant_a - mant_b;
    if (mant_a & 0x8000000000000000ULL) {
      mant_a = mant_a + mant_b;
      quot = quot + quot;
    } else {
      quot = quot + quot + 1;
    }
    mant_a = mant_a + mant_a;
  }

  
  mant_c = mant_a;
  
  if (mant_c == 0) {
    quot = quot & 7;
    *quo = (sign_a ^ sign_b) ? -quot : quot;
    cvt.l = (unsigned long long int)sign_c << 63;
    return cvt.d;
  }
  
  while (!(mant_c & 0x8000000000000000ULL)) {
    mant_c = mant_c + mant_c;
    expo_c--;
  }
  


  if (rem1 && ((expodiff+1) >= 0)) {
    temp = mant_a - mant_b;
    
    if (((temp != 0ULL) && (!(temp & 0x8000000000000000ULL))) ||
        ((temp == 0ULL) && (quot & 1))) {
      mant_a = mant_a >> 1;
      quot++;
      



      sign_c = 1 ^ sign_c;
      expo_c = expo_a - iter + 1;
      mant_c = mant_b - mant_a;
      
      while (!(mant_c & 0x8000000000000000ULL)) {
        mant_c = mant_c + mant_c;
        expo_c--;
      }
    }
  }
  
  if (expo_c >= -1022) { 
    mant_c = ((mant_c >> 11) + 
              ((((unsigned long long)sign_c) << 63) +
               (((unsigned long long)(expo_c + 1022)) << 52)));
  } else { 
    mant_c = ((((unsigned long long)sign_c) << 63) + 
              (mant_c >> (11 - expo_c - 1022)));
  }
  quot = quot & 7; 
  *quo = (sign_a ^ sign_b) ? -quot : quot;
  cvt.l = mant_c;
  return cvt.d;
}

inline double remainder(double a, double b)
{
  int quo;
  return remquo (a, b, &quo);
}

inline double fma (double a, double b, double c)
{
  volatile union {
    struct {
      unsigned int lo;
      unsigned int hi;
    } part;
    double d;
  } xx, yy, zz, ww;
  unsigned int s, t, u, prod0, prod1, prod2, prod3, expo_x, expo_y, expo_z;
  
  xx.d = a;
  yy.d = b;
  zz.d = c;

  expo_z = 0x7FF;
  t =  xx.part.hi >> 20;
  expo_x = expo_z & t;
  expo_x = expo_x - 1;    
  t =  yy.part.hi >> 20;
  expo_y = expo_z & t;
  expo_y = expo_y - 1;    
  t =  zz.part.hi >> 20;
  expo_z = expo_z & t;
  expo_z = expo_z - 1;    

  if (!((expo_x <= 0x7FD) &&
        (expo_y <= 0x7FD) &&
        (expo_z <= 0x7FD))) {
    
    



    if (((yy.part.hi << 1) | (yy.part.lo != 0)) > 0xffe00000) {
      yy.part.hi |= 0x00080000;
      return yy.d;
    }
    if (((zz.part.hi << 1) | (zz.part.lo != 0)) > 0xffe00000) {
      zz.part.hi |= 0x00080000;
      return zz.d;
    }
    if (((xx.part.hi << 1) | (xx.part.lo != 0)) > 0xffe00000) {
      xx.part.hi |= 0x00080000;
      return xx.d;
    }
    
    










    if (((((xx.part.hi << 1) | xx.part.lo) == 0) && 
         (((yy.part.hi << 1) | (yy.part.lo != 0)) == 0xffe00000)) ||
        ((((yy.part.hi << 1) | yy.part.lo) == 0) && 
         (((xx.part.hi << 1) | (xx.part.lo != 0)) == 0xffe00000))) {
      xx.part.hi = 0xfff80000;
      xx.part.lo = 0x00000000;
      return xx.d;
    }
    if (((zz.part.hi << 1) | (zz.part.lo != 0)) == 0xffe00000) {
      if ((((yy.part.hi << 1) | (yy.part.lo != 0)) == 0xffe00000) ||
          (((xx.part.hi << 1) | (xx.part.lo != 0)) == 0xffe00000)) {
        if ((int)(xx.part.hi ^ yy.part.hi ^ zz.part.hi) < 0) {
          xx.part.hi = 0xfff80000;
          xx.part.lo = 0x00000000;
          return xx.d;
        }
      }
    }
    



    if (((xx.part.hi << 1) | (xx.part.lo != 0)) == 0xffe00000) {
      xx.part.hi = xx.part.hi ^ (yy.part.hi & 0x80000000);
      return xx.d;
    }
    if (((yy.part.hi << 1) | (yy.part.lo != 0)) == 0xffe00000) {
      yy.part.hi = yy.part.hi ^ (xx.part.hi & 0x80000000);
      return yy.d;
    }
    if (((zz.part.hi << 1) | (zz.part.lo != 0)) == 0xffe00000) {
      return zz.d;
    }
    




    if ((zz.part.hi == 0x80000000) && (zz.part.lo == 0)) {
      if ((((xx.part.hi << 1) | xx.part.lo) == 0) ||
          (((yy.part.hi << 1) | yy.part.lo) == 0)) {
        if ((int)(xx.part.hi ^ yy.part.hi) < 0) {
          return zz.d;
        }
      }
    }
    


    if ((((zz.part.hi << 1) | zz.part.lo) == 0) &&
        ((((xx.part.hi << 1) | xx.part.lo) == 0) ||
         (((yy.part.hi << 1) | yy.part.lo) == 0))) {
      zz.part.hi &= 0x7fffffff;
      return zz.d;
    }
    
    


    if ((((xx.part.hi << 1) | xx.part.lo) == 0) ||
        (((yy.part.hi << 1) | yy.part.lo) == 0)) {
      return zz.d;
    }
    
    if (expo_x == 0xffffffff) {
      expo_x++;
      t = xx.part.hi & 0x80000000;
      s = xx.part.lo >> 21;
      xx.part.lo = xx.part.lo << 11;
      xx.part.hi = xx.part.hi << 11;
      xx.part.hi = xx.part.hi | s;
      if (!xx.part.hi) {
        xx.part.hi = xx.part.lo;
        xx.part.lo = 0;
        expo_x -= 32;
      }
      while ((int)xx.part.hi > 0) {
        s = xx.part.lo >> 31;
        xx.part.lo = xx.part.lo + xx.part.lo;
        xx.part.hi = xx.part.hi + xx.part.hi;
        xx.part.hi = xx.part.hi | s;
        expo_x--;
      }
      xx.part.lo = (xx.part.lo >> 11);
      xx.part.lo |= (xx.part.hi << 21);
      xx.part.hi = (xx.part.hi >> 11) | t;
    }
    if (expo_y == 0xffffffff) {
      expo_y++;
      t = yy.part.hi & 0x80000000;
      s = yy.part.lo >> 21;
      yy.part.lo = yy.part.lo << 11;
      yy.part.hi = yy.part.hi << 11;
      yy.part.hi = yy.part.hi | s;
      if (!yy.part.hi) {
        yy.part.hi = yy.part.lo;
        yy.part.lo = 0;
        expo_y -= 32;
      }
      while ((int)yy.part.hi > 0) {
        s = yy.part.lo >> 31;
        yy.part.lo = yy.part.lo + yy.part.lo;
        yy.part.hi = yy.part.hi + yy.part.hi;
        yy.part.hi = yy.part.hi | s;
        expo_y--;
      }
      yy.part.lo = (yy.part.lo >> 11);
      yy.part.lo |= (yy.part.hi << 21);
      yy.part.hi = (yy.part.hi >> 11) | t;
    }
    if (expo_z == 0xffffffff) {
      expo_z++;
      t = zz.part.hi & 0x80000000;
      s = zz.part.lo >> 21;
      zz.part.lo = zz.part.lo << 11;
      zz.part.hi = zz.part.hi << 11;
      zz.part.hi = zz.part.hi | s;
      if (!zz.part.hi) {
        zz.part.hi = zz.part.lo;
        zz.part.lo = 0;
        expo_z -= 32;
      }
      while ((int)zz.part.hi > 0) {
        s = zz.part.lo >> 31;
        zz.part.lo = zz.part.lo + zz.part.lo;
        zz.part.hi = zz.part.hi + zz.part.hi;
        zz.part.hi = zz.part.hi | s;
        expo_z--;
      }
      zz.part.lo = (zz.part.lo >> 11);
      zz.part.lo |= (zz.part.hi << 21);
      zz.part.hi = (zz.part.hi >> 11) | t;
    }
  }
  
  expo_x = expo_x + expo_y;
  expo_y = xx.part.hi ^ yy.part.hi;
  t = xx.part.lo >> 21;
  xx.part.lo = xx.part.lo << 11;
  xx.part.hi = xx.part.hi << 11;
  xx.part.hi = xx.part.hi | t;
  yy.part.hi = yy.part.hi & 0x000fffff;
  xx.part.hi = xx.part.hi | 0x80000000; 
  yy.part.hi = yy.part.hi | 0x00100000; 

  prod0 = xx.part.lo * yy.part.lo;
  prod1 =(unsigned)(((unsigned long long)xx.part.lo*(unsigned long long)yy.part.lo)>>32);
  prod2 = xx.part.hi * yy.part.lo;
  prod3 = xx.part.lo * yy.part.hi;
  prod1 += prod2;
  t = (unsigned)(prod1 < prod2);
  prod1 += prod3;
  t += prod1 < prod3;
  prod2 =(unsigned)(((unsigned long long)xx.part.hi*(unsigned long long)yy.part.lo)>>32);
  prod3 =(unsigned)(((unsigned long long)xx.part.lo*(unsigned long long)yy.part.hi)>>32);
  prod2 += prod3;
  s = (unsigned)(prod2 < prod3);
  prod3 = xx.part.hi * yy.part.hi;
  prod2 += prod3;
  s += prod2 < prod3;
  prod2 += t;
  s += prod2 < t;
  prod3 =(unsigned)(((unsigned long long)xx.part.hi*(unsigned long long)yy.part.hi)>>32);
  prod3 = prod3 + s;
  
  yy.part.lo = prod0;                 
  yy.part.hi = prod1;                 
  xx.part.lo = prod2;                 
  xx.part.hi = prod3;                 
  expo_x = expo_x - (1023 - 2);  
  expo_y = expo_y & 0x80000000;  

  if (xx.part.hi < 0x00100000) {
    s = xx.part.lo >> 31;
    s = (xx.part.hi << 1) + s;
    xx.part.hi = s;
    s = yy.part.hi >> 31;
    s = (xx.part.lo << 1) + s;
    xx.part.lo = s;
    s = yy.part.lo >> 31;
    s = (yy.part.hi << 1) + s;
    yy.part.hi = s;
    s = yy.part.lo << 1;
    yy.part.lo = s;
    expo_x--;
  }

  t = 0;
  if (((zz.part.hi << 1) | zz.part.lo) != 0) { 
    
    s = zz.part.hi & 0x80000000;
    
    zz.part.hi &= 0x000fffff;
    zz.part.hi |= 0x00100000;
    ww.part.hi = 0;
    ww.part.lo = 0;
    
    
    if ((int)expo_z > (int)expo_x) {
      t = expo_z;
      expo_z = expo_x;
      expo_x = t;
      t = zz.part.hi;
      zz.part.hi = xx.part.hi;
      xx.part.hi = t;
      t = zz.part.lo;
      zz.part.lo = xx.part.lo;
      xx.part.lo = t;
      t = ww.part.hi;
      ww.part.hi = yy.part.hi;
      yy.part.hi = t;
      t = ww.part.lo;
      ww.part.lo = yy.part.lo;
      yy.part.lo = t;
      t = expo_y;
      expo_y = s;
      s = t;
    }
    
    
    
    expo_z = expo_x - expo_z;
    u = expo_y ^ s;
    if (expo_z <= 107) {
      
      t = 0;
      while (expo_z >= 32) {
        t     = ww.part.lo | (t != 0);
        ww.part.lo = ww.part.hi;
        ww.part.hi = zz.part.lo;
        zz.part.lo = zz.part.hi;
        zz.part.hi = 0;
        expo_z -= 32;
      }
      if (expo_z) {
        t     = (t     >> expo_z) | (ww.part.lo << (32 - expo_z)) | 
                ((t << (32 - expo_z)) != 0);
        ww.part.lo = (ww.part.lo >> expo_z) | (ww.part.hi << (32 - expo_z));
        ww.part.hi = (ww.part.hi >> expo_z) | (zz.part.lo << (32 - expo_z));
        zz.part.lo = (zz.part.lo >> expo_z) | (zz.part.hi << (32 - expo_z));
        zz.part.hi = (zz.part.hi >> expo_z);
      }
    } else {
      t = 1;
      ww.part.lo = 0;
      ww.part.hi = 0;
      zz.part.lo = 0;
      zz.part.hi = 0;
    }
    if ((int)u < 0) {
      
      t = (unsigned)(-(int)t);
      s = (unsigned)(t != 0);
      u = yy.part.lo - s;
      s = (unsigned)(u > yy.part.lo);
      yy.part.lo = u - ww.part.lo;
      s += yy.part.lo > u;
      u = yy.part.hi - s;
      s = (unsigned)(u > yy.part.hi);
      yy.part.hi = u - ww.part.hi;
      s += yy.part.hi > u;
      u = xx.part.lo - s;
      s = (unsigned)(u > xx.part.lo);
      xx.part.lo = u - zz.part.lo;
      s += xx.part.lo > u;
      xx.part.hi = (xx.part.hi - zz.part.hi) - s;
      if (!(xx.part.hi | xx.part.lo | yy.part.hi | yy.part.lo | t)) {
        
        return xx.d;
      }
      if ((int)xx.part.hi < 0) {
        


        t = ~t;
        yy.part.lo = ~yy.part.lo;
        yy.part.hi = ~yy.part.hi;
        xx.part.lo = ~xx.part.lo;
        xx.part.hi = ~xx.part.hi;
        if (++t == 0) {
          if (++yy.part.lo == 0) {
            if (++yy.part.hi == 0) {
              if (++xx.part.lo == 0) {
              ++xx.part.hi;
              }
            }
          }
        }
        expo_y ^= 0x80000000;
      }
        
      
      while (!(xx.part.hi & 0x00100000)) {
        xx.part.hi = (xx.part.hi << 1) | (xx.part.lo >> 31);
        xx.part.lo = (xx.part.lo << 1) | (yy.part.hi >> 31);
        yy.part.hi = (yy.part.hi << 1) | (yy.part.lo >> 31);
        yy.part.lo = (yy.part.lo << 1);
        expo_x--;
      }
    } else {
      
      yy.part.lo = yy.part.lo + ww.part.lo;
      s = (unsigned)(yy.part.lo < ww.part.lo);
      yy.part.hi = yy.part.hi + s;
      u = (unsigned)(yy.part.hi < s);
      yy.part.hi = yy.part.hi + ww.part.hi;
      u += yy.part.hi < ww.part.hi;
      xx.part.lo = xx.part.lo + u;
      s = (unsigned)(xx.part.lo < u);
      xx.part.lo = xx.part.lo + zz.part.lo;
      s += xx.part.lo < zz.part.lo;
      xx.part.hi = xx.part.hi + zz.part.hi + s;
      if (xx.part.hi & 0x00200000) {
        t = t | (yy.part.lo << 31);
        yy.part.lo = (yy.part.lo >> 1) | (yy.part.hi << 31);
        yy.part.hi = (yy.part.hi >> 1) | (xx.part.lo << 31);
        xx.part.lo = (xx.part.lo >> 1) | (xx.part.hi << 31);
        xx.part.hi = ((xx.part.hi & 0x80000000) | (xx.part.hi >> 1)) & ~0x40000000;
        expo_x++;
      }
    }
  }
  t = yy.part.lo | (t != 0);
  t = yy.part.hi | (t != 0);
        
  xx.part.hi |= expo_y; 
  if (expo_x <= 0x7FD) {
    
    xx.part.hi = xx.part.hi & ~0x00100000; 
    s = xx.part.lo & 1; 
    u = xx.part.lo;
    xx.part.lo += (t == 0x80000000) ? s : (t >> 31);
    xx.part.hi += (u > xx.part.lo);
    xx.part.hi += ((expo_x + 1) << 20);
    return xx.d;
  } else if ((int)expo_x >= 2046) {      
    
    xx.part.hi = (xx.part.hi & 0x80000000) | 0x7ff00000;
    xx.part.lo = 0;
    return xx.d;
  }
  
  expo_x = (unsigned)(-(int)expo_x);
  if (expo_x > 54) {
    xx.part.hi = xx.part.hi & 0x80000000;
    xx.part.lo = 0;
    return xx.d;
  }  
  yy.part.hi = xx.part.hi &  0x80000000;   
  xx.part.hi = xx.part.hi & ~0xffe00000;
  if (expo_x >= 32) {
    t = xx.part.lo | (t != 0);
    xx.part.lo = xx.part.hi;
    xx.part.hi = 0;
    expo_x -= 32;
  }
  if (expo_x) {
    t     = (t     >> expo_x) | (xx.part.lo << (32 - expo_x)) | (t != 0);
    xx.part.lo = (xx.part.lo >> expo_x) | (xx.part.hi << (32 - expo_x));
    xx.part.hi = (xx.part.hi >> expo_x);
  }
  expo_x = xx.part.lo & 1; 
  u = xx.part.lo;
  xx.part.lo += (t == 0x80000000) ? expo_x : (t >> 31);
  xx.part.hi += (u > xx.part.lo);
  xx.part.hi |= yy.part.hi;
  return xx.d;
}

inline double nextafter(double a, double b)
{
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;
  unsigned long long int ia;
  unsigned long long int ib;
  cvt.d = a;
  ia = cvt.l;
  cvt.d = b;
  ib = cvt.l;
  if (__isnan(a) || __isnan(b)) return a + b; 
  if (((ia | ib) << 1) == 0ULL) return b;
  if (a == 0.0) {
    return copysign (4.9406564584124654e-324, b); 
  }
  if ((a < b) && (a < 0.0)) ia--;
  if ((a < b) && (a > 0.0)) ia++;
  if ((a > b) && (a < 0.0)) ia++;
  if ((a > b) && (a > 0.0)) ia--;
  cvt.l = ia;
  return cvt.d;
}

inline double erf(double a)
{
  double t, r, q;

  t = fabs(a);
  if (t >= 1.0) {
    r =        -1.28836351230756500E-019;
    r = r * t + 1.30597472161093370E-017;
    r = r * t - 6.33924401259620500E-016;
    r = r * t + 1.96231865908940140E-014;
    r = r * t - 4.35272243559990750E-013;
    r = r * t + 7.37083927929352150E-012;
    r = r * t - 9.91402142550461630E-011;
    r = r * t + 1.08817017167760820E-009;
    r = r * t - 9.93918713097634620E-009;
    r = r * t + 7.66739923255145500E-008;
    r = r * t - 5.05440278302806720E-007;
    r = r * t + 2.87474157099000620E-006;
    r = r * t - 1.42246725399722510E-005;
    r = r * t + 6.16994555079419460E-005;
    r = r * t - 2.36305221938908790E-004;
    r = r * t + 8.05032844055371070E-004;
    r = r * t - 2.45833366629108140E-003;
    r = r * t + 6.78340988296706120E-003;
    r = r * t - 1.70509103597554640E-002;
    r = r * t + 3.93322852515666300E-002;
    r = r * t - 8.37271292613764040E-002;
    r = r * t + 1.64870423707623280E-001;
    r = r * t - 2.99729521787681470E-001;
    r = r * t + 4.99394435612628580E-001;
    r = r * t - 7.52014596480123030E-001;
    r = r * t + 9.99933138314926250E-001;
    r = r * t - 1.12836725321102670E+000;
    r = r * t + 9.99998988715182450E-001;
    q = exp (-t * t);
    r = 1.0 - r * q;
    if (t >= 6.5) {
      r = 1.0;
    }    
    a = copysign (r, a);
  } else {
    q = a * a;
    r =        -7.77946848895991420E-010;
    r = r * q + 1.37109803980285950E-008;
    r = r * q - 1.62063137584932240E-007;
    r = r * q + 1.64471315712790040E-006;
    r = r * q - 1.49247123020098620E-005;
    r = r * q + 1.20552935769006260E-004;
    r = r * q - 8.54832592931448980E-004;
    r = r * q + 5.22397760611847340E-003;
    r = r * q - 2.68661706431114690E-002;
    r = r * q + 1.12837916709441850E-001;
    r = r * q - 3.76126389031835210E-001;
    r = r * q + 1.12837916709551260E+000;
    a = r * a;
  }
  return a;
}

inline double erfc(double a)
{
  double p, q, h, l;

  if (a < 0.75) {
    return 1.0 - erf(a);
  } 
  if (a > 27.3) {
    return 0.0;
  }
  if (a < 5.0) {
    double t;
    t = 1.0 / a;
    p =         1.9759923722227928E-008;
    p = p * t - 1.0000002670474897E+000;
    p = p * t - 7.4935303236347828E-001;
    p = p * t - 1.5648136328071860E-001;
    p = p * t + 1.2871196242447239E-001;
    p = p * t + 1.1126459974811195E-001;
    p = p * t + 4.0678642255914332E-002;
    p = p * t + 7.9915414156678296E-003;
    p = p * t + 7.1458332107840234E-004;
    q =     t + 2.7493547525030619E+000;
    q = q * t + 3.3984254815725423E+000;
    q = q * t + 2.4635304979947761E+000;
    q = q * t + 1.1405284734691286E+000;
    q = q * t + 3.4130157606195649E-001;
    q = q * t + 6.2250967676044953E-002;
    q = q * t + 5.5661370941268700E-003;
    q = q * t + 1.0575248365468671E-009;
    p = p / q;
    p = p * t;
    h = ((int)(a * 16.0)) * 0.0625;
    l = (a - h) * (a + h);
    q = exp(-h * h) * exp(-l);
    q = q * 0.5;
    p = p * q + q;
    p = p * t;
  } else {
    double ooa, ooasq;

    ooa = 1.0 / a;
    ooasq = ooa * ooa;
    p =            -4.0025406686930527E+005;
    p = p * ooasq + 1.4420582543942123E+005;
    p = p * ooasq - 2.7664185780951841E+004;
    p = p * ooasq + 4.1144611644767283E+003;
    p = p * ooasq - 5.8706000519209351E+002;
    p = p * ooasq + 9.1490086446323375E+001;
    p = p * ooasq - 1.6659491387740221E+001;
    p = p * ooasq + 3.7024804085481784E+000;
    p = p * ooasq - 1.0578553994424316E+000;
    p = p * ooasq + 4.2314218745087778E-001;
    p = p * ooasq - 2.8209479177354962E-001;
    p = p * ooasq + 5.6418958354775606E-001;
    h = a * a;
    h = ((int)(a * 16.0)) * 0.0625;
    l = (a - h) * (a + h);
    q = exp(-h * h) * exp(-l);
    p = p * ooa;
    p = p * q;
  }
  return p;
}

inline double lgamma(double a)
{
  double s;
  double t;
  double i;
  double fa;
  double sum;
  long long int quot;
  if (__isnan(a) || __isinf(a)) {
    return a * a;
  }
  fa = fabs(a);
  if (fa >= 3.0) {
    if (fa >= 8.0) {
      


      s = 1.0 / fa;
      t = s * s;
      sum =          -0.1633436431e-2;
      sum = sum * t + 0.83645878922e-3;
      sum = sum * t - 0.5951896861197e-3;
      sum = sum * t + 0.793650576493454e-3;
      sum = sum * t - 0.277777777735865004e-2;
      sum = sum * t + 0.833333333333331018375e-1;
      sum = sum * s + 0.918938533204672;
      s = 0.5 * log (fa);
      t = fa - 0.5;
      s = s * t;
      t = s - fa;
      s = s + sum;
      t = t + s;
    } else {
      i = fa - 3.0;
      s =        -4.02412642744125560E+003;
      s = s * i - 2.97693796998962000E+005;
      s = s * i - 6.38367087682528790E+006;
      s = s * i - 5.57807214576539320E+007;
      s = s * i - 2.24585140671479230E+008;
      s = s * i - 4.70690608529125090E+008;
      s = s * i - 7.62587065363263010E+008;
      s = s * i - 9.71405112477113250E+008;
      t =     i - 1.02277248359873170E+003;
      t = t * i - 1.34815350617954480E+005;
      t = t * i - 4.64321188814343610E+006;
      t = t * i - 6.48011106025542540E+007;
      t = t * i - 4.19763847787431360E+008;
      t = t * i - 1.25629926018000720E+009;
      t = t * i - 1.40144133846491690E+009;
      t = s / t;
      t = t + i;
    }
  } else if (fa >= 1.5) {
    i = fa - 2.0;
    t =         9.84839283076310610E-009;
    t = t * i - 6.69743850483466500E-008;
    t = t * i + 2.16565148880011450E-007;
    t = t * i - 4.86170275781575260E-007;
    t = t * i + 9.77962097401114400E-007;
    t = t * i - 2.03041287574791810E-006;
    t = t * i + 4.36119725805364580E-006;
    t = t * i - 9.43829310866446590E-006;
    t = t * i + 2.05106878496644220E-005;
    t = t * i - 4.49271383742108440E-005;
    t = t * i + 9.94570466342226000E-005;
    t = t * i - 2.23154589559238440E-004;
    t = t * i + 5.09669559149637430E-004;
    t = t * i - 1.19275392649162300E-003;
    t = t * i + 2.89051032936815490E-003;
    t = t * i - 7.38555102806811700E-003;
    t = t * i + 2.05808084278121250E-002;
    t = t * i - 6.73523010532073720E-002;
    t = t * i + 3.22467033424113040E-001;
    t = t * i + 4.22784335098467190E-001;
    t = t * i;
  } else if (fa >= 0.7) {
    i = 1.0 - fa;
    t =         1.17786911519331130E-002;  
    t = t * i + 3.89046747413522300E-002;
    t = t * i + 5.90045711362049900E-002;
    t = t * i + 6.02143305254344420E-002;
    t = t * i + 5.61652708964839180E-002;
    t = t * i + 5.75052755193461370E-002;
    t = t * i + 6.21061973447320710E-002;
    t = t * i + 6.67614724532521880E-002;
    t = t * i + 7.14856037245421020E-002;
    t = t * i + 7.69311251313347100E-002;
    t = t * i + 8.33503129714946310E-002;
    t = t * i + 9.09538288991182800E-002;
    t = t * i + 1.00099591546322310E-001;
    t = t * i + 1.11334278141734510E-001;
    t = t * i + 1.25509666613462880E-001;
    t = t * i + 1.44049896457704160E-001;
    t = t * i + 1.69557177031481600E-001;
    t = t * i + 2.07385551032182120E-001;
    t = t * i + 2.70580808427600350E-001;
    t = t * i + 4.00685634386517050E-001;
    t = t * i + 8.22467033424113540E-001;
    t = t * i + 5.77215664901532870E-001;
    t = t * i;
  } else {
    t =         -9.04051686831357990E-008;
    t = t * fa + 7.06814224969349250E-007;
    t = t * fa - 3.80702154637902830E-007;
    t = t * fa - 2.12880892189316100E-005;
    t = t * fa + 1.29108470307156190E-004;
    t = t * fa - 2.15932815215386580E-004;
    t = t * fa - 1.16484324388538480E-003;
    t = t * fa + 7.21883433044470670E-003;
    t = t * fa - 9.62194579514229560E-003;
    t = t * fa - 4.21977386992884450E-002;
    t = t * fa + 1.66538611813682460E-001;
    t = t * fa - 4.20026350606819980E-002;
    t = t * fa - 6.55878071519427450E-001;
    t = t * fa + 5.77215664901523870E-001;
    t = t * fa;
    t = t * fa + fa;
    t = -log (t);
  }
  if (a >= 0.0) return t;
  if (fa < 1e-19) return -log(fa);
  i = floor(fa);       
  if (fa == i) return 1.0 / (fa - i); 
  i = rint (2.0 * fa);
  quot = (long long int)i;
  i = fa - 0.5 * i;
  i = i * 3.1415926535897931e+0;
  if (quot & 1) {
    i = cos(i);
  } else {
    i = sin(i);
  }
  i = fabs(i);
  t = log(3.1415926535897931e+0 / (i * fa)) - t;
  return t;
}

inline unsigned long long int __internal_host_nan_kernel(const char *s)
{
  unsigned long long i = 0;
  int c;
  int ovfl = 0;
  int invld = 0;
  if (s && (*s == '0')) {
    s++;
    if ((*s == 'x') || (*s == 'X')) {
      s++; 
      while (*s == '0') s++;
      while (*s) {
        if (i > 0x0fffffffffffffffULL) {
          ovfl = 1;
        }
        c = (((*s) >= 'A') && ((*s) <= 'F')) ? (*s + 'a' - 'A') : (*s);
        if ((c >= 'a') && (c <= 'f')) { 
          c = c - 'a' + 10;
          i = i * 16 + c;
        } else if ((c >= '0') && (c <= '9')) { 
          c = c - '0';
          i = i * 16 + c;
        } else {
          invld = 1;
        }
        s++;
      }
    } else {
      while (*s == '0') s++;
      while (*s) {
        if (i > 0x1fffffffffffffffULL) {
          ovfl = 1;
        }
        c = *s;
        if ((c >= '0') && (c <= '7')) { 
          c = c - '0';
          i = i * 8 + c;
        } else {
          invld = 1; 
        }
        s++;
      }
    }
  } else if (s) {
    while (*s) {
      c = *s;
      if ((i > 1844674407370955161ULL) || 
          ((i == 1844674407370955161ULL) && (c > '5'))) {
        ovfl = 1;
      }
      if ((c >= '0') && (c <= '9')) { 
        c = c - '0';
        i = i * 10 + c;
      } else {
        invld = 1;
      }
      s++;
    }
  }
  if (ovfl) {
    i = ~0ULL;
  }
  if (invld) {
    i = 0ULL;
  }
  i = (i & 0x000fffffffffffffULL) | 0x7ff8000000000000ULL;
  return i;
}

inline double nan(const char *tagp)
{
  volatile union {
    unsigned long long l;
    double d;
  } cvt;

  cvt.l = __internal_host_nan_kernel(tagp);
  return cvt.d;
}

inline double __host_tgamma_kernel(double a)
{
  double t;
  t =       - 4.4268934071252475E-010;
  t = t * a - 2.0266591846658954E-007;
  t = t * a + 1.1381211721119527E-006;
  t = t * a - 1.2507734816630748E-006;
  t = t * a - 2.0136501740408771E-005;
  t = t * a + 1.2805012607354486E-004;
  t = t * a - 2.1524140811527418E-004;
  t = t * a - 1.1651675459704604E-003;
  t = t * a + 7.2189432248466381E-003;
  t = t * a - 9.6219715326862632E-003;
  t = t * a - 4.2197734554722394E-002;
  t = t * a + 1.6653861138250356E-001;
  t = t * a - 4.2002635034105444E-002;
  t = t * a - 6.5587807152025712E-001;
  t = t * a + 5.7721566490153287E-001;
  t = t * a + 1.0000000000000000E+000;
  return t;
}

inline double __host_stirling_poly(double a)
{
  double x = 1.0 / a;
  double z = 0.0;
  z =       + 8.3949872067208726e-004;
  z = z * x - 5.1717909082605919e-005;
  z = z * x - 5.9216643735369393e-004;
  z = z * x + 6.9728137583658571e-005;
  z = z * x + 7.8403922172006662e-004;
  z = z * x - 2.2947209362139917e-004;
  z = z * x - 2.6813271604938273e-003;
  z = z * x + 3.4722222222222220e-003;
  z = z * x + 8.3333333333333329e-002;
  z = z * x + 1.0000000000000000e+000;
  return z;
}

inline double __host_tgamma_stirling(double a)
{
  double z;
  double x;
  z = __host_stirling_poly (a);
  if (a < 142.0) {
    x = pow (a, a - 0.5);
    a = x * exp (-a);
    a = a * 2.5066282746310007e+0;
    return a * z;
  } else if (a < 172.0) {
    x = pow (a, 0.5 * a - 0.25);
    a = x * exp (-a);
    a = a * 2.5066282746310007e+0;
    a = a * z;
    return a * x;
  } else {
    return exp(1000.0); 
  }
}

inline double tgamma(double a)
{
  double s, xx, x = a;
  if (__isnan(a)) {
    return a + a;
  }
  if (fabs(x) < 20.0) {
    if (x >= 0.0) {
      s = 1.0;
      xx = x;
      while (xx > 1.5) {
        xx = xx - 1.0;
        s = s * xx;
      }
      if (x >= 0.5) {
        xx = xx - 1.0;
      }
      xx = __host_tgamma_kernel (xx);
      if (x < 0.5) {
        xx = xx * x;
      }
      s = s / xx;
    } else {
      xx = x;
      s = xx;
      if (x == floor(x)) {
        return 0.0 / (x - floor(x));
      }
      while (xx < -0.5) {
        xx = xx + 1.0;
        s = s * xx;
      }
      xx = __host_tgamma_kernel (xx);
      s = s * xx;
      s = 1.0 / s;
    }
    return s;
  } else {
    if (x >= 0.0) {
      return __host_tgamma_stirling (x);
    } else {
      double t;
      int quot;
      if (x == floor(x)) {
        return 0.0 / (x - floor(x));
      }
      if (x < -185.0) {
        int negative;
        x = floor(x);
        negative = ((x - (2.0 * floor(0.5 * x))) == 1.0);
        return negative ? (-1.0 / 1e308 / 1e308) : 0.0;
      }
      
      xx = rint (2.0 * x);
      quot = (int)xx;
      xx = -0.5 * xx + x;
      xx = xx * 3.1415926535897931e+0;
      if (quot & 1) {
        xx = cos (xx);
      } else {
        xx = sin (xx);
      }
      if (quot & 2) {
        xx = -xx;
      }
      x = fabs (x);
      s = exp (-x);
      t = x - 0.5;
      if (x > 140.0) t = 0.5 * t;
      t = pow (x, t);
      if (x > 140.0) s = s * t;
      s = s * __host_stirling_poly (x);
      s = s * x;
      s = s * xx;
      s = 1.0 / s;
      s = s * 1.2533141373155003e+0;
      s = s / t;
      return s;
    }
  }
}








#line 12936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"








inline int __signbitl(long double a)
{
  return __signbit((double)a);
}

inline int __signbitf(float a)
{
  return __signbit((double)a);
}

inline int __finitel(long double a)
{
  return __finite((double)a);
}

inline int __finitef(float a)
{
  return __finite((double)a);
}

inline int __isinfl(long double a)
{
  return __isinf((double)a);
}

inline int __isinff(float a)
{
  return __isinf((double)a);
}

inline int __isnanl(long double a)
{
  return __isnan((double)a);
}

inline int __isnanf(float a)
{
  return __isnan((double)a);
}

inline float fmaxf(float a, float b)
{
  return (float)fmax((double)a, (double)b);
}

inline float fminf(float a, float b)
{
  return (float)fmin((double)a, (double)b);
}

inline float roundf(float a)
{
  return (float)round((double)a);
}

inline long int lroundf(float a)
{
  return lround((double)a);
}

inline long long int llroundf(float a)
{
  return llround((double)a);
}

inline float truncf(float a)
{
  return (float)trunc((double)a);
}

inline float rintf(float a)
{
  return (float)rint((double)a);
}

inline float nearbyintf(float a)
{
  return (float)nearbyint((double)a);
}

inline long int lrintf(float a)
{
  return lrint((double)a);
}

inline long long int llrintf(float a)
{
  return llrint((double)a);
}

inline float logbf(float a)
{
  return (float)logb((double)a);
}

inline float scalblnf(float a, long int b)
{
  return (float)scalbln((double)a, b);
}

inline float log2f(float a)
{
  return (float)log2((double)a);
}

inline float exp2f(float a)
{
  return (float)exp2((double)a);
}

inline float acoshf(float a)
{
  return (float)acosh((double)a);
}

inline float asinhf(float a)
{
  return (float)asinh((double)a);
}

inline float atanhf(float a)
{
  return (float)atanh((double)a);
}

inline float cbrtf(float a)
{
  return (float)cbrt((double)a);
}

inline float expm1f(float a)
{
  return (float)expm1((double)a);
}

inline float fdimf(float a, float b)
{
  return (float)fdim((double)a, (double)b);
}

inline float log1pf(float a)
{
  return (float)log1p((double)a);
}

inline float scalbnf(float a, int b)
{
  return (float)scalbn((double)a, b);
}

inline float fmaf(float a, float b, float c)
{
  return (float)fma((double)a, (double)b, (double)c);
}

inline int ilogbf(float a)
{
  return ilogb((double)a);
}

inline float erff(float a)
{
  return (float)erf((double)a);
}

inline float erfcf(float a)
{
  return (float)erfc((double)a);
}

inline float lgammaf(float a)
{
  return (float)lgamma((double)a);
}

inline float tgammaf(float a)
{
  return (float)tgamma((double)a);
}

inline float remquof(float a, float b, int *quo)
{
  return (float)remquo((double)a, (double)b, quo);
}

inline float remainderf(float a, float b)
{
  return (float)remainder((double)a, (double)b);
}














#line 13148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

inline float copysignf(float a, float b)
{
  volatile union {
    float f;
    unsigned int i;
  } aa, bb;

  aa.f = a;
  bb.f = b;
  aa.i = (aa.i & ~0x80000000) | (bb.i & 0x80000000);
  return aa.f;
}

inline float nextafterf(float a, float b)
{
  volatile union {
    float f;
    unsigned int i;
  } cvt;
  unsigned int ia;
  unsigned int ib;
  cvt.f = a;
  ia = cvt.i;
  cvt.f = b;
  ib = cvt.i;
  if (__isnanf(a) || __isnanf(b)) return a + b; 
  if (((ia | ib) << 1) == 0) return b;
  if (a == 0.0f) {
    return copysignf(1.401298464e-045f, b); 
  }
  if ((a < b) && (a < 0.0f)) ia--;
  if ((a < b) && (a > 0.0f)) ia++;
  if ((a > b) && (a < 0.0f)) ia++;
  if ((a > b) && (a > 0.0f)) ia--;
  cvt.i = ia;
  return cvt.f;
}

inline float nanf(const char *tagp)
{
  volatile union {
    float f;
    unsigned int i;
  } cvt;
  
  cvt.i = (unsigned int)__internal_host_nan_kernel(tagp);
  cvt.i = (cvt.i & 0x007fffff) | 0x7fc00000;
  return cvt.f;
}

#line 13200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"







inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  } 
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));                
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;


#line 13228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
  if (__signbit(a))
#line 13230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"
  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  } 
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  } 
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                    
    if (fa == 1.0) {
      t = a * exp(1000.0);        
    }
  } else if (fa >= 0.9375) {
    



    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {
    



    t = a * a - .87890625;
    p =         .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q =     t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {
    



    t = a * a - .5625;
    p =       - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q =     t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                        
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);  
    }
  } 
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q =     t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 =  2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a); 
  if (x < 32.0) {
    








  
     
     
    t1 = x - 4.0; 
    t2 = x + 4.0; 
    t2 = t1 / t2;
       
    t1 =         - 3.5602694826817400E-010; 
    t1 = t1 * t2 - 9.7239122591447274E-009; 
    t1 = t1 * t2 - 8.9350224851649119E-009; 
    t1 = t1 * t2 + 1.0404430921625484E-007; 
    t1 = t1 * t2 + 5.8806698585341259E-008; 
    t1 = t1 * t2 - 8.2147414929116908E-007; 
    t1 = t1 * t2 + 3.0956409853306241E-007; 
    t1 = t1 * t2 + 5.7087871844325649E-006; 
    t1 = t1 * t2 - 1.1231787437600085E-005; 
    t1 = t1 * t2 - 2.4399558857200190E-005; 
    t1 = t1 * t2 + 1.5062557169571788E-004; 
    t1 = t1 * t2 - 1.9925637684786154E-004; 
    t1 = t1 * t2 - 7.5777429182785833E-004; 
    t1 = t1 * t2 + 5.0319698792599572E-003; 
    t1 = t1 * t2 - 1.6197733895953217E-002; 
    t1 = t1 * t2 + 3.7167515553018733E-002; 
    t1 = t1 * t2 - 6.6330365827532434E-002; 
    t1 = t1 * t2 + 9.3732834997115544E-002; 
    t1 = t1 * t2 - 1.0103906603555676E-001; 
    t1 = t1 * t2 + 6.8097054254735140E-002; 
    t1 = t1 * t2 + 1.5379652102605428E-002; 
    t1 = t1 * t2 - 1.3962111684056291E-001; 
    t1 = t1 * t2 + 1.2329951186255526E+000; 
      
    t2 = 2.0 * x + 1.0; 
    t1 = t1 / t2;
  } else {
    
    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 =         -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {
    
    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}

#line 13680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

#line 13682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"





#line 13688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"



#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions_dbl_ptx1.h"













































































































































































































































































































































































































































































































































#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions_dbl_ptx1.h"

#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions_dbl_ptx1.h"
#line 13692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

#line 13694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"





#line 13700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

#line 13702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h"

#line 168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\common_functions.h"

#line 170 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\common_functions.h"

#line 224 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"





#line 230 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

#pragma pack()



#pragma warning(disable: 4099)



#pragma warning(disable: 4408)

#line 242 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

#line 244 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

#line 246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"

#line 248 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\crt/host_runtime.h"
#line 3 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.cudafe1.stub.c"
#line 1 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.fatbin.c"
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\fatBinaryCtl.h"
































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\fatbinary.h"
















































typedef struct fatBinaryHeader *computeFatBinaryFormat_t;




#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\fatbinary.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\fatbinary.h"



















struct __declspec(align(8)) fatBinaryHeader
{
  unsigned int           magic;
  unsigned short         version;
  unsigned short         headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX      = 0x0001,
  FATBIN_KIND_ELF      = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;

















#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\fatbinary.h"
#line 34 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\fatBinaryCtl.h"






typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,           
  FBCTL_ERROR_UNRECOGNIZED,   
  FBCTL_ERROR_NO_CANDIDATE,   
  FBCTL_ERROR_COMPILE_FAILED, 
  FBCTL_ERROR_INTERNAL        
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);














typedef enum {
  fatBinary_PreferBestCode,  
  fatBinary_AvoidPTX,        
  fatBinary_ForcePTX,        
  fatBinary_JITIfNotMatch    
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data, 
                                                 void* *elf, size_t *esize);








typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;  

} __fatBinC_Wrapper_t;

















#line 124 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\fatBinaryCtl.h"



#line 128 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v5.5\\include\\fatBinaryCtl.h"
#line 2 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.fatbin.c"



extern "C" {
#line 7 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.fatbin.c"

#pragma data_seg(".nv_fatbin")
static const __declspec(allocate(".nv_fatbin")) unsigned long long fatbinData[]= {
0x00100001ba55ed50,0x0000000000001200,0x000000b001010002,0x0000000000000888,
0x0000000000000000,0x0000000a00010002,0x0000006800000040,0x0000000000001046,
0x0000000000000000,0x0000000000001e54,0x73726573552f3a43,0x75636f442f38482f,
0x69562f73746e656d,0x757453206c617573,0x32313032206f6964,0x7463656a6f72502f,
0x656449706d412f73,0x6449706d412f746e,0x656b555047746e65,0x706d412f6c656e72,
0x555047746e656449,0x6b2f6c656e72656b,0x75632e6c656e7265,0x0000000000000000,
0x46dc8c7d59ed9c78,0xe5df38fd8fe37f15,0x1243097cb928b92e,0x392f6f6ef763d548,
0x8144ef484d1f2572,0xaf5e395b22412688,0xd7bdb2bd7774cf77,0x21f29108b6c5510b,
0xa802041022952281,0x22104080a4548480,0x11029405204050b5,0x3f9402283f895108,
0xdec79ef10a855a8a,0xe7f82a5b517bbdb5,0x9bf7bf7bde67b246,0xde87eef67999e337,
0xbc008cd8c631ef71,0x07617ed058057008,0x8a086c4300adf5c0,0x735923607b0882a0,
0x56c65e9e39eb92ee,0x78ae67b5f86d9f58,0xa69d301f7bfded39,0xcb9ae416e3acb759,
0x25dda807b559ab39,0x9662ad06fd2b31dd,0x69acc734bc8d35db,0x9a6add7d11baeeae,
0x5d71f503eb31ce81,0x993dd5f504195bcb,0x1154648c2f72a243,0x59df65cc765cbd57,
0xed5add558af8798f,0xa7b1cc6e986f5372,0xb778ade68ba1faec,0x40cf0ebdfcc4f59b,
0x434ee96f45768cd3,0x757953757d34198b,0xc9a8795750f6b193,0x113806c22da44772,
0x125e18f581a1c793,0xc88c6f58f3e50c5e,0xfe6257c8889eb097,0x4581069c989bf043,
0x6216067263261965,0x316a1672622704b2,0x153c0ac9885f0539,0xd786bed05b604793,
0x1cce812df00db186,0xcbe793534a3b122a,0x8e0b39335ab46726,0x2d2dc74d749d2fec,
0x3661bb46da8e95cc,0x5d7adb72ca74b73d,0x4c2d5b2c576bcfbd,0xa603fb1dc74a174d,
0x510562d68dc3b681,0x7ece724fc73dc6dd,0x316a1869b32dd80d,0xba6ed2c618cfed37,
0x41e9ab545669ad56,0x0335b1b61f95125a,0x3e056572927334c3,0x081b3850c09db045,
0x59030c840c1f0912,0x914aa88bb7718879,0x8903562ac8b95a6b,0x7ac4be51925384de,
0x7d718a48a8f5244c,0x502ce4544f3e3b9d,0xb75abb522a94b268,0x4925087b29240f75,
0xca41375cbb762a16,0x7c5bfd5359bb7508,0xab382814cf8b514c,0x34fa96290079e060,
0x3195a693eb3f65f2,0xe8fdafcc8053f7e6,0x863f4790ea7a30c7,0xc10d1f78a24973d1,
0x03fd840d10dd455f,0xc9dd9febc30c8a5b,0xb2dd82acd3c7090f,0x4cb95136873c2ab4,
0xe5f34d0253fc85f3,0x9fb20dcdee5f34e8,0xc7e8b66046991c63,0x8c14942a2f78fbc7,
0xd6fb8f65ba292450,0x4d7c6370fc52a375,0x22074951d1af14fe,0x81cb946955da4591,
0x4c9020380d9031bc,0x58ad32a3d78d2abb,0xde10dd6bfd8cef0b,0x4ae2bd697abe3e7d,
0x4dd5663d437a39ac,0xaed76c70cb2ef4b7,0xa6e74f4ed17c6a7a,0x6f51a6ac948ea74a,
0x3c5a9f77c77ecc57,0xb11eaab5c55878ba,0x613a33e167b6ad1b,0xe4e474af2c07f5db,
0xe86cdcd9e5a5c3d1,0x6300e5bfef1c325f,0xe6ff7d57f815a97f,0xab6ad6b574b155b2,
0xbe31e9fc0bdfd746,0xcf86fef218c1feae,0xbfdf3e1bbbe5cc2f,0x3abb87cf86e1f3e1,
0xf1e10035fbbdb7df,0x03430e42cd579d82,0x54df2e3e4f27f176,0x204b7375598afbb0,
0xfefa5bfddfc5f9fc,0xe6a6196cb98aa9c3,0x7e22d130d59e9bb4,0x5d985f20b91f6fe5,
0x14662af2cf0f5db2,0xe58a27ea46be9072,0x56d9de6a41c755b6,0xcb54278089c5ff44,
0xc0722c125b73fabe,0x9fa049d365ac7152,0xa51eaa9db6e8a3fb,0xdf84a6ec8f0c8279,
0xe7196dbebffa9276,0x9064cc97ea1276c7,0x4b1a6edebac83c72,0x8a3e1e5a4c71a61a,
0xbd3e45c3befe38ee,0x53ea32131d466a66,0x42aceecef77c74fe,0x7c312f32718fc6fa,
0xb3cb9155a9bb0dde,0x7ba1b156e48f66ec,0x4edfb1e00f03314b,0xbd4f8e9e950316f8,
0xe9dfad083075b96b,0x6b4f4da1b7143763,0xc3e200632c3767ba,0x7b13e03ab0a01377,
0xf00e3393f1a33008,0x98511012bf2fec67,0x02037b1e23e1481a,0x49307e03e1f70666,
0xbbccd99f01d5d980,0x2236b8f0b1cda3c0,0x79156e9a077c8726,0x0e3de69f0f4c03bf,
0x71fd485c39bcbd30,0x4d553570d1bdf93c,0xd6e2f0b9001a58cf,0x6c8b83962b356210,
0x0db97b752fe7ea00,0xad06af8d6f2fa9ea,0xf1f774d1dbd3ae52,0x4822bfebe9e128dc,
0x7b22122f4038d8a3,0xf5de4f05cdf1e7eb,0x2b8cceeccb6ccc4c,0x8177993c29632b77,
0xd9c6a20a28a03998,0xc6c28a33115e657e,0x373e38b8b8047bd1,0x29321489bcbb4054,
0x3efb4aa819bc6130,0x4fb842e91993e872,0x57d0a3328a611476,0xca60986bbf1c5b11,
0x708462e19a8f211b,0x38820b975c27d664,0xd9eb4343e196fc38,0x61143772a3164c06,
0x7fce0943de00b888,0xc41e0ee815678bb3,0xf8261322605133b7,0x607b7de02e6bd3ad,
0x4b58241909950412,0x25ad512d6a896b54,0x98544fbff544b5aa,0x78c3f1957d59f8a1,
0xf0fff73bed773bed,0xbedaf9de1d087b9d,0xdd9b77e0995ce373,0x75754cb1325534ce,
0xae7b60f791517a05,0x7574e98471f19bab,0x6eaea5ed80b71f45,0xaef5db067c85f696,
0x6eaef9cc238faf6e,0x39babb575c47cf9f,0x10a9fd69b638f71f,0x31c90865636fb1ee,
0xcc3cda4186271150,0x665778e6ea8d00f7,0xb716505fb22237b4,0x57bee2e73cc39009,
0x3353ba79c84573a7,0xa1b549a9e38e953d,0x5ad9e6a2deeab4b7,0xb770e4a5af00a675,
0xc81eeabc58d5673a,0x750533b9cd4db9f9,0xdcae195f27649ff5,0x7380ee33876fb5c3,
0x773b76e38d65fbf4,0xef75d807981d4f4d,0x18e3e61acd95f7d1,0xfbf6270ab83e3f7e,
0x1eaf4f549912e2cf,0x39db850e7df3fdee,0xccec4254af41d194,0xc544fd5e80f7eaa4,
0x2f79e8abecf3db57,0xda343cecdba45a75,0xeb48fb4d0edd5cf5,0xe71b9b47d237b647,
0xae5eb87d8187d76e,0x469dd39d7acbb756,0x387db627eea73b97,0x6fb3fbcde58ae6ef,
0xe7cd487fb9c92b36,0x51fe57a65f32c4d5,0xb41739535e050780,0x8e21dbc01daf47e9,
0x57b45cda44c6c675,0x679d8d855d9570d3,0x5c0bd72367724a76,0x1ee76a73dc7a072f,
0xfa1b3d84bf42713c,0x8223d2f40d9f5c49,0x74ce105650f1019a,0x49d5363496e78a3e,
0x626772cb80cd3d8f,0xac5199e76aca1f20,0xac26650e9e1e220f,0xa43e88bd5f49d6bb,
0xa57a7f5e26e0b3a7,0xc45c88c486be8e9b,0xee049454edc5996b,0xf73f0e007678681b,
0x6e9237223ae08840,0x3e7cdce9e4dff01d,0xf925627e24e3e3e2,0xe527e31c0570252e,
0x7847ee18cf261c7e,0xf8260f71fa0cfd7c,0xcbf70037dc008fce,0x67fdfb8323f7ee04,
0x025a1c783e34b702,0x307bf406e21375b7,0x5c00d76e205f8e31,0xcf13737f50ad579e,
0x1c3782001bdd343b,0x6f8066cf6f824a80,0xb82365783bef880e,0x209ee177cfc05beb,
0x3f95371eb137923e,0x2e860188b5ffe16c,0xe110bdf04f1f1cca,0x472f70246ef8474b,
0x2a6b105b6e089970,0xc38427fff95b49c0,0xbf9e831d31862bed,0x79d1da0f6dc40e3f,
0x82672c376ffa1e21,0xb5cb08fa0b2b1c2b,0xb654ec47afda8ae0,0xcb62b50fff64bc07,
0x000000000000005f,0x000000e801010001,0x00000000000007e0,0x0000004000000000,
0x0000000a00010004,0x0000006800000078,0x0000000000001046,0x0000000000000000,
0x0000000000002112,0x0000002c00000048,0x6e6f642d2d20672d,0x2d656772656d2d74,
0x6f6c626369736162,0x65722d2d20736b63,0x2d74612d6e727574,0x0000000020646e65,
0x73726573552f3a43,0x75636f442f38482f,0x69562f73746e656d,0x757453206c617573,
0x32313032206f6964,0x7463656a6f72502f,0x656449706d412f73,0x6449706d412f746e,
0x656b555047746e65,0x706d412f6c656e72,0x555047746e656449,0x6b2f6c656e72656b,
0x75632e6c656e7265,0x0000000000000000,0xcadb8b6d58ad9c78,0xf4b107fc81bcfe15,
0xa52565de778d4b42,0x6da12da06db96424,0x8e46923117d7a172,0xf4a1b2f248cb6d7a,
0x23472d919cccf7bf,0xf39d22660255d26f,0x307cb3728cfde73c,0xcbc52e88fbd55b4d,
0xed45d31b374ecb17,0x2d21f4ed1164a52e,0xf97b392d3abb4895,0x1b9adab2cbbfa9e2,
0xeee6e3b26f7b737a,0x0b1f9976cdecd357,0xbdb78e1cdcb61a5d,0xa1fd6af77db9bb0c,
0xa3c23f45de8d37a9,0x2eb6ea6f2ad7fd76,0xfa36f51ed553e8bb,0x4974a23aaa2c7747,
0x3dbe7dabadde9fd6,0x76ca615d379d6616,0xfb7f6803c684f9f9,0x1f4fe8dbfdfefef4,
0x55d8e1ddeaef463e,0x5afedebacff44dfb,0x1faedfef1f77eb75,0x50f30aef410e52e4,
0x99daaefb8e6d26e5,0xedbae7fe3e78be01,0xf2e5a19bdabb3052,0xda4882dab1d9c8f9,
0xfcdb9bab405c397d,0x7fbd074ba1e0fad5,0x3f288990474a8aa8,0xda12e9e6da1e7741,
0x13c8f9f8e46be407,0x4941537360cd58e1,0x9b1edc8f9e4e6c8f,0x3bb1f3c941c20752,
0x3e7d36009b1dd8f3,0xca111c7abbc983f6,0x8e86747b553d0f9e,0x39fe7dc7d5b7c5f4,
0x21ab0c1d3200683d,0x16ebf8d00bbe788d,0xbdbab7cd2637a3e2,0xda05b1f779ed77c0,
0xb8fcebeeeeaf3fbb,0x8c509cbbbdaefb33,0xdd221bfece077650,0x752017de1dddbdde,
0x4e4f030a38c7803a,0xf5669866aa4cf233,0xc1d74212d3ef576e,0xe9ddee8669f0bf70,
0xe07606867c1873ee,0x9f043d221a76e039,0x33676c85517d87a1,0xbd5dd5349bddb1b4,
0x496cfd0cc930f2ab,0xf092db3a199255d8,0x7c5c2276d98fa8b4,0x8343327aae461216,
0x890f392e1ebf0903,0x5570c63ac3324abc,0xc05f956df6a9aefb,0x19f82987d6d5d0cf,
0x3b639f8610f31afa,0xed9d1cf9e1040cbb,0xeea6867cb7287f97,0xe56cf0f2e9a5002f,
0xaa8bed52cf757433,0x7db3a39a26156581,0xab97ddd0cd13aeb8,0xa91ee87a6db22d28,
0x2f9b6db0249f7163,0x3eaab69b852ffa51,0x4450bbb9e16fd154,0x3c2e2d4d28b396cb,
0xa37c5ea97217a5d8,0x7fcc135e3c103660,0x1b31b6407fc5f2f7,0x7c7f2503f9a1fc94,
0xe21c2f6e75b68f0d,0xffdcbf9bf17cbc86,0x5fd42eacdc0d9994,0xea4816db1594c59d,
0x69e7e88ba1a1fb8c,0x14d760523d797e5f,0x05f2cbc28ba0ab32,0xb32f7c4818d68032,
0x82d00640b5660efc,0xc55fe06216e3bbe7,0xaec0c0e43532de8b,0x9b96eda396e471ae,
0x5419fb83ade99d6d,0x2120f168b17e4f7e,0x98d7baac79b48db1,0x646ff959462fb317,
0xfede9ffb9bcded6b,0x5a31cae315a847fd,0x17aca09a183bf616,0xacf52d8de2ededd1,
0x3733a5f66c81daea,0x73091e44459b51e4,0x84340c9febf064bf,0x30f31acb3ad8f153,
0x22508214951e4b7a,0xa0e54b1c552b3aac,0xce67732a92998994,0x79c333a80c95ca8c,
0xa21382d70367624c,0xedcca52e6322a712,0xd88598f31e64ac59,0x0aa2a857ce64214b,
0xce728414ecf6e760,0x92ea02a912a500c6,0x01289ea751860233,0xa53783384e11cea2,
0xaefa0d38c0402283,0x22ec746036632ab4,0x8056b583842a8989,0x4288fa10a3a8089c,
0x25a311137e0ef9c2,0xd546d556ea03187d,0xfa7231ec74e40989,0x5aa83c642e166498,
0xfc012b16f06d1f74,0x190a7084eb17f0e6,0xcbd74f84c23ae312,0x2c70032e43b8be16,
0xa36e9f632b052789,0xe240f50150462012,0x20b88c905664c460,0x2450a42754609773,
0x46580900019c95f7,0x02df32af1c78131e,0x11c610948cf1fdc4,0x8547014243324e2a,
0x62474719e4a05504,0x3b20895888fa156d,0x7ca4129193855959,0x3b80f85c684441e1,
0x63c059e935d926b7,0xaab08c58009acf65,0x9cf50ab5424c55b0,0x9f585872bea7745b,
0x93c653d92535422b,0x0bba9c201c56f1b3,0x31df41a43ee78269,0x14855a2331ae1860,
0xcbb50f59708bf521,0x4d44f6584bac49bb,0xe263f53b196f3bb3,0x290a724bcc829dc7,
0x515e84aa75543ca1,0xa84189c4d2d8455e,0xc1d564e5de63d6b0,0xeaa1603f64c12a4c,
0x27e576f073213f73,0xbbb10caa304e8127,0xa6461f6c094dca17,0xac5e4dd7791c27da,
0x218acb270ceeacb4,0x5e9afe74ba90fe45,0x8993bef1543c9ac5,0x04fa2a73652b55a2,
0x1bfc284ba1f330c1,0x389c4c102571284b,0xca25bd973ac52a17,0xde70919b300543ab,
0xb5cc2bea760de169,0xabea8368a2e07370,0xa97c216e35b058f3,0xeb456df1d1fbccd8,
0x5cb8b9a164b95dcc,0xedb1368a272d7bec,0xc7469c96b18c58ee,0x562d093536d42639,
0xed45c302f192ca59,0x858cb09b04ddc36a,0x1f71ffb86776fb1f,0xfc91a24a53e01ba9,
0x3838fb26558768cc,0x6f2305c415862657,0xabb0670551226dc5,0xe48dce870fb18e79,
0x1c136868e4c984f3,0xe7fa36671a752129,0xb2ed1ad8f57b8f7e,0x3a9c167ceaa9be20,
0xb40e850859d7de34,0x279e894306a5780b,0xec424f690f19388c,0xb384b2d463896706,
0xd033f2b803de02cb,0x712079c65ef1ef6d,0x8efc1d1dfb832442,0x2e8dca0810f89e9d,
0xe2fe0dd601db81a6,0xe5b098b85b67a1e8,0x3646f6b055383c54,0x2181e2a004007f4c,
0xfe43499cd8d87343,0xcc0f8730efb2734f,0xcd27c9cdb993d7f1,0x6387181f6b92c219,
0xc191f53ed33bd7b6,0xc1bf289a9d1718c8,0x353b1966fad4cc07,0x4876c1ba0ca3f311,
0x3f223a04876d0dbf,0x5f6191907764c2f7,0x32775dec585afcc5,0x1cdd49ea37d79724,
0x2889a69183121de9,0xe568bdf6c31980cb,0xae0e317c7553efd1,0x61c63b4f7c9f85b9,
0x8668ac9264045233,0x3b678e5192305f63,0xf9c52c5f0cf6ed0e,0x744a7e5d2c0dcc56,
0x82a0118dc3868b86,0x5ef6231792839ea3,0x6d587b94a831d9ea,0x989c00ef15e1cc2f,
0xbf76672600b82be6,0x650592e0aa994029,0x97f7a4c7b7b76279,0xa026fb287bfa3b29,
0x47419592fd8afdee,0x1797e892dc100856,0xdd94f6848e530073,0x3e8cb7093bc1257f,
0x44bac305dc951a5c,0xdc1f6e1c3023b783,0xc6633d0fb8a31775,0x592f0f366b0cfeca,
0x2e779f1627d72de7,0xe1d506908324f6dd,0x2827365f653614bb,0xc8228690953ca8b0,
0x8e2d96cca7541c59,0x4b7f204467828852,0x84e3e4fdc63ab04c,0x8db7c8687e31abfd,
0xa74ea703ff75db14,0x0000000000000039
};
#pragma data_seg()


}
#line 161 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.fatbin.c"


extern "C" {
#line 165 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.fatbin.c"
#pragma data_seg(".nvFatBinSegment")
__declspec(allocate(".nvFatBinSegment")) __declspec(align(8)) static const __fatBinC_Wrapper_t __fatDeviceText= 
	{ 0x466243b1, 1, fatbinData, 0 };
#pragma data_seg()

}
#line 172 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.fatbin.c"
#line 4 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.cudafe1.stub.c"
extern void __device_stub__Z6kerneliiPi(int, int, int *);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_14_kernel_cpp1_ii_b614c5e6(void);
#pragma section(".CRT$XCU",read,write)
__declspec(allocate(".CRT$XCU"))static void (*__dummy_static_init__sti____cudaRegisterAll_14_kernel_cpp1_ii_b614c5e6[])(void) = {__sti____cudaRegisterAll_14_kernel_cpp1_ii_b614c5e6};
void __device_stub__Z6kerneliiPi(int __par0, int __par1, int *__par2){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0U) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)4U) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)8U) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(int, int, int *))kernel)); (void)cudaLaunch(((char *)((void ( *)(int, int, int *))kernel))); };}
#line 4 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
void kernel( int __cuda_0,int __cuda_1,int *__cuda_2)
#line 5 "C:/Users/H8/Documents/Visual Studio 2012/Projects/AmpIdent/AmpIdentGPUkernel/AmpIdentGPUkernel/kernel.cu"
{__device_stub__Z6kerneliiPi( __cuda_0,__cuda_1,__cuda_2);

}
#line 1 "c:\\users\\h8\\documents\\visual studio 2012\\projects\\ampident\\ampidentgpukernel\\ampidentgpukernel\\debug\\kernel.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T20) {  { volatile static void **__ref; __ref = (volatile void **)__T20; }; __cudaRegisterFunction(__T20, (const char*)((void ( *)(int, int, int *))kernel), (char*)"_Z6kerneliiPi", "_Z6kerneliiPi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); }
static void __sti____cudaRegisterAll_14_kernel_cpp1_ii_b614c5e6(void) {  __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil);  }
#line 2 "kernel.cudafe1.stub.c"
#line 1 "kernel.cudafe1.stub.c"


